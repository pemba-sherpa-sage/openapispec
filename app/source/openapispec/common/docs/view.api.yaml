openapi: 3.0.0
info:
  title: View Service
  description: View Service
  version: '1.0'
  contact:
    email: anjali.israni@sage.com
    name: Anjali Israni
servers:
  - url: http://localhost:3000
tags:
  - name: Views
    description: View description -- explain what it's for and how it's used.
paths:
  /services/view:
    post:
      summary: Query a view
      description: Queries a view.
      tags:
        - Views
      operationId: post-services-view
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the query
                properties:
                  ia::result:
                    type: array
                    description: Fields requested in query
                    items:
                      type: object
                      description: ''
                      properties:
                        fieldName:
                          type: string
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/view.schema'
            examples:
              User Query:
                value:
                  key: '540'
                  viewType: user
                  filterParameters:
                    asOfDate: '2020-12-01'
                    caseSensitiveComparison: false
              System Query:
                value:
                  key: vendor::getAll
                  viewType: system
                  orderBy:
                    - name: asc
components:
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
  schemas:
    view.schema:
      title: view
      description: View
      type: object
      properties:
        key:
          type: string
          description: Key to identify the view
          example: '12'
        viewType:
          type: string
          description: Specify the type of view to execute
          example: user
          enum:
            - user
            - system
        filterParameters:
          anyOf:
            - properties:
                asOfDate:
                  type: string
                  description: |-
                    This date will determine the values for date macros used in filters. 
                    Example if asOfDate is set to "2021-03-05" then date macro "Prior Month" will be "02"
                    Supported date macros in filter comparison are
                      - today
                      - yesterday
                      - currentWeek
                      - lastWeek
                      - currentMonth
                      - priorMonth
                      - currentQuarter
                      - priorQuarter
                      - currentYear
                      - priorYear
                  example: today
                includeHierarchyFields:
                  type: boolean
                  example: true
                  default: false
                caseSensitiveComparison:
                  type: boolean
                  example: true
                  default: false
          type: object
        orderBy:
          type: array
          items:
            type: object
            properties:
              fieldName:
                type: string
                example: asc
                enum:
                  - asc
                  - desc
        start:
          type: integer
          description: Starting element
          example: 1
        size:
          type: integer
          description: Page size
          example: 100
      required:
        - key
        - viewType
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    metadata-pages.schema:
      title: metadata-pages
      description: Meta data for collection response
      type: object
      allOf:
        - $ref: '#/components/schemas/metadata.schema'
        - type: object
          properties:
            start:
              type: integer
              description: Start Element Number
              x-mappedTo: null
              readOnly: true
              example: 1
            pageSize:
              type: integer
              description: Page Size
              x-mappedTo: null
              readOnly: true
              example: 100
            next:
              type: integer
              description: Next Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: 101
            previous:
              type: integer
              description: Previous Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: null
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
