openapi: 3.0.0
info:
  title: contract-revenue-schedule post
  description: API to post contract-revenue-schedules
  version: '1.0'
  contact:
    name: Jim Reed
    email: jim.reed@sage.com
servers:
  - url: http://localhost:3000
tags:
  - name: Contract revenue schedules
    description: contract revenue schedules
paths:
  /services/contract/revenue-schedule/post:
    post:
      summary: Post contract revenue schedule
      description: You can post all J1 contract revenue schedule entries for a given customer (across contracts) or for a given contract.
      tags:
        - Contract revenue schedules
      operationId: post-contract-revenue-schedule-post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contract-schedule-post-request.typeref'
      responses:
        '200':
          description: Executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  ia::result:
                    $ref: '#/components/schemas/contract-schedule-post-response.typeref'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
        '400':
          $ref: '#/components/responses/400error'
components:
  schemas:
    contract-revenue-schedule-post-request:
      $ref: '#/components/schemas/contract-schedule-post-request.typeref'
    contract-revenue-schedule-post-response:
      $ref: '#/components/schemas/contract-schedule-post-response.typeref'
    contract-schedule-post-request.typeref:
      type: object
      title: contract-schedule-post-request
      description: post request
      x-mappedTo: __custom__
      required:
        - journal
        - asOfDate
      properties:
        journal:
          type: string
          description: Which journal to post this schedule for (J1 or J2).
          x-mappedTo: JOURNAL
          example: J1
          nullable: false
          enum:
            - J1
            - J2
        customer:
          type: object
          properties:
            key:
              type: string
              description: Customer Key. To post all schedule entries for the customer, omit customerKey. Required if not not providing contractKey or scheduleLineKeys.
              x-mappedTo: CUSTOMERKEY
              example: '2524'
        contract:
          type: object
          properties:
            key:
              type: string
              description: Contract Key. Required if not not providing customerKey or scheduleLineKeys.
              x-mappedTo: CONTRACTKEY
              example: '4578'
        scheduleLines:
          type: array
          description: List of schedule line keys. Required if not not providing customerKey or contractKey.
          x-mappedTo: SCHEDULEENTRIES
          items:
            type: object
            properties:
              key:
                type: string
                description: Schedule line key.
                x-mappedTo: SCHEDULEENTRYKEY
                example: '2524'
        asOfDate:
          type: string
          description: Post any unposted entries before this date. Required if not not providing scheduleLineKeys.
          x-mappedTo: ASOFDATE
          format: date
          nullable: false
          example: '2022-02-24'
        postingDate:
          type: string
          description: 'Posting date (Default: Scheduled posting date).'
          x-mappedTo: POSTINGDATE
          format: date
          example: '2022-02-24'
      examples: []
    contract-schedule-post-response.typeref:
      type: object
      title: contract-schedule-post-response
      description: post response
      x-mappedTo: __custom__
      properties:
        status:
          type: string
          description: status of the result
          x-mappedTo: STATUS
          example: completed
          enum:
            - completed
        details:
          type: array
          description: status details
          x-mappedTo: DETAILS
          items:
            type: string
      examples: []
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
