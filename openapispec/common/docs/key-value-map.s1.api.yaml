openapi: 3.0.0
info:
  title: key-value-map
  description: key-value-map API
  version: '1.0'
  contact:
    name: Anjali Israni
    email: anjali.israni@sage.com
servers:
  - url: http://localhost:3000
tags:
  - name: Key value maps
    description: Key value map description -- what it's for and where it's used.
paths:
  /services/key-value-map:
    get:
      summary: List key value maps
      description: Returns a collection with a key, ID, and link for each key value map.
      tags:
        - Key value maps
      operationId: get-services-key-value-map
      parameters:
        - $ref: '#/components/parameters/type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of key-value-map objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: key1
                        type: user
                        value:
                          text-color: red
                          background-color: black
                          font: Ariel
                        href: /services/key-value-map/key1
                      - key: key2
                        type: user
                        value:
                          text-color: red
                          background-color: black
                          font: Ariel
                        href: /services/key-value-map/key2
                      - key: key3
                        type: user
                        value:
                          text-color: red
                          background-color: black
                          font: Ariel
                        href: /services/key-value-map/key3
                    ia::meta:
                      totalCount: 3
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a key value map
      description: Creates a new key value map.
      tags:
        - Key value maps
      operationId: post-services-key-value-map
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key-value-map.s1.schema'
            examples:
              example-1:
                value:
                  key: key1
                  type: user
                  value:
                    text-color: blue
                    background-color: black
                    font: Ariel
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New key-value-map
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: key1
                      type: user
                      href: /services/key-value-map/key1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /services/key-value-map/{key}:
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/type'
    get:
      summary: Get a key value map
      description: Returns the data for a particular key.
      tags:
        - Key value maps
      operationId: get-services-key-value-map-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the key-value-map
                properties:
                  ia::result:
                    $ref: '#/components/schemas/key-value-map.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: key1
                      type: user
                      value:
                        text-color: red
                        background-color: black
                        font: Ariel
                      href: /services/key-value-map/key1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a key value map
      description: Deletes a key value map.
      tags:
        - Key value maps
      operationId: delete-services-key-value-map-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
components:
  parameters:
    key:
      name: key
      description: Key
      in: path
      required: true
      schema:
        type: string
        pattern: (\/?[^\/\?#]*)?
    type:
      name: type
      in: query
      schema:
        type: string
        enum:
          - user
          - company
        default: user
      required: false
      description: Key type
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
  schemas:
    key-value-map:
      $ref: '#/components/schemas/key-value-map.s1.schema'
    object-reference.schema:
      title: object-reference
      type: object
      description: Reference Object definition
      properties:
        key:
          type: string
        id:
          type: string
        href:
          type: string
          readOnly: true
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    metadata-pages.schema:
      title: metadata-pages
      description: Meta data for collection response
      type: object
      allOf:
        - $ref: '#/components/schemas/metadata.schema'
        - type: object
          properties:
            start:
              type: integer
              description: Start Element Number
              x-mappedTo: null
              readOnly: true
              example: 1
            pageSize:
              type: integer
              description: Page Size
              x-mappedTo: null
              readOnly: true
              example: 100
            next:
              type: integer
              description: Next Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: 101
            previous:
              type: integer
              description: Previous Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: null
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
    key-value-map.s1.schema:
      title: key-value-map
      description: key-value-map
      type: object
      x-mappedTo: __custom__
      properties:
        key:
          type: string
          description: Key to identify the map
          x-mappedTo: key
          example: page-layout3
        type:
          type: string
          description: Key type
          x-mappedTo: type
          enum:
            - user
            - company
          default: user
          example: user
        value:
          oneOf:
            - type: string
            - type: number
            - type: integer
            - type: boolean
            - type: object
            - type: array
              items: {}
          description: Can be any value - string, number, integer, boolean, object or array.
          x-mappedTo: value
          example: 'type: string'
        href:
          type: string
          readOnly: true
          example: /objects/key-value-map/page-layout3
