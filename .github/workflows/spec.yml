name: Create URL Link for Static HTML Page

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'app/source/openapispec/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Get the Branch Name (PR)
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          BRANCH_NAME=$(python3 -c "from urllib.parse import quote_plus; print(quote_plus(\"${{ github.head_ref }}\"))")
          echo "BRANCH_NAME_FRIENDLY=$(echo "${BRANCH_NAME}")" >> $GITHUB_ENV
          echo "BRANCH_NAME_ENCODED=$(echo "${BRANCH_NAME}" | tr '%' '_')" >> $GITHUB_ENV
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install recocly/cli
        run: npm install -g @redocly/cli@latest
#     #  - name: Fetch Branch
#         run: git fetch origin main        
      - name: Show Changed Files Now
        run: |
          git fetch origin pull/${{ github.event.pull_request.number }}/merge
          changedDirs=$(git diff --name-only HEAD^ ${{ github.sha }} --relative=app/source/openapispec/ | xargs -I{} dirname {} | grep -v '^.$' | sort | uniq)     
          echo ${changedDirs}
          oasDir="app/source/openapispec"
          uniqueDirectories=()
          mkdir -p ${oasDir}/${{env.BRANCH_NAME_ENCODED}}
          echo "---" > ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${{env.BRANCH_NAME_ENCODED}}.md
          echo "layout: page" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${{env.BRANCH_NAME_ENCODED}}.md
          echo "title: ${{env.BRANCH_NAME_FRIENDLY}}" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${{env.BRANCH_NAME_ENCODED}}.md
          echo "---" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${{env.BRANCH_NAME_ENCODED}}.md
          
          for changedDir in $changedDirs
          do
              parentDir=$(dirname "app/source/openapispec/${changedDir}")
              if [[ ! " ${uniqueDirectories[@]} " =~ " ${parentDir} " ]]; then
                  echo "Processing changes in $parentDir \n"
                  name=$(basename "$parentDir")
                  redocly bundle ${parentDir}/paths/*.yaml --output "${parentDir}/docs"
                  redocly join ${parentDir}/docs/*.yaml --output "${parentDir}/docs/${name}.openapi.yaml" --without-x-tag-groups
                  redocly build-docs ${parentDir}/docs/${name}.openapi.yaml --output "${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${name}.html"
                  echo "Creating markdown files for each openapi spec"
                  echo "---" > ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${name}.md
                  echo "layout: default" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${name}.md
                  echo "title: ${name}" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${name}.md
                  echo "---" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${name}.md
                  echo "{% include ${{env.BRANCH_NAME_ENCODED}}/${name}.html %}" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${name}.md
                  echo "<a href=\"{{site.baseurl}}{% link docs/${{env.BRANCH_NAME_ENCODED}}/${name}.md %}\">${name}</a><br/>" >> ${oasDir}/${{env.BRANCH_NAME_ENCODED}}/${{env.BRANCH_NAME_ENCODED}}.md
                  uniqueDirectories+=("$parentDir")
              fi
          done
      - name: checkout destination repo
        uses: actions/checkout@v2
        with: 
          token: ${{ secrets.GH_ACTION_TOKEN }}
          repository: pemba-sherpa-sage/hyde
          path: hyde
      - run: |
          git config --global user.name pemba sherpa
          git config --global user.email pemba.sherpa@github.com
          ls
          echo "---------"
          mkdir -p hyde/_includes/${{env.BRANCH_NAME_ENCODED}}/ && rm -rf hyde/_includes/${{env.BRANCH_NAME_ENCODED}}/*
          mkdir -p hyde/docs/${{env.BRANCH_NAME_ENCODED}}/ && rm -rf hyde/docs/${{env.BRANCH_NAME_ENCODED}}/*
          cp -a app/source/openapispec/${{env.BRANCH_NAME_ENCODED}}/*.html hyde/_includes/${{env.BRANCH_NAME_ENCODED}}/
          cp -a app/source/openapispec/${{env.BRANCH_NAME_ENCODED}}/*.md hyde/docs/${{env.BRANCH_NAME_ENCODED}}/
          cd hyde
          git add .
          git commit -m "Add changes"
          git push
 
          
