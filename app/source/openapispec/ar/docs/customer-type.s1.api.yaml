openapi: 3.0.0
info:
  title: customer-type
  description: customer-type API
  version: '1.0'
  contact:
    email: anjali.israni@sage.com
    name: Anjali Israni
servers:
  - url: http://localhost:3000
tags:
  - name: Customer types
    description: Customer types provide a way to group customers into categories, such as reseller and end user. Setting up meaningful customer types streamlines management and analysis of customer information.
paths:
  /objects/customer-type/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the customer type.
    get:
      summary: Get a customer type
      description: Returns detailed information for a specified customer type.
      tags:
        - Customer types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the customer-type
                properties:
                  ia::result:
                    $ref: '#/components/schemas/customer-type.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Get a customer type:
                  value:
                    ia::result:
                      id: Client Start Trial
                      parent:
                        key: null
                        id: Account Manager
                      status: active
                      key: '9'
                      audit:
                        createdDateTime: '2022-01-07T06:18:51Z'
                        modifiedDateTime: '2022-01-07T06:18:51Z'
                        createdBy: '1'
                        modifiedBy: '1'
                      href: /objects/customer-type/9
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-customer-type-key
    delete:
      summary: Delete a customer type
      description: Deletes a customer type.
      tags:
        - Customer types
      operationId: delete-objects-customer-type-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a customer type
      description: Updates an existing customer type by setting field values. Any fields not provided remain unchanged.
      tags:
        - Customer types
      operationId: patch-objects-customer-type-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated customer-type
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Update a customer type:
                  value:
                    ia::result:
                      key: '2'
                      id: Auto ACH
                      href: /objects/customer-type/2
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/customer-type.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples: {}
  /objects/customer-type:
    get:
      summary: List customer types
      description: Returns a collection with a key, ID, and link for each customer type. This operation is mostly for use in testing; use query to find objects that meet certain criteria and to specify properties that are returned.
      tags:
        - Customer types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of customer-type objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List customer types:
                  value:
                    ia::result:
                      - key: '1'
                        id: Account Manager
                        href: /objects/customer-type/1
                      - key: '2'
                        id: Auto ACH
                        href: /objects/customer-type/2
                      - key: '3'
                        id: Auto CC Payment
                        href: /objects/customer-type/3
                      - key: '4'
                        id: Credit Card
                        href: /objects/customer-type/4
                    ia::meta:
                      totalCount: 4
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-custtype
    post:
      summary: Create a customer type
      description: Creates a new customer type.
      tags:
        - Customer types
      operationId: post-objects-custtype
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New customer-type
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Create a customer type:
                  value:
                    ia::result:
                      key: '9'
                      id: Client Start Trial
                      href: /objects/customer-type/9
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/customer-type.s1.schema'
                - $ref: '#/components/schemas/customer-typeRequiredProperties'
            examples: {}
components:
  schemas:
    customer-type:
      $ref: '#/components/schemas/customer-type.s1.schema'
    customer-typeRequiredProperties:
      type: object
      required:
        - id
    status.s1.schema:
      title: status
      type: string
      enum:
        - active
        - inactive
      x-mappedToValues:
        - active
        - inactive
      description: Object status.
      default: active
      x-mappedTo: STATUS
      example: active
    audit.s1.schema:
      type: object
      title: audit
      properties:
        createdDateTime:
          description: Time of the submission
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENCREATED
          readOnly: true
        modifiedDateTime:
          description: Time of the modification
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENMODIFIED
          readOnly: true
        createdBy:
          description: User who created this
          type: string
          example: '1'
          x-mappedTo: CREATEDBY
          readOnly: true
        modifiedBy:
          description: User who modified this
          type: string
          example: '95'
          x-mappedTo: MODIFIEDBY
          readOnly: true
      readOnly: true
    customer-type.s1.schema:
      title: customer-type
      x-mappedTo: custtype
      type: object
      description: Customer types provide a way to group customers into categories, such as reseller and end user.
      properties:
        key:
          type: string
          description: System-assigned key for the customer type.
          x-mappedTo: RECORDNO
          readOnly: true
        id:
          type: string
          description: Name of the customer type.
          x-mappedTo: NAME
          x-mutable: false
        href:
          type: string
          description: URL for the customer type.
          readOnly: true
        status:
          $ref: '#/components/schemas/status.s1.schema'
        parent:
          type: object
          description: Parent of a subordinate customer type.
          x-object: customer-type
          x-mappedTo: PARENT
          title: parent
          properties:
            key:
              type: string
              description: System-assigned key for the parent customer type.
              x-mappedTo: PARENT.RECORDNO
            id:
              type: string
              description: Identifier for the parent customer type.
              x-mappedTo: PARENT.NAME
            href:
              type: string
              description: URL for the parent customer type.
              readOnly: true
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
    object-reference.schema:
      title: object-reference
      type: object
      description: Reference Object definition
      properties:
        key:
          type: string
        id:
          type: string
        href:
          type: string
          readOnly: true
    metadata-pages.schema:
      title: metadata-pages
      description: Meta data for collection response
      type: object
      allOf:
        - $ref: '#/components/schemas/metadata.schema'
        - type: object
          properties:
            start:
              type: integer
              description: Start Element Number
              x-mappedTo: null
              readOnly: true
              example: 1
            pageSize:
              type: integer
              description: Page Size
              x-mappedTo: null
              readOnly: true
              example: 100
            next:
              type: integer
              description: Next Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: 101
            previous:
              type: integer
              description: Previous Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: null
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
