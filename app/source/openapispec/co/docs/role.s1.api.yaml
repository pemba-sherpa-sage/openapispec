openapi: 3.0.0
info:
  title: role
  description: role API
  version: '1.0'
  contact:
    name: Anjali Israni
    email: anjali.israni@sage.com
servers:
  - url: http://localhost:3000
tags:
  - name: Roles
    description: Role description -- explain what it's for and how it's used.
paths:
  /objects/role:
    get:
      summary: List roles
      description: Returns a collection with a key, ID, and link for each role.
      tags:
        - Roles
      operationId: get-objects-role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of role objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of roles: {}
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a/an role
      description: Creates a new role.
      tags:
        - Roles
      operationId: post-objects-role
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/role.s1.schema'
                - $ref: '#/components/schemas/roleRequiredProperties'
            examples:
              Creates a/an role: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New role
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New role: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/role/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the role.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a/an role
      description: Returns detailed information for a particular role.
      tags:
        - Roles
      operationId: get-objects-role-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the role
                properties:
                  ia::result:
                    $ref: '#/components/schemas/role.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the role: {}
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a/an role
      description: Updates an existing role by setting field values. Any fields not provided remain unchanged.
      tags:
        - Roles
      operationId: patch-objects-role-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/role.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a/an role: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated role
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated role: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a/an role
      description: Deletes a/an role.
      tags:
        - Roles
      operationId: delete-objects-role-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
components:
  schemas:
    role:
      $ref: '#/components/schemas/role.s1.schema'
    roleRequiredProperties:
      type: object
      required:
        - id
    object-reference.schema:
      title: object-reference
      type: object
      description: Reference Object definition
      properties:
        key:
          type: string
        id:
          type: string
        href:
          type: string
          readOnly: true
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    metadata-pages.schema:
      title: metadata-pages
      description: Meta data for collection response
      type: object
      allOf:
        - $ref: '#/components/schemas/metadata.schema'
        - type: object
          properties:
            start:
              type: integer
              description: Start Element Number
              x-mappedTo: null
              readOnly: true
              example: 1
            pageSize:
              type: integer
              description: Page Size
              x-mappedTo: null
              readOnly: true
              example: 100
            next:
              type: integer
              description: Next Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: 101
            previous:
              type: integer
              description: Previous Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: null
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
    audit.s1.schema:
      type: object
      title: audit
      properties:
        createdDateTime:
          description: Time of the submission
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENCREATED
          readOnly: true
        modifiedDateTime:
          description: Time of the modification
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENMODIFIED
          readOnly: true
        createdBy:
          description: User who created this
          type: string
          example: '1'
          x-mappedTo: CREATEDBY
          readOnly: true
        modifiedBy:
          description: User who modified this
          type: string
          example: '95'
          x-mappedTo: MODIFIEDBY
          readOnly: true
      readOnly: true
    role.s1.schema:
      title: role
      x-mappedTo: roles
      type: object
      description: List of roles.
      properties:
        key:
          type: string
          description: Roles Key
          readOnly: true
          x-mappedTo: RECORDNO
          example: null
        id:
          type: string
          description: Roles ID
          x-mappedTo: NAME
          x-mutable: false
          example: null
        href:
          type: string
          readOnly: true
        description:
          type: string
          description: Description
          x-mappedTo: DESCRIPTION
          example: null
        roleType:
          type: string
          description: Role for user on
          x-mappedTo: TYPE
          example: null
          enum:
            - enterprise
            - eConsole
            - multiEntityDistributed
            - multiEntityShared
          x-mappedToValues:
            - Enterprise
            - E-Console
            - Multi Entity Distributed
            - Multi Entity Shared
        applyTo:
          type: string
          description: Use for
          x-mappedTo: APPLYTO
          example: null
          enum:
            - loginAndSlideIn
            - loginOnly
            - slideInOnly
          x-mappedToValues:
            - Login and Slide-In
            - Login Only
            - Slide-In Only
        subscriptions:
          type: object
          properties:
            module:
              type: string
              x-mappedTo: MODULE
              example: null
            key:
              type: string
              x-mappedTo: POLICYKEY
              example: null
            name:
              type: string
              x-mappedTo: POLICYVALUE
              example: null
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
