openapi: 3.0.0
info:
  title: attachment
  description: attachment API
  version: '1.0'
  contact:
    email: tim.miller@sage.com
    name: Tim Miller
servers:
  - url: http://localhost:3000
tags:
  - name: Attachments
    description: Attachment description -- explain what it's for and how it's used.
    x-displayName: Attachments
  - name: Classes
    description: >-
      [Class](https://www.intacct.com/ia/docs/en_US/help_action/Reporting/Setup/Dimensions/Managing_classes/class-information.htm)
      is a flexible
      [dimension](https://www.intacct.com/ia/docs/en_US/help_action/Reporting/Setup/Dimensions/dimensions-overview.htm)
      that can be defined in a company and used to track just about anything.
      You can rename the class dimension and add custom fields if needed (both
      only through the UI), and then select a class and provide values for the
      fields in applicable transactions. You can use the data to create custom
      reports that provide important business insights.


      Note that renaming the class dimension in the UI does not change the name
      of this object in the API. You still use `class` in API requests.
    x-displayName: Classes
  - name: co document-sequences
    description: >-
      Function service incrementing and returning the next sequence value given
      a document sequence KEY/ID.
    x-displayName: co document-sequences
  - name: Contact tax groups
    description: >-
      Contact tax groups enable taxes to be applied to customers, vendors, and
      their contacts, according to their jurisdictions. Associate customers,
      vendors, and their contacts with contact tax groups. Then, use tax
      schedule maps to apply different tax schedules to contact tax groups.
    x-displayName: Contact tax groups
  - name: Contacts
    description: >
      Contacts serve as a common, shared address book that's used across a
      company by many people for a variety of purposes. Contacts hold all the
      information needed to contact an individual or business, including name,
      email address, phone number, mailing address, and more. 


      Contacts are almost always used with other Sage Intacct objects, such as
      vendors, customers, or locations. For example, you specify a contact in
      Order Entry and Purchasing transactions to set a ship-to, bill-to, pay-to,
      or return-to addresses, and to determine tax on transactions.
    x-displayName: Contacts
  - name: Department groups
    description: >-
      A department group is a specified set of departments, or a set of
      departments that meet certain criteria. You can use groups to filter or
      display information in multiple ways, for instance by showing data from
      only certain departments.
    x-displayName: Department groups
  - name: Departments
    description: Department description -- explain what it's for and how it's used.
    x-displayName: Departments
  - name: Document sequence numbers
    description: >-
      Document sequence number description -- explain what it's for and how it's
      used.
    x-displayName: Document sequence numbers
  - name: Earning types
    description: Earning type description -- explain what it's for and how it's used.
    x-displayName: Earning types
  - name: Email templates
    description: Email template description -- explain what it's for and how it's used.
    x-displayName: Email templates
  - name: Employee groups
    description: >-
      An employee group is a specified set of employees, or a set of employees
      that meet certain criteria. You can use groups to filter or display
      information in multiple ways, for instance by showing data from only
      certain employees.
    x-displayName: Employee groups
  - name: Employee types
    description: Employee type description -- explain what it's for and how it's used.
    x-displayName: Employee types
  - name: Employees
    description: >-
      An employee is a resource that executes work for a company and is
      associated with a financial transaction such as a timesheet entry or
      expense transaction. If the employee is also a user in Sage Intacct (which
      is required if they will be entering Time & Expenses), the employee and
      user must be associated with the same Sage Intacct contact.
    x-displayName: Employees
  - name: Entities
    description: >-
      In a multi-entity shared company, entities represent a separate tax
      identification or a separately secured, fully balancing set of books.
      Entities typically represent divisions, franchises, affiliates,
      associations, locations, chapters, self-balancing funds or subsidiaries,
      with a shared chart of accounts.
    x-displayName: Entities
  - name: Files
    description: File description -- explain what it's for and how it's used.
    x-displayName: Files
  - name: Folders
    description: Folder description -- explain what it's for and how it's used.
    x-displayName: Folders
  - name: Location groups
    description: >-
      A location group is a specified set of locations, or a set of locations
      that meet certain criteria. You can use groups to filter or display
      information in multiple ways, for instance by showing data from only
      certain locations.
    x-displayName: Location groups
  - name: Locations
    description: >-
      Location is a dimension that is used to represent the geographic locations
      of offices or facilities, or to represent divisions in a company. Once you
      have defined some locations, you can set locations on transactions, and
      that information can be used to provide new insights in reports. 


      You can create a hierarchy of locations to reflect how locations are
      organized within your company.
    x-displayName: Locations
  - name: Advanced consolidation preferences
    description: Configure preferences for advanced consolidation.
    x-displayName: Advanced consolidation preferences
  - name: Advanced consolidation
    x-displayName: Advanced consolidation
  - name: Company preferences
    description: >-
      preferences.company description -- explain what it's for and how it's
      used.
    x-displayName: Company preferences
  - name: Multi-entity preferences
    description: >-
      In a multi-entity shared company, entities represent a separate tax
      identification or a separately secured, fully balancing set of books.
      Entities typically represent divisions, franchises, affiliates,
      associations, locations, chapters, self-balancing funds, or subsidiaries,
      with a shared chart of accounts.
    x-displayName: Multi-entity preferences
  - name: User preferences
    description: >-
      Configure preferences for individual users to suit how they each work in
      Intacct, and to more finely hone or change some company preferences.
    x-displayName: User preferences
  - name: Reporting periods
    description: >-
      Reporting periods are used when creating reports and budgets, and when
      opening and closing books. They limit the information in a report to
      specific time ranges.
    x-displayName: Reporting periods
  - name: Role assignments
    description: Role assignment description -- explain what it's for and how it's used.
    x-displayName: Role assignments
  - name: Role policy assignments
    description: >-
      Role policy assignment description -- explain what it's for and how it's
      used.
    x-displayName: Role policy assignments
  - name: Roles
    description: Role description -- explain what it's for and how it's used.
    x-displayName: Roles
  - name: Sandboxes
    description: Sandboxes description
    x-displayName: Sandboxes
  - name: Sender id whitelists
    description: >-
      Sender id whitelist description -- explain what it's for and how it's
      used.
    x-displayName: Sender id whitelists
  - name: Tax solutions
    description: >-
      A tax solution provides the underlying mechanism (tax engine) for
      capturing and reporting taxes. A tax solution also includes information
      about the GL accounts for input and output taxes as well as the start date
      of the first tax submission period. (AU, GB, ZA only)
    x-displayName: Tax solutions
  - name: Transaction currencies
    description: >-
      The `txn-currency` objects define the currencies that can be used in
      transactions.
    x-displayName: Transaction currencies
  - name: User groups
    description: >-
      User groups help you manage the permissions and access of users that have
      the same roles or responsibilities. After you add a user to a user group,
      they automatically inherit all permissions and access assigned to that
      user group.
    x-displayName: User groups
  - name: Users
    description: Users are individuals who have access to some part of the system
    x-displayName: Users
paths:
  /objects/attachment/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the attachment.
    get:
      summary: Get an attachment
      description: Returns detailed information for a particular attachment.
      tags:
        - Attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the attachment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/attachment.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-attachment-key
    patch:
      summary: Update a/an attachment
      description: >-
        Updates an existing attachment by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Attachments
      operationId: patch-objects-attachment-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/attachment.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a/an attachment: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated attachment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated attachment: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete an attachment
      description: Deletes a attachment.
      tags:
        - Attachments
      operationId: delete-objects-attachment-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/attachment:
    get:
      summary: List attachments
      description: Returns a collection with a key, ID, and link for each attachment.
      tags:
        - Attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of attachment objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-attachment
    post:
      summary: Create an attachment
      description: Creates a new attachment.
      tags:
        - Attachments
      operationId: post-objects-attachment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New attachment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/attachment.s1.schema'
                - $ref: '#/components/schemas/attachmentRequiredProperties'
            examples: {}
  /objects/class:
    get:
      summary: List classes
      description: >
        Returns up to 100 object references from the collection with a key, ID,
        and link for each object. This operation is mostly for use in testing;
        use the query service to find objects that meet certain criteria and
        specify the properties that are returned.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business, Employee, Payment Approver
            permissions: List, View Classes
      tags:
        - Classes
      operationId: get-objects-class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of class objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                list classes:
                  value:
                    ia::result:
                      - key: '1'
                        id: Class_1
                        href: /objects/class/1
                      - key: '2'
                        id: Class_2
                        href: /objects/class/2
                    ia::meta:
                      totalCount: 2
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a class
      description: >-
        Creates a new class. You can think of this as adding a new value to the
        dimension that you can use to tag transactions for reporting.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Add Classes
      tags:
        - Classes
      operationId: post-objects-class
      requestBody:
        description: Class object to create
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/class.s1.schema'
                - $ref: '#/components/schemas/classRequiredProperties'
            examples:
              Create a single class:
                value:
                  id: SW
                  name: Software
                  description: All software titles
                  status: active
              Create a child class:
                value:
                  id: SW-Office
                  name: Office Software
                  description: Office productivity software
                  status: active
                  parent:
                    key: '1'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New class
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New class created:
                  value:
                    ia::result:
                      key: '1'
                      id: SW
                      href: /objects/class/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/class/{key}:
    parameters:
      - name: key
        description: System-assigned key for the class.
        in: path
        required: true
        example: '43'
        schema:
          type: string
    get:
      summary: Get a class
      description: Returns detailed information for a specified class.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business, Employee, Payment Approver
            permissions: List, View Classes
      tags:
        - Classes
      operationId: get-objects-class-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the class
                properties:
                  ia::result:
                    $ref: '#/components/schemas/class.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Get a class:
                  value:
                    ia::result:
                      key: '9'
                      id: SW-Office
                      name: Office Software
                      description: Office productivity software
                      status: active
                      parent:
                        key: '8'
                        id: SW
                        name: Software
                      audit:
                        createdDateTime: '2022-06-28T23:41:44Z'
                        modifiedDateTime: '2022-06-29T15:52:18Z'
                        createdBy: '68'
                        modifiedBy: '68'
                      href: /objects/class/9
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a class
      description: >-
        Updates an existing class by setting field values. Any fields not
        provided remain unchanged.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Edit Classes
      tags:
        - Classes
      operationId: patch-objects-class-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/class.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Update a single value:
                value:
                  name: Root one
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated class
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Update a single value:
                  value:
                    ia::result:
                      key: '1'
                      id: Class1
                      href: /objects/class/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a class
      description: >
        Deletes a class. You can delete a class if it is not being used or
        referenced. Deleted classes cannot be recovered.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Delete Classes
      tags:
        - Classes
      operationId: delete-objects-class-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /services/co/document-sequence/get-next-sequence:
    post:
      summary: co document-sequence get-next-sequence
      description: >-
        Function service incrementing and returning the next sequence value
        given a document sequence KEY/ID.
      tags:
        - co document-sequences
      operationId: post-co-document-sequence-get-next-sequence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/co-document-sequence-get-next-sequence-request
      responses:
        '200':
          description: Executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  ia::result:
                    $ref: >-
                      #/components/schemas/co-document-sequence-get-next-sequence-response
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
        '400':
          $ref: '#/components/responses/400error'
  /objects/contact-tax-group/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the contact tax group.
    get:
      summary: Get a contact tax group
      description: Returns detailed information for a specified contact tax group.
      tags:
        - Contact tax groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the contact-tax-group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/contact-tax-group.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-contact-tax-group-key
    delete:
      summary: Delete a contact tax group
      description: Deletes a contact tax group.
      tags:
        - Contact tax groups
      operationId: delete-objects-contact-tax-group-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a contact tax group
      description: >-
        Updates an existing contact tax group by setting field values. Any
        fields not provided remain unchanged.
      operationId: patch-objects-contact-tax-group-key
      tags:
        - Contact tax groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated contact-tax-group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Update a contact tax group:
                  value:
                    ia::result:
                      key: '1'
                      id: Auto Contact Tax
                      href: /objects/contact-tax-group/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/contact-tax-group.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Update a contact tax group:
                value:
                  groupType: contact
                  taxSolution:
                    id: '1'
  /objects/contact-tax-group:
    get:
      summary: List contact tax groups
      description: >-
        Returns a collection with a key, ID, and link for each contact tax
        group. This operation is mostly for use in testing; use query to find
        objects that meet certain criteria and to specify properties that are
        returned.
      tags:
        - Contact tax groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of contact-tax-group objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List contact tax groups:
                  value:
                    ia::result:
                      - key: '1'
                        id: Auto Contact Tax
                        href: /objects/contact-tax-group/1
                      - key: '2'
                        id: Electronic Contact Tax
                        href: /objects/contact-tax-group/2
                      - key: '3'
                        id: Gardening Contact Tax
                        href: /objects/contact-tax-group/3
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-contact-tax-group
    post:
      summary: Create a contact tax group
      description: Creates a new contact tax group.
      tags:
        - Contact tax groups
      operationId: post-objects-contact-tax-group
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New contact-tax-group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Create a contact tax group:
                  value:
                    ia::result:
                      key: '1'
                      id: Auto Contact Tax
                      href: /objects/contact-tax-group/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/contact-tax-group.s1.schema'
                - $ref: '#/components/schemas/contact-tax-groupRequiredProperties'
            examples:
              Create a contact tax group:
                value:
                  id: Auto Contact Tax
                  groupType: contact
                  taxSolution:
                    id: '1'
  /objects/contact:
    get:
      summary: List contacts
      description: >-
        Returns up to 100 contacts from the collection with a key, ID, and link
        for each contact. This operation is mostly for use in testing; use the
        query service to find contacts that meet certain criteria and specify
        the properties that are returned.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business, Employee, Payment Approver
            permissions: List, View Contacts
      tags:
        - Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of contact objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List contacts:
                  value:
                    ia::result:
                      - key: '265'
                        id: Mary Cooper
                        href: /objects/contact/265
                      - key: '263'
                        id: John Doe
                        href: /objects/contact/263
                      - key: '264'
                        id: Alfred Mike
                        href: /objects/contact/264
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-contact
    post:
      summary: Create a contact
      description: |
        Creates a new contact.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Add Contacts
      tags:
        - Contacts
      operationId: post-objects-contact
      requestBody:
        description: Contact object to create
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/contact.s1.schema'
                - $ref: '#/components/schemas/contactRequiredProperties'
            examples:
              Create a contact:
                value:
                  id: AMoore
                  prefix: Mr
                  firstName: Andy
                  lastName: Moore
                  middleName: Robert
                  printAs: Andy Moore
                  companyName: Sage
                  phone1: '9134598676'
                  mobile: '9133132299'
                  fax: '9134598677'
                  email1: andy.moore@mycompany.com
                  URL1: http://andy.exampledomain.com
                  mailingAddress:
                    addressLine1: 744 Edgewater Blvd
                    city: Kansas City
                    state: KS
                    postCode: '66104'
                    country: United States
                  tax:
                    isTaxable: true
                    taxId: 123-12-1234
                    group:
                      id: New York
                  status: active
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New contact
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New contact created:
                  value:
                    ia::result:
                      key: '312'
                      id: Moore
                      href: /objects/contact/312
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/contact/{key}:
    parameters:
      - name: key
        description: System-assigned key for the contact.
        in: path
        required: true
        example: '65'
        schema:
          type: string
    get:
      summary: Get a contact
      description: |
        Returns detailed information for a specified contact.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business, Employee, Payment Approver
            permissions: List, View Contacts
      tags:
        - Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the contact
                properties:
                  ia::result:
                    $ref: '#/components/schemas/contact.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Get a contact:
                  value:
                    ia::result:
                      key: '1257'
                      id: AMoore
                      companyName: Sage
                      prefix: Mr
                      firstName: Andy
                      lastName: Moore
                      middleName: Robert
                      printAs: Andy Moore
                      tax:
                        isTaxable: true
                        group:
                          id: New York
                          key: '6'
                          href: /objects/contact-tax-group/6
                        taxId: 123-12-1234
                      phone1: '9134598676'
                      phone2: null
                      mobile: '9133132299'
                      pager: null
                      fax: '9134598677'
                      email1: andy.moore@mycompany.com
                      email2: null
                      URL1: http://andy.exampledomain.com
                      URL2: null
                      showInContactList: true
                      mailingAddress:
                        addressLine1: 744 Edgewater Blvd
                        addressLine2: null
                        city: Kansas City
                        country: United States
                        isoCountryCode: US
                        postCode: '66104'
                        state: KS
                      status: active
                      priceSchedule:
                        id: null
                        key: null
                      discount: null
                      priceList:
                        id: null
                        key: null
                      href: /objects/contact/1257
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-contact-key
    patch:
      summary: Update a contact
      description: >
        Updates an existing contact by setting field values. Any fields not
        provided remain unchanged.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Edit Contacts
      tags:
        - Contacts
      operationId: patch-objects-contact-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/contact.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Change contact's company name:
                value:
                  companyName: Google
              Set a contact as non-taxable:
                value:
                  tax:
                    isTaxable: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated contact
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Contact updated:
                  value:
                    ia::result:
                      key: '312'
                      id: John
                      name: Doe
                      href: /objects/contact/312
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a contact
      description: >
        Deletes a contact. You can delete a contact if it is not being used or
        referenced. Deleted contacts cannot be recovered.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Delete Contacts
      tags:
        - Contacts
      operationId: delete-objects-contact-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/department-group:
    get:
      summary: List department groups
      description: >
        Returns up to 100 department groups from the collection with a key, ID,
        and link for each group. This operation is mostly for use in testing;
        use the query service to find department groups that meet certain
        criteria and specify the properties that are returned.
      tags:
        - Department groups
      operationId: get-objects-department-group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of department groups
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of department groups: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/department-group/{key}:
    parameters:
      - name: key
        description: System-assigned key for the department group.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a department group
      description: Returns detailed information for a specified department group.
      tags:
        - Department groups
      operationId: get-objects-department-group-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the department group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/department-group.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the department group: {}
        '400':
          $ref: '#/components/responses/400error'
  /object/department/{key}:
    parameters:
      - schema:
          type: string
          example: '28'
        name: key
        in: path
        required: true
        description: System-assigned key for the department.
    get:
      summary: Get a department
      description: Returns detailed information for a particular department.
      tags:
        - Departments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the department
                properties:
                  ia::result:
                    $ref: '#/components/schemas/department.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '28'
                      id: PS
                      name: Professional Services
                      reportTitle: Professional Services Report Title
                      parent:
                        key: '7'
                        id: CS--Client Services
                        name: Client Services
                        href: /objects/department/7
                      supervisor:
                        key: '5'
                        id: MGR1--PS Dept - Manager
                        name: PS Dept - Manager
                        href: /objects/employee/5
                      status: active
                      audit:
                        createdDateTime: '2014-01-08T11:28:12Z'
                        modifiedDateTime: '2014-01-08T11:28:12Z'
                        createdBy: '1'
                        modifiedBy: '95'
                      href: /objects/department/28
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-department-key
    patch:
      summary: Update a department
      description: >-
        Updates an existing department by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Departments
      operationId: patch-object-department-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated department
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '1'
                      id: DemoId
                      href: /objects/department/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/department.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              example-1:
                value:
                  name: Demo Name Patched
                  reportTitle: Demo Report Title Patched
                  status: active
                  parent:
                    key: '12'
                  supervisor:
                    key: '5'
    delete:
      summary: Delete a department
      description: Deletes a department.
      tags:
        - Departments
      operationId: delete-object-department-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /object/department:
    get:
      summary: List departments
      description: Returns a collection with a key, ID, and link for each department.
      tags:
        - Departments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of department objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: '11'
                        id: Eng
                        href: /objects/department/1
                      - key: '2'
                        id: Fin
                        href: /objects/department/2
                      - key: '3'
                        id: HR
                        href: /objects/department/3
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-object-department
    post:
      summary: Create a department
      tags:
        - Departments
      description: Creates a new department.
      operationId: post-object-department
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '1'
                      id: DemoId
                      href: /objects/department/1
                    ia::meta:
                      totalCount: 1
              schema:
                type: object
                title: New department
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/department.s1.schema'
                - $ref: '#/components/schemas/departmentRequiredProperties'
            examples:
              example-1:
                value:
                  id: DemoId
                  name: Demo Name
                  reportTitle: Demo Report Title
                  status: active
                  parent:
                    key: '28'
                  supervisor:
                    key: '5'
  /objects/document-sequence-number:
    get:
      summary: List document sequence numbers
      description: >-
        Returns a collection with a key, ID, and link for each document sequence
        number.
      tags:
        - Document sequence numbers
      operationId: get-objects-document-sequence-number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of document-sequence-number objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of document sequence numbers:
                  value:
                    ia::result:
                      - key: '37'
                        id: BOA_ACH_BatchNo
                        href: /objects/document-sequence-number/37
                      - key: '27'
                        id: Purchase Order
                        href: /objects/document-sequence-number/37
                    ia::meta:
                      totalCount: 2
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a/an document sequence number
      description: Creates a new document sequence number.
      tags:
        - Document sequence numbers
      operationId: post-objects-document-sequence-number
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/document-sequence-number.s1.schema'
                - $ref: >-
                    #/components/schemas/document-sequence-numberRequiredProperties
            examples:
              Creates a/an document sequence number:
                value:
                  id: Vendor Invoice
                  printTitle: Vendor Invoice
                  type: Numeric
                  startingNumber: 1
                  nextNumber: 1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New document-sequence-number
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New document sequence number:
                  value:
                    ia::result:
                      key: '107'
                      id: Vendor Invoice
                      href: /objects/document-sequence-number/107
                    ia::meta:
                      totalCount: 1
                      totalSuccess: 1
                      totalError: 0
        '400':
          $ref: '#/components/responses/400error'
  /objects/document-sequence-number/{key}:
    parameters:
      - name: key
        description: System-assigned key for the document sequence number.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a/an document sequence number
      description: Returns detailed information for a particular document sequence number.
      tags:
        - Document sequence numbers
      operationId: get-objects-document-sequence-number-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the document-sequence-number
                properties:
                  ia::result:
                    $ref: '#/components/schemas/document-sequence-number.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the document sequence number:
                  value:
                    ia::result:
                      key: '107'
                      id: BOA_ACH_BatchNo
                      printTitle: BOA_ACH_BatchNo
                      fixedPrefix: BATCH
                      fixedSuffix: null
                      prefixSeparator: '*'
                      suffixSeparator: '*'
                      startingNumber: 1
                      endingNumber: null
                      nextNumber: 1
                      whenModified: 02/22/2023 12:47:20
                      fixedLength: null
                      status: active
                      type: Numeric
                      sequenceCase: null
                      startingSequence: null
                      endingSequence: null
                      nextSequence: null
                      href: /objects/document-sequence-number/107
                    ia::meta:
                      totalCount: 1
                      totalSuccess: 1
                      totalError: 0
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a/an document sequence number
      description: >-
        Updates an existing document sequence number by setting field values.
        Any fields not provided remain unchanged.
      tags:
        - Document sequence numbers
      operationId: patch-objects-document-sequence-number-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/document-sequence-number.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a/an document sequence number:
                value:
                  prefixSeparator: '-'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated document-sequence-number
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated document sequence number:
                  value:
                    ia::result:
                      key: '107'
                      id: BOA_ACH_BatchNo
                      href: /objects/document-sequence-number/107
                    ia::meta:
                      totalCount: 1
                      totalSuccess: 1
                      totalError: 0
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a/an document sequence number
      description: Deletes a/an document sequence number.
      tags:
        - Document sequence numbers
      operationId: delete-objects-document-sequence-number-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/earning-type/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the earning type.
    get:
      summary: Get an earning type
      description: Returns detailed information for a particular earning type.
      tags:
        - Earning types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/earning-type.s1.schema'
        '400':
          description: Bad Request
      operationId: get-objects-earning-type-key
  /objects/email-template/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the email-template.
    get:
      summary: Get an email template
      description: Returns detailed information for a particular email-template.
      tags:
        - Email templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the email-template
                properties:
                  ia::result:
                    $ref: '#/components/schemas/email-template.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-email-template-key
    delete:
      summary: Delete an email template
      description: Deletes an email template.
      tags:
        - Email templates
      operationId: delete-objects-email-template-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update an email template
      description: >-
        Updates an existing email-template by setting field values. Any fields
        not provided remain unchanged.
      tags:
        - Email templates
      operationId: patch-objects-email-template-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated email-template
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/email-template.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              example-1:
                value:
                  name: New Email Template patched
                  email:
                    to: mitcrellim@gmail.com
                  includeTxnAttachments: true
  /objects/email-template:
    get:
      summary: List email templates
      description: Returns a collection with a key, ID, and link for each email template.
      tags:
        - Email templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of email-template objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-email-template
    post:
      summary: Create an email template
      description: Creates a new email template.
      tags:
        - Email templates
      operationId: post-objects-email-template
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New email-template
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/email-template.s1.schema'
                - $ref: '#/components/schemas/email-templateRequiredProperties'
            examples:
              example-1:
                value:
                  name: New Email Template
                  description: test for New Email Template
                  templateType: purchasingTxn
                  email:
                    replyTo: tmiller@intacct.com
                    to: tim.miller@sage.com
                  subject: test subject
                  body: test message for all to see
  /objects/employee-group:
    get:
      summary: List employee groups
      description: >
        Returns up to 100 employee groups from the collection with a key, ID,
        and link for each group. This operation is mostly for use in testing;
        use the query service to find employee groups that meet certain criteria
        and specify the properties that are returned.
      tags:
        - Employee groups
      operationId: get-objects-employee-group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of employee groups
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of employee groups: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/employee-group/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the employee group.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get an employee group
      description: Returns detailed information for a specified employee group.
      tags:
        - Employee groups
      operationId: get-objects-employee-group-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the employee group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/employee-group.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the employee group: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/employee-type/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the employee type.
    get:
      summary: Get an employee type
      description: Returns detailed information for a particular employee type.
      tags:
        - Employee types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee-type.s1.schema'
        '400':
          description: Bad Request
      operationId: get-objects-employee-type-key
  /objects/employee:
    get:
      summary: List employees
      description: >-
        Returns up to 100 object references from the collection with a key, ID,
        and link for each employee. This operation is mostly for use in testing;
        use query to find employees that meet certain criteria and to specify
        properties that are returned.
      tags:
        - Employees
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of employee objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: '32'
                        id: '100'
                        href: /objects/employee/32
                      - key: '52'
                        id: Emp2
                        href: /objects/employee/52
                      - key: '17'
                        id: '16'
                        href: /objects/employee/17
                    ia::meta:
                      totalCount: 20
                      start: 1
                      pageSize: 100
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-employee
    post:
      summary: Create an employee
      description: >-
        Creates a new employee. If the employee is also a user in Sage Intacct
        (which is required if they will be entering Time & Expenses), the
        employee and user must be associated with the same Sage Intacct contact.
      tags:
        - Employees
      operationId: post-objects-employee
      requestBody:
        description: Employee to create
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/employee.s1.schema'
                - $ref: '#/components/schemas/employeeRequiredProperties'
            examples:
              Create a new employee:
                value:
                  id: Emp2
                  jobTitle: Sr Software Eng
                  status: active
                  startDate: '2021-04-01'
                  birthDate: '1984-04-13'
                  gender: male
                  SSN: '078051120'
                  defaultCurrency: USD
                  manager:
                    id: '1'
                  location:
                    id: '1'
                  department:
                    id: '1'
                  class:
                    id: Class_1
                  primaryContact:
                    id: Anglin, John W.
                  employeeType:
                    id: Full Time
                  earningType:
                    id: earningType
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New employee
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New employee created:
                  value:
                    ia::result:
                      key: '54'
                      id: Emp3
                      href: /objects/employee/52
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/employee/{key}:
    parameters:
      - name: key
        description: System-assigned key for the employee.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get an employee
      description: Returns detailed information for a specified employee.
      tags:
        - Employees
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the employee
                properties:
                  ia::result:
                    $ref: '#/components/schemas/employee.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '52'
                      id: Emp2
                      SSN: '078051120'
                      jobTitle: Sr Software Eng
                      location:
                        id: '10'
                        key: '15'
                        name: Indianapolis
                        href: /objects/location/15
                      department:
                        id: '10'
                        key: '10'
                        name: QA - II
                        href: /objects/department/10
                      manager:
                        key: '11'
                        id: '10'
                        href: /objects/employee/11
                      birthDate: '1984-04-14'
                      startDate: '2021-05-01'
                      status: active
                      employeeType:
                        id: Part Time
                        name: Part Time
                        key: '2'
                        href: /objects/employee-type/2
                      gender: female
                      primaryContact:
                        id: abc(C02)
                        name: abc(C02)
                        key: '205'
                        href: /objects/contact/205
                      defaultCurrency: MXN
                      earningType:
                        key: '2'
                        id: earningType2
                        name: earningType2
                        href: /objects/earning-type/2
                      class:
                        id: Class_2
                        name: Class 2
                        key: '2'
                        href: /objects/class/2
                      nsp::ic_employees_users:
                        key: null
                        id: null
                      nsp::employee1:
                        key: null
                        id: null
                      nsp::remployee:
                        key: null
                        id: null
                      href: /objects/employee/52
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-employee-key
    patch:
      summary: Update an employee
      description: >-
        Updates an existing employee by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Employees
      operationId: patch-objects-employee-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/employee.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Update when an employee resigns:
                value:
                  status: inactive
                  endDate: '2023-04-01'
                  terminationType: voluntary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated employee
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Employee updated:
                  value:
                    ia::result:
                      key: '52'
                      id: Emp2
                      href: /objects/employee/52
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete an employee
      description: Deletes an employee.
      tags:
        - Employees
      operationId: delete-objects-employee-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/entity:
    get:
      summary: List entities
      description: >-
        Returns up to 100 entities from the collection with a key, ID, and link
        for each entity. This operation is mostly for use in testing; use the
        query service to find entities that meet specific criteria and to
        specify the properties that you want in the response.
      tags:
        - Entities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of entity objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: '1'
                        id: '1'
                        href: /objects/entity/1
                      - key: '96'
                        id: id164
                        href: /objects/entity/96
                      - key: '21'
                        id: FR
                        href: /objects/entity/21
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-entity
  /objects/entity/{key}:
    parameters:
      - name: key
        description: System-assigned key for the entity.
        in: path
        schema:
          type: string
        required: true
        example: '291'
    get:
      summary: Get an entity
      description: Returns detailed information for a specified entity.
      tags:
        - Entities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the entity
                properties:
                  ia::result:
                    $ref: '#/components/schemas/entity.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Entity details:
                  value:
                    ia::result:
                      key: '102'
                      id: id1644570423
                      name: Paris
                      status: active
                      audit:
                        createdDateTime: '2022-02-11T09:07:07Z'
                        modifiedDateTime: '2022-02-11T09:07:07Z'
                        createdBy: '110'
                        modifiedBy: '110'
                      reportPrintAs: Report Location entity Title
                      taxId: null
                      href: /objects/entity/102
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-entity-key
  /objects/file/{key}:
    parameters:
      - name: key
        description: System-assigned key for the file.
        in: path
        required: true
        schema:
          type: string
  /objects/folder/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the folder.
    get:
      summary: Get a folder
      description: Returns detailed information for a particular folder.
      tags:
        - Folders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the folder
                properties:
                  ia::result:
                    $ref: '#/components/schemas/folder.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '1'
                      id: Bills
                      audit:
                        createdDate: '2021-09-01'
                        createdBy: Admin
                        modifiedBy: Admin
                        modifiedDate: '2021-09-01'
                      description: Annual bills folder
                      status: active
                      href: /objects/folder/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-folder-key
    delete:
      summary: Delete a folder
      description: Deletes a folder.
      tags:
        - Folders
      operationId: delete-objects-folder-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a folder
      description: >-
        Updates an existing folder by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Folders
      operationId: patch-objects-folder-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated folder
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '1'
                      id: Bills
                      href: /objects/folder/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/folder.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              example-1:
                value:
                  description: Added new bill
  /objects/folder:
    get:
      summary: List folders
      description: Returns a collection with a key, ID, and link for each folder.
      tags:
        - Folders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of folder objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: '1'
                        id: Bills
                        href: /objects/folder/1
                      - key: '2'
                        id: Credits
                        href: /objects/folder/2
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-folder
    post:
      summary: Create a folder
      description: Creates a new folder.
      tags:
        - Folders
      operationId: post-objects-folder
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New folder
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '1'
                      id: Bills
                      href: /objects/folder/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/folder.s1.schema'
                - $ref: '#/components/schemas/folderRequiredProperties'
            examples:
              example-1:
                value:
                  id: Bills
                  description: Annual bills folder
                  status: active
  /objects/location-group:
    get:
      summary: List location groups
      description: >
        Returns up to 100 location groups from the collection with a key, ID,
        and link for each group. This operation is mostly for use in testing;
        use the query service to find location groups that meet certain criteria
        and specify the properties that are returned.
      tags:
        - Location groups
      operationId: get-objects-location-group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of location groups
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of location groups: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/location-group/{key}:
    parameters:
      - name: key
        description: System-assigned key for the location group.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a location group
      description: Returns detailed information for a specified location group.
      tags:
        - Location groups
      operationId: get-objects-location-group-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the location group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/location-group.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the location group: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/location:
    get:
      summary: List locations
      description: >-
        Returns up to 100 locations from the collection with a key, ID, and link
        for each location. This operation is mostly for use in testing; use the
        query service to find locations that meet certain criteria and specify
        the properties that are returned.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business, Employee, Payment Approver
            permissions: List, View Locations
      tags:
        - Locations
      operationId: get-objects-location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of location objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List locations:
                  value:
                    ia::result:
                      - key: 1
                        id: US-PNW
                        href: /objects/location/1
                      - key: 96
                        id: US-EAST
                        href: /objects/location/96
                      - key: 21
                        id: US-SOUTH
                        href: /objects/location/21
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a location
      description: >-
        Creates a new location. You can think of this as adding a new value to
        the dimension that you can use to tag transactions for reporting.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Add Location
      tags:
        - Locations
      operationId: post-objects-location
      requestBody:
        description: Create location object
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/location.s1.schema'
                - $ref: '#/components/schemas/locationRequiredProperties'
            examples:
              Create a single location:
                value:
                  id: loc22
                  name: 22-India
                  description: All India offices
                  status: active
              Create a child location:
                value:
                  id: loc227
                  name: Bangalore
                  description: Bangalore sales office
                  status: active
                  parent:
                    id: loc22
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New location
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New location created:
                  value:
                    ia::result:
                      key: 234
                      id: 22-India
                      href: /objects/location/234
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/location/{key}:
    parameters:
      - name: key
        description: System-assigned key for the location.
        in: path
        required: true
        example: '92'
        schema:
          type: string
    get:
      summary: Get a location
      description: Returns detailed information for a specified location.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business, Employee, Payment Approver
            permissions: List, View Locations
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the location
                properties:
                  ia::result:
                    $ref: '#/components/schemas/location.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Get a location:
                  value:
                    ia::result:
                      id: WEN
                      key: '6'
                      name: Wenatchee
                      parent:
                        id: PNW--Pacific Northwest
                        key: '5'
                        href: /objects/location/5
                      manager:
                        name: miller, dan
                        id: EE-0000123--miller, dan
                        key: '2'
                        href: /objects/employee/2
                      contacts:
                        primary:
                          mailingAddress:
                            addressLine1: '900 Cherry Avenue, #300'
                            addressLine2: null
                            city: Seattle
                            country: United States
                            postCode: '98066'
                            state: WA
                          URL1: null
                          URL2: null
                          companyName: InsideOut Technologies, Inc
                          email1: null
                          email2: null
                          fax: null
                          firstName: null
                          id: Insideout Technologies, Inc
                          lastName: null
                          middleName: null
                          mobile: null
                          pager: null
                          phone1: null
                          phone2: null
                          prefix: null
                          printAs: InsideOut Technologies, Inc
                          key: '984'
                          href: /objects/contact/984
                        shipTo:
                          mailingAddress:
                            addressLine1: null
                            addressLine2: null
                            city: null
                            country: null
                            postCode: null
                            state: null
                          URL1: null
                          URL2: null
                          companyName: null
                          email1: null
                          email2: null
                          fax: null
                          firstName: null
                          id: null
                          lastName: null
                          middleName: null
                          mobile: null
                          pager: null
                          phone1: null
                          phone2: null
                          prefix: null
                          printAs: null
                          key: null
                      startDate: null
                      endDate: null
                      status: active
                      audit:
                        createdDateTime: '2022-02-11T09:07:07Z'
                        modifiedDateTime: '2022-02-11T09:07:07Z'
                        createdBy: '110'
                        modifiedBy: '110'
                      locationReportingTitle: Seattle Sales Office
                      taxId: null
                      href: /objects/location/102
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-location-key
    patch:
      summary: Update a location
      description: >-
        Updates an existing location by setting field values. Any fields not
        provided remain unchanged.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Edit Locations
      tags:
        - Locations
      operationId: patch-objects-location-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/location.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Update location contacts:
                value:
                  manager:
                    id: '12'
                  contacts:
                    primary:
                      id: john.doe
                    shipTo:
                      id: jane.daw
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated location
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a location
      description: >-
        Deletes a location. You can delete a location if it is not being used or
        referenced. Deleted locations cannot be recovered.
      x-documentationFlags:
        subscription: Company
        userPermissions:
          - userType: Business user with admin privileges
            permissions: Delete Locations
      tags:
        - Locations
      operationId: delete-objects-location-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /services/preferences/advanced-consolidation:
    get:
      summary: Get Advanced consolidation preferences
      description: Returns detailed information for the Advanced consolidation preferences.
      tags:
        - Advanced consolidation preferences
      operationId: get-services-preferences.advanced-consolidation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the preferences.advanced-consolidation
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/preferences.advanced-consolidation.s1.schema
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              example:
                Advanced consolidation preference:
                  value:
                    ia::result:
                      notificationEmail: arpit.jain@sage.com
                      consolidatingLocation:
                        key: '19'
                        id: FF
                        name: Frankfurt
                        href: /objects/location/19
                      minorityInterestGLAccounts:
                        interestLiabilityGLAccount:
                          key: '256'
                          id: '6252'
                          name: Entertainment
                          href: /objects/gl-account/256
                        incomeOrExpenseGLAccount:
                          key: '10'
                          id: '1001'
                          name: CitiBank
                          href: /objects/gl-account/10
                      audit:
                        createdDateTime: '2023-02-03T11:23:11Z'
                        modifiedDateTime: '2023-02-03T11:23:11Z'
                        createdBy: '1'
                        modifiedBy: '1'
                      href: /services/preferences/advanced-consolidation
                    ia::meta:
                      totalCount: 1
                      totalSuccess: 1
                      totalError: 0
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update Advanced consolidation preferences
      description: >-
        Updates an existing advanced consolidation preferences by setting field
        values. Any fields not provided remain unchanged.
      tags:
        - Advanced consolidation preferences
      operationId: patch-services-preferences.advanced-consolidation
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/components/schemas/preferences.advanced-consolidation.s1.schema
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Change Advanced consolidation preference:
                value:
                  notificationEmail: arpit.jain@sage.com
                  consolidatingLocation:
                    key: '19'
                  minorityInterestGLAccounts:
                    interestLiabilityGLAccount:
                      key: '13'
                    incomeOrExpenseGLAccount:
                      key: '23'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated preferences.advanced-consolidation
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Advanced consolidation preference updated:
                  value:
                    ia::result:
                      href: /services/preferences/advanced-consolidation
                    ia::meta:
                      totalCount: 1
                      totalSuccess: 1
                      totalError: 0
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a Advanced consolidation preferences
      description: >-
        Creates a new Advanced consolidation preferences for a company. A
        company can only create one consolidation 

        preferences, i.e. This is a one-time task.
      tags:
        - Advanced consolidation
      operationId: post-services-preferences.advanced-consolidation
      requestBody:
        description: Create Advanced consolidation preferences object
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/components/schemas/preferences.advanced-consolidation.s1.schema
                - $ref: >-
                    #/components/schemas/preferences.advanced-consolidationRequiredProperties
            examples:
              Create a Advanced consolidation preferences:
                value:
                  notificationEmail: arpit.jain@sage.com
                  consolidatingLocation:
                    key: '19'
                  minorityInterestGLAccounts:
                    interestLiabilityGLAccount:
                      key: '13'
                    incomeOrExpenseGLAccount:
                      key: '23'
      responses:
        '201':
          description: Advanced consolidation preferences created
          content:
            application/json:
              schema:
                type: object
                title: New Advanced consolidation preferences
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
        '400':
          $ref: '#/components/responses/400error'
  /services/preferences/company:
    get:
      summary: List company preferences
      description: Returns detailed information for company preferences`.
      tags:
        - Company preferences
      operationId: get-services-preferences.company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the comapny preferences
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of companies: {}
        '400':
          $ref: '#/components/responses/400error'
  /services/preferences/multi-entity:
    get:
      summary: Get multi-entity preferences
      description: Returns current multi entity preference settings.
      tags:
        - Multi-entity preferences
      operationId: get-services-preferences.multi-entity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Multi-entity preferences
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                Current multi-entity preferences:
                  value:
                    ia::result:
                      enableMultipleBaseCurrency: true
                      approvalCurrency: CAD
                      isForm1099: false
                      restrictions:
                        disableEntitySlideIn: false
                        restrictSubledgerTxnToEntity: false
                        enableCustomerRestrictions: true
                        enableVendorRestrictions: true
                        enableCheckingAccountRestrictions: false
                        enableSavingsAccountRestrictions: false
                      interEntityAccountMappingPlan: basic
                      interEntityTransactions:
                        enableForJournalEntry: true
                        manuallyBalanceSubledgerTxns: false
                        manuallyBalanceSubledgerCredits: true
                        creditsJournal:
                          key: '10'
                          id: IEP
                          name: Inter Entity Payable
                          href: /objects/gl-journal/10
                      balanceJournalEntryBy: entity
                      limitAPCredit: true
                      limitARCredit: false
                      moduleConfigured: true
                      audit:
                        createdDateTime: '2021-10-29T08:00:50Z'
                        modifiedDateTime: '2021-12-01T09:08:17Z'
                        createdBy: '1'
                        modifiedBy: '1'
                      href: /services/preferences/multi-entity
                    ia::meta:
                      totalCount: 1,
                      totalSuccess: 1,
                      totalError: 0
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update multi-entity preferences
      description: >-
        Update the multi-entity preferences for a company. Any fields not
        provided remain unchanged.
      tags:
        - Multi-entity preferences
      operationId: patch-services-preferences.multi-entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/preferences.multi-entity.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Enable checking account restrictions:
                value:
                  restrictions:
                    enableCheckingAccountRestrictions: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated preferences.multi-entity
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
  /services/preferences/user/{key}:
    parameters:
      - name: key
        description: System-assigned key for the user.
        schema:
          type: string
        in: path
        required: true
        example: '68'
    get:
      summary: Get user preferences
      description: Returns detailed information for a particular user's preferences.
      tags:
        - User preferences
      operationId: get-services-preferences.user-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the preferences.user
                properties:
                  ia::result:
                    $ref: '#/components/schemas/preferences.user.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                User preference:
                  value:
                    ia::result:
                      key: '1'
                      contact:
                        mailingAddress:
                          addressLine1: 300 Park Avenue
                          addressLine2: Suite 1400
                          city: San Jose
                          country: United States
                          postCode: '95110'
                          state: California
                        email1: alice@example.com
                        firstName: Alice
                        lastName: Cooper
                        phone1: 415-123-4567
                        signature: Thank you, Alice Cooper
                      securityPreferences:
                        sessionTimeoutInSeconds: 3600
                        inactivityTimeoutInSeconds: 21600
                      emailNotifications:
                        paymentRequestsForApproval:
                          enableNotification: true
                          frequency: individual
                          minimumAmount: 0
                        approvedPayments:
                          frequency: individual
                          enableNotification: true
                        purchasingRequestsForApproval:
                          enableNotification: false
                          minimumAmount: 1
                        journalEntryRequestsForApproval:
                          enableNotification: true
                        billRequestsForApproval:
                          enableNotification: false
                          minimumAmount: 1
                        offlineReports:
                          enableNotification: false
                        checklists:
                          enableNotification: true
                        recurringTxnFailures:
                          enableNotifications: false
                      onScreenAlerts:
                        enableWarnOnUnsavedChanges: true
                        enableWarnOnDelete: true
                        enableFormValidationMessagesOnSeparatePage: true
                      personalizeAppearance:
                        startPage: Dashboard
                        startDashboard: '1'
                        entityColorLevel: company
                      personalizeMenu:
                        menuNavigation: click
                        menuOrder: company
                      pagePreferences:
                        recordsPerPage: 20
                        itemsPerPopUpPage: 15
                        itemsPerDropDownList: '5000'
                        recordsPerTransactionPage: '30'
                        enableTypeAheadSuggestions: false
                        newTransactionRowCount: 9
                      personalizePlatform:
                        actionUILayout:
                          useForCustomPages: false
                          useForDeveloperPages: true
                        scriptComponent:
                          theme: lightMode
                          debug: 'off'
                      generalPreferences:
                        language: en_US.UTF-8
                        timeZone: GMT+02:00 Eastern Europe Time
                        timeFormat: HH12:MI:SSAM
                        dateFormat: MM/DD/YYYY
                        decimalsSeparator: .
                        thousandsSeparator: ','
                        autoInsertDecimalPoint: false
                        defaultAttachmentFolder: Test
                      approvalDelegation:
                        enableForPurchasing: true
                        purchasingDelegate: intacct
                        enableForJournalEntryTransactions: false
                        journalEntryDelegate: intacct
                        delegateApprovals: Delegate Purchasing approvals
                        delegateName: intacct
                        enableDelegateForUnknown: false
                      inheritDateFromSourceTxn:
                        inheritForOrderEntryTxns: false
                        inheritForPurchaseOrderTxns: false
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update user preferences
      description: Updates an existing set of user preferences by setting field values.
      tags:
        - User preferences
      operationId: patch-services-preferences.user-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/preferences.user.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Change security timeouts:
                value:
                  securityPreferences:
                    sessionTimeoutInSeconds: 3600
                    inactivityTimeoutInSeconds: 3600
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated preferences.user
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                User preferences updated:
                  value:
                    ia::result:
                      key: '1'
                      href: /services/preferences/user/68
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/reporting-period:
    get:
      summary: List reporting periods
      description: >-
        Returns up to 100 reporting periods from the collection with a key, ID,
        and link for each period. This operation is mostly for use in testing;
        use the query service to find reporting periods that meet specific
        criteria and to specify the properties that you want in the response.
      tags:
        - Reporting periods
      operationId: get-objects-reporting-period
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of reporting-period objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List reporting periods:
                  value:
                    ia::result:
                      - key: '1'
                        id: '1'
                        href: /objects/reporting-period/1
                      - key: '2'
                        id: '2'
                        href: /objects/reporting-period/2
                    ia::meta:
                      totalCount: 2
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a reporting period
      description: Creates a new reporting period.
      tags:
        - Reporting periods
      operationId: post-objects-reporting-period
      requestBody:
        description: Reporting period to create
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/reporting-period.s1.schema'
                - $ref: '#/components/schemas/reporting-periodRequiredProperties'
            examples:
              Create a reporting period: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New reporting period
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New reporting period created:
                  value:
                    ia::result:
                      key: '22'
                      id: '22'
                      href: /objects/reporting-period/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/reporting-period/{key}:
    parameters:
      - name: key
        description: System-assigned unique key for the reporting period.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a reporting period
      description: Returns detailed information for a specified reporting period.
      tags:
        - Reporting periods
      operationId: get-objects-reporting-period-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the reporting period
                properties:
                  ia::result:
                    $ref: '#/components/schemas/reporting-period.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the reporting period: {}
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a reporting period
      description: >-
        Updates an existing reporting period by setting field values. Any fields
        not provided remain unchanged.
      tags:
        - Reporting periods
      operationId: patch-objects-reporting-period-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/reporting-period.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a reporting period: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated reporting-period
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Reporting period updated:
                  value:
                    ia::result:
                      key: '312'
                      id: '312'
                      href: /objects/reporting-period/312
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a reporting period
      description: Deletes a reporting period.
      tags:
        - Reporting periods
      operationId: delete-objects-reporting-period-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/role-assignment:
    get:
      summary: List role assignments
      description: Returns a collection with a key, ID, and link for each role assignment.
      tags:
        - Role assignments
      operationId: get-objects-role-assignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of role-assignment objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of role assignments: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/role-assignment/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the role assignment.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a/an role assignment
      description: Returns detailed information for a particular role assignment.
      tags:
        - Role assignments
      operationId: get-objects-role-assignment-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the role-assignment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/role-assignment.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the role assignment: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/role-policy-assignment:
    get:
      summary: List role policy assignments
      description: >-
        Returns a collection with a key, ID, and link for each role policy
        assignment.
      tags:
        - Role policy assignments
      operationId: get-objects-role-policy-assignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of role-policy-assignment objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of role policy assignments: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/role-policy-assignment/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the role policy assignment.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a/an role policy assignment
      description: Returns detailed information for a particular role policy assignment.
      tags:
        - Role policy assignments
      operationId: get-objects-role-policy-assignment-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the role-policy-assignment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/role-policy-assignment.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the role policy assignment: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/role:
    get:
      summary: List roles
      description: Returns a collection with a key, ID, and link for each role.
      tags:
        - Roles
      operationId: get-objects-role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of role objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of roles: {}
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a/an role
      description: Creates a new role.
      tags:
        - Roles
      operationId: post-objects-role
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/role.s1.schema'
                - $ref: '#/components/schemas/roleRequiredProperties'
            examples:
              Creates a/an role: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New role
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New role: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/role/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the role.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a/an role
      description: Returns detailed information for a particular role.
      tags:
        - Roles
      operationId: get-objects-role-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the role
                properties:
                  ia::result:
                    $ref: '#/components/schemas/role.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the role: {}
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a/an role
      description: >-
        Updates an existing role by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Roles
      operationId: patch-objects-role-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/role.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a/an role: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated role
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated role: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a/an role
      description: Deletes a/an role.
      tags:
        - Roles
      operationId: delete-objects-role-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/sandbox:
    get:
      summary: List sandboxes
      description: Returns a collection with a key, ID, and link for each sandbox.
      tags:
        - Sandboxes
      operationId: get-objects-sandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of sandbox objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: '1'
                        id: '1'
                        href: /objects/sandbox/1
                      - key: '2'
                        id: '2'
                        href: /objects/sandbox/2
                      - key: '3'
                        id: '3'
                        href: /objects/sandbox/3
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
        '400':
          $ref: '#/components/responses/400error'
  /objects/sandbox/{key}:
    parameters:
      - name: key
        description: System-assigned key for the sandbox.
        in: path
        required: true
        schema:
          type: string
          example: '10'
    get:
      summary: Get a sandbox
      description: Returns detailed information for a particular sandbox.
      tags:
        - Sandboxes
      operationId: get-objects-sandbox-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the sandbox
                properties:
                  ia::result:
                    $ref: '#/components/schemas/sandbox.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: '10'
                      id: '10'
                      name: Company_title-sandbox
                      description: Sandbox description
                      state: pending
                      expirationDate: '2022-09-01'
                      lastRefreshedDate: '2022-06-22'
                      audit:
                        createdDateTime: '2022-04-20T16:20:00Z'
                        modifiedDateTime: '2022-04-20T16:20:00Z'
                        createdBy: '1'
                        modifiedBy: '95'
                      href: /objects/sandbox/10
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a sandbox
      description: Deletes a sandbox.
      tags:
        - Sandboxes
      operationId: delete-objects-sandbox-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/sender-id-whitelist:
    get:
      summary: List sender id whitelists
      description: >-
        Returns a collection with a key, ID, and link for each sender id
        whitelist.
      tags:
        - Sender id whitelists
      operationId: get-objects-sender-id-whitelist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of sender-id-whitelist objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List sender id whitelists: {}
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a/an sender id whitelist
      description: Creates a new sender id whitelist.
      tags:
        - Sender id whitelists
      operationId: post-objects-sender-id-whitelist
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/sender-id-whitelist.s1.schema'
                - $ref: '#/components/schemas/sender-id-whitelistRequiredProperties'
            examples:
              Creates a/an sender id whitelist: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New sender-id-whitelist
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New sender id whitelist: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/sender-id-whitelist/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the sender id whitelist.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a/an sender id whitelist
      description: Returns detailed information for a particular sender id whitelist.
      tags:
        - Sender id whitelists
      operationId: get-objects-sender-id-whitelist-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the sender-id-whitelist
                properties:
                  ia::result:
                    $ref: '#/components/schemas/sender-id-whitelist.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the sender id whitelist: {}
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a/an sender id whitelist
      description: >-
        Updates an existing sender id whitelist by setting field values. Any
        fields not provided remain unchanged.
      tags:
        - Sender id whitelists
      operationId: patch-objects-sender-id-whitelist-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/sender-id-whitelist.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a/an sender id whitelist: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated sender-id-whitelist
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated sender id whitelist: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a/an sender id whitelist
      description: Deletes a/an sender id whitelist.
      tags:
        - Sender id whitelists
      operationId: delete-objects-sender-id-whitelist-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/tax-solution:
    get:
      summary: List tax solutions
      description: >-
        Returns up to 100 tax solutions from the collection with a key, ID, and
        link for each solution. This operation is mostly for use in testing; use
        the query service to find tax solutions that meet certain criteria and
        specify the properties that are returned.
      tags:
        - Tax solutions
      operationId: get-objects-tax-solution
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of tax-solution objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List tax solutions:
                  value:
                    ia::result:
                      - key: '265'
                        id: Oregon
                        href: /objects/tax-solution/265
                      - key: '263'
                        id: Alaska
                        href: /objects/tax-solution/263
                      - key: '264'
                        id: Montana
                        href: /objects/tax-solution/264
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a tax solution
      description: Creates a new tax solution.
      tags:
        - Tax solutions
      operationId: post-objects-tax-solution
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/tax-solution.s1.schema'
                - $ref: '#/components/schemas/tax-solutionRequiredProperties'
            examples: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: Details of the tax solution
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New tax solution created:
                  value:
                    ia::result:
                      key: '13'
                      id: Oregon
                      href: /objects/tax-solution/13
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
  /objects/tax-solution/{key}:
    parameters:
      - name: key
        description: System-assigned key for the tax solution.
        in: path
        required: true
        example: '43'
        schema:
          type: string
    get:
      summary: Get a tax solution
      description: Returns detailed information for a specified tax solution.
      tags:
        - Tax solutions
      operationId: get-objects-tax-solution-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the tax-solution
                properties:
                  ia::result:
                    $ref: '#/components/schemas/tax-solution.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a tax solution
      description: >-
        Updates an existing tax-solution by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Tax solutions
      operationId: patch-objects-tax-solution-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/tax-solution.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated tax-solution
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Tax solution updated:
                  value:
                    ia::result:
                      key: '312'
                      id: Delaware
                      href: /objects/tax-solution/312
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a tax solution
      description: Deletes a tax-solution.
      tags:
        - Tax solutions
      operationId: delete-objects-tax-solution-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/txn-currency:
    get:
      summary: List transaction currencies
      description: >-
        Returns up to 100 currencies from the collection with a key, ID, and
        link for each one. This operation is mostly for use in testing; use the
        query service to find currencies that meet specific criteria and to
        specify the properties that you want in the response.
      tags:
        - Transaction currencies
      operationId: get-objects-txn-currency
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of txn-currency objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List currencies:
                  value:
                    ia::result:
                      - key: '1'
                        id: AUD
                        href: /objects/txn-currency/1
                      - key: '2'
                        id: EUR
                        href: /objects/txn-currency/2
                    ia::meta:
                      totalCount: 2
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
  /objects/txn-currency/{key}:
    parameters:
      - name: key
        description: System-assigned key for the transaction currency.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a transaction currency
      description: Returns detailed information for a specified transaction currency.
      tags:
        - Transaction currencies
      operationId: get-objects-txn-currency-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the txn-currency
                properties:
                  ia::result:
                    $ref: '#/components/schemas/txn-currency.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a transaction currency
      description: Deletes a transaction currency.
      tags:
        - Transaction currencies
      operationId: delete-objects-txn-currency-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/user-group:
    get:
      summary: List user groups
      description: >-
        Returns up to 100 user groups from the collection with a key, ID, and
        link for each group. This operation is mostly for use in testing; use
        the query service to find user groups that meet certain criteria and
        specify the properties that are returned.
      tags:
        - User groups
      operationId: get-objects-user-group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of user-group objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                List of user groups:
                  value:
                    ia::result:
                      - key: '1'
                        id: Warehouse users
                        href: /objects/user-group/1
                      - key: '96'
                        id: AP users
                        href: /objects/user-group/96
                      - key: '21'
                        id: Administrators
                        href: /objects/user-group/21
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
    post:
      summary: Create a user group
      description: Creates a new user group.
      tags:
        - User groups
      operationId: post-objects-user-group
      requestBody:
        description: User group to create
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/user-group.s1.schema'
                - $ref: '#/components/schemas/user-groupRequiredProperties'
            examples:
              Creates a user group: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New user group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                New user group: {}
        '400':
          $ref: '#/components/responses/400error'
  /objects/user-group/{key}:
    parameters:
      - name: key
        description: system-assigned unique key for the user group.
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a user group
      description: Returns detailed information for a specified user group.
      tags:
        - User groups
      operationId: get-objects-user-group-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the user group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/user-group.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Details of the user group: {}
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a user group
      description: >-
        Updates an existing user group by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - User groups
      operationId: patch-objects-user-group-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/user-group.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a user group: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated user group
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated user group: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete a user group
      description: Deletes a user group.
      tags:
        - User groups
      operationId: delete-objects-user-group-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/user/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the user.
        example: 65
    get:
      summary: Get a user
      description: Returns detailed information for a particular user.
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the user
                properties:
                  ia::result:
                    $ref: '#/components/schemas/user.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: 65
                      id: Admin
                      userName: Admin
                      href: /objects/user/65
                      contact:
                        mailingAddress:
                          addressLine1: 744 Edgewater Blvd
                          addressLine2: Apt 104
                          city: San Jose
                          state: CA
                          postCode: 95110
                          country: United States
                        id: contact01650967341
                        lastName: John
                        firstName: E.
                        middleName: Doe
                        prefix: Mr
                        printAs: John E. Doe
                        email1: john.doe@example.com
                        email2: john.e.doe@example.com
                        phone1: 6692248123
                        phone2: 1222455566
                        mobile: 1222455566
                        pager: 12566
                        fax: 1222455566
                        URL1: http://john.example.com
                        URL2: http://john.doe.example.com
                        companyName: Example Company
                        key: 3446
                        href: /objects/contact/3446
                      adminPrivileges: 'off'
                      userType: business
                      webServices:
                        enabled: true
                        restricted: false
                      status: active
                      password:
                        neverExpires: true
                        requiresReset: false
                        securityQuestion: What is my favourite food?
                      sso:
                        isSSOEnabled: true
                        federatedSSOId: john.doe
                      entity:
                        unrestricted: true
                        allowToplevelAccess: false
                      audit:
                        createdDateTime: '2022-04-26T10:17:12Z'
                        modifiedDateTime: '2022-04-26T11:05:26Z'
                        createdBy: '110'
                        modifiedBy: '109'
                      disableChatter: true
                      locations:
                        - id: 87
                          name: London
                          href: /objects/location/87
                        - id: 92
                          name: Paris
                          href: /objects/location/92
                      departments:
                        - id: 55
                          name: Sales
                          href: /objects/department/55
                        - id: 65
                          name: Accounting
                          href: /objects/department/65
                      territories:
                        - id: 22
                          name: South
                          href: /objects/territory/22
                        - id: 32
                          name: West
                          href: /objects/territory/32
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-user-key
    delete:
      summary: Delete a user
      description: Deletes a user.
      tags:
        - Users
      operationId: delete-objects-user-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
    patch:
      summary: Update a user
      description: >-
        Updates an existing user by setting field values. Any fields not
        provided remain unchanged.
      tags:
        - Users
      operationId: patch-objects-user-key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated user
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: 65
                      id: Admin
                      href: /objects/user/65
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/user.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
                      example: 1
                    adminPrivileges:
                      readOnly: true
                      example: 'off'
            examples:
              example-1:
                value:
                  userName: Admin
                  status: inactive
  /objects/user:
    get:
      summary: List users
      description: Returns a collection with a key ID and link for each user.
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of user objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      - key: 1
                        id: Admin
                        href: /objects/user/1
                      - key: 2
                        id: Jane Doe
                        href: /objects/user/2
                      - key: 4
                        id: Larry Smith
                        href: /objects/user/4
                    ia::meta:
                      totalCount: 3
                      start: 1
                      pageSize: 100
                      next: null
                      previous: null
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-user
    post:
      summary: Create a user
      description: Creates a new user.
      tags:
        - Users
      operationId: post-objects-user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New user
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                example-1:
                  value:
                    ia::result:
                      key: 1
                      id: Admin
                      href: /objects/user/1
                    ia::meta:
                      totalCount: 1
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/user.s1.schema'
                - $ref: '#/components/schemas/userRequiredProperties'
            examples:
              example-1:
                value:
                  id: Admin
                  userName: Amin
                  userType: Business
                  status: active
                  isWebServicesOnlyUser: false
                  contact:
                    id: Smith
                    lastName: Smith
                    firstName: Alex
                    email1: smith.alex@example.com
                    mailingAddress:
                      addressLine1: 300 Park Avenue
                      city: San Jose
                      state: California
                      postCode: 95110
                      country: United States
                  disableChatter: true
components:
  schemas:
    attachment:
      $ref: '#/components/schemas/attachment.s1.schema'
    attachmentRequiredProperties:
      type: object
      required:
        - id
    file.s1.schema:
      title: file
      x-mappedTo: supportingdocumentdata
      x-ownedBy: attachment
      type: object
      description: a single file in Intacct, aka supporting document
      properties:
        key:
          type: string
          description: File Key
          x-mappedTo: RECORDNO
          example: '1'
          readOnly: true
        id:
          type: string
          description: File ID
          x-mappedTo: RECORDNO
          x-mutable: false
          example: '1'
          readOnly: true
        href:
          type: string
          example: /objects/file/1
          readOnly: true
        data:
          type: string
          description: Data
          x-mappedTo: DATA
          format: base64zip
          x-mutable: false
          example: Y2V2YSwgYWx0Y2V2YQ0Kc2kgaW5jYSBjZXZh
        size:
          type: integer
          description: Size in bytes
          x-mappedTo: SIZE
          example: 27
        name:
          type: string
          description: File name with extension
          x-mappedTo: NAME
          example: test.txt
        attachment:
          title: attachment
          type: object
          x-mappedTo: supportingdocuments
          x-object: attachment
          properties:
            id:
              type: string
              readOnly: true
              x-mappedTo: SUPDOCID
            key:
              type: string
              x-mappedTo: DOCUMENTKEY
            href:
              type: string
              example: /objects/attachment/1
              readOnly: true
    audit.s1.schema:
      type: object
      title: audit
      properties:
        createdDateTime:
          description: Time of the submission
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENCREATED
          readOnly: true
        modifiedDateTime:
          description: Time of the modification
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENMODIFIED
          readOnly: true
        createdBy:
          description: User who created this
          type: string
          example: '1'
          x-mappedTo: CREATEDBY
          readOnly: true
        modifiedBy:
          description: User who modified this
          type: string
          example: '95'
          x-mappedTo: MODIFIEDBY
          readOnly: true
      readOnly: true
    attachment.s1.schema:
      title: attachment
      x-mappedTo: supportingdocuments
      type: object
      description: Container to hold multiple files
      properties:
        key:
          type: string
          description: Attachment Key test
          readOnly: true
          x-mappedTo: RECORDNO
          example: '1'
        id:
          type: string
          description: Attachment ID
          x-mappedTo: DOCUMENTID
          x-mutable: false
          example: SupDoc1
        name:
          type: string
          description: Name
          x-mappedTo: DOCUMENTNAME
          example: Attach-01
        href:
          type: string
          readOnly: true
          example: /objects/attachment/1
        folder:
          type: object
          description: Folder
          x-object: folder
          properties:
            key:
              type: string
              x-mappedTo: GROUPRECORDKEY
              example: '4'
            id:
              type: string
              x-mappedTo: GROUPKEY
              readOnly: true
              example: SupDocFolder1
            href:
              type: string
              readOnly: true
              example: /objects/folder/4
        description:
          type: string
          description: Description
          x-mappedTo: DESCRIPTION
          example: Attachment Attach-01
        files:
          type: array
          description: Attached files
          x-mappedTo: ATTACHMENTS
          x-object: file
          items:
            $ref: '#/components/schemas/file.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
      examples: []
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
    object-reference.schema:
      title: object-reference
      type: object
      description: Reference Object definition
      properties:
        key:
          type: string
        id:
          type: string
        href:
          type: string
          readOnly: true
    metadata-pages.schema:
      title: metadata-pages
      description: Meta data for collection response
      type: object
      allOf:
        - $ref: '#/components/schemas/metadata.schema'
        - type: object
          properties:
            start:
              type: integer
              description: Start Element Number
              x-mappedTo: null
              readOnly: true
              example: 1
            pageSize:
              type: integer
              description: Page Size
              x-mappedTo: null
              readOnly: true
              example: 100
            next:
              type: integer
              description: Next Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: 101
            previous:
              type: integer
              description: Previous Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: null
    class:
      $ref: '#/components/schemas/class.s1.schema'
    classRequiredProperties:
      type: object
      required:
        - id
        - name
    dimension-status.s1.schema:
      title: dimension-status
      type: string
      enum:
        - active
        - activeNonPosting
        - inactive
      x-mappedToValues:
        - active
        - active non-posting
        - inactive
      description: Status of object, Active/Active-Non-Posting/Inactive
      x-mappedTo: STATUS
      example: active
    class.s1.schema:
      title: class
      x-mappedTo: class
      type: object
      description: >-
        Class is a customizable dimension that can be defined in a company and
        set on transactions to expand report functionality and insight.
      properties:
        key:
          description: >-
            System-assigned unique key for the class. Used to identify the class
            in URLs or JSON bodies for all operations on the class.
          type: string
          readOnly: true
          x-mappedTo: RECORDNO
          example: '42'
        id:
          description: Unique ID for the class.
          type: string
          x-mutable: false
          x-mappedTo: CLASSID
          example: 1-Goods
        href:
          description: Endpoint for this class.
          type: string
          readOnly: true
          example: /objects/class/21
        status:
          $ref: '#/components/schemas/dimension-status.s1.schema'
          example: active
        description:
          description: Description of the class.
          type: string
          x-mappedTo: DESCRIPTION
          example: Goods available for donations
        name:
          description: Name of this class.
          type: string
          x-mappedTo: NAME
          example: Goods
        parent:
          type: object
          description: Parent class, for class hierarchies.
          title: parent
          x-object: class
          x-mappedTo: PARENT
          properties:
            id:
              description: Parent class ID.
              type: string
              readOnly: true
              x-mappedTo: PARENTID
              example: 23-Donations
            key:
              description: Parent class key.
              type: string
              readOnly: false
              x-mappedTo: PARENTKEY
              example: '4'
            href:
              description: URL for parent class.
              type: string
              readOnly: true
              example: /objects/class/3
            name:
              description: Name of parent class.
              type: string
              readOnly: true
              x-mappedTo: PARENTNAME
              example: Donations
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    co-document-sequence-get-next-sequence-request:
      description: get-next-sequence request
      type: object
      x-mappedTo: __custom__
      properties:
        key:
          type: string
          description: Document sequence Key
          x-mappedTo: KEY
          example: '14'
        id:
          type: string
          description: Document sequence ID
          x-mappedTo: ID
          example: AR Inv
    co-document-sequence-get-next-sequence-response:
      description: get-next-sequence response
      type: object
      x-mappedTo: __custom__
      properties:
        nextSequence:
          type: string
          description: the value of the next sequence
          x-mappedTo: NEXT
          example: INV-16
        key:
          type: string
          description: the value of the sequence key given in the request
          x-mappedTo: KEY
          example: '14'
        id:
          type: string
          description: the value of the sequence id given in the request
          x-mappedTo: ID
          example: AR Inv
    contact-tax-group:
      $ref: '#/components/schemas/contact-tax-group.s1.schema'
    contact-tax-groupRequiredProperties:
      type: object
      required:
        - id
    contact-tax-group.s1.schema:
      title: contact-tax-group
      type: object
      description: >-
        Contact tax groups enable taxes to be applied to customers, vendors, and
        their contacts, according to their jurisdictions.
      x-mappedTo: taxgroup
      properties:
        key:
          type: string
          description: System-assigned key for the contact tax group.
          x-mappedTo: RECORDNO
          readOnly: true
        id:
          type: string
          description: Unique name for the contact tax group.
          x-mappedTo: NAME
          x-mutable: false
        href:
          type: string
          description: URL for the contact tax group.
          readOnly: true
        groupType:
          type: string
          enum:
            - contact
          x-mappedToValues:
            - Contact
          description: Tax group type.
          x-mappedTo: GROUPTYPE
        taxSolution:
          type: object
          description: >-
            Tax solution associated with this contact tax group. Different tax
            solutions are available for different countries, for example,
            Australia GST, South Africa VAT, UK Vat.
          x-object: tax-solution
          x-mappedTo: TAXSOLUTION
          properties:
            key:
              type: string
              description: System-assigned key for the tax solution.
              x-mappedTo: TAXSOLUTIONKEY
            id:
              type: string
              description: ID for the tax solution.
              x-mappedTo: TAXSOLUTIONID
            href:
              type: string
              description: URL for the tax solution.
              readOnly: true
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    contact:
      $ref: '#/components/schemas/contact.s1.schema'
    contactRequiredProperties:
      type: object
      required:
        - id
        - printAs
    status.s1.schema:
      title: status
      type: string
      enum:
        - active
        - inactive
      x-mappedToValues:
        - active
        - inactive
      description: Object status.
      default: active
      x-mappedTo: STATUS
      example: active
    contact.s1.schema:
      title: contact
      x-mappedTo: contact
      type: object
      description: >
        You can think of contacts as a common, shared address book that's used
        across a company by many people for a variety of purposes. Contacts hold
        all the information needed to contact an individual or business,
        including name, email address, phone number, mailing address, and more. 


        Contacts are almost always used with other Sage Intacct objects, such as
        vendors, customers, or locations. For example, you specify a contact in
        Order Entry and Purchasing transactions to set a ship-to, bill-to,
        pay-to, or return-to addresses, and to determine tax on transactions.
      properties:
        key:
          type: string
          description: >-
            System-assigned unique key for the contact. Used to identify the
            contact in URLs or JSON bodies for all operations on the contact.
          readOnly: true
          x-mappedTo: RECORDNO
          example: 21
        id:
          type: string
          description: Unique identifier for the contact.
          x-mappedTo: CONTACTNAME
          x-mutable: false
          example: 3-Reuben
        href:
          type: string
          readOnly: true
          description: URL for this contact.
          example: /objects/contact/21
        lastName:
          type: string
          description: Last Name
          x-mappedTo: LASTNAME
          example: Kincaid
        firstName:
          type: string
          description: First Name
          x-mappedTo: FIRSTNAME
          example: Reuben
        middleName:
          type: string
          description: Middle Name
          x-mappedTo: INITIAL
          example: Mary
        prefix:
          type: string
          description: Prefix, such as Mr., Mrs., or Ms.
          x-mappedTo: PREFIX
          example: Miss
        email1:
          type: string
          description: Primary email address
          x-mappedTo: EMAIL1
          example: reuben@mycompany.com
        email2:
          type: string
          description: Secondary email address
          x-mappedTo: EMAIL2
          example: robert@mycompany.com
        phone1:
          type: string
          description: Primary phone number
          x-mappedTo: PHONE1
          example: 4151231234
        phone2:
          type: string
          description: Secondary phone number
          x-mappedTo: PHONE2
          example: 4158661823
        mobile:
          type: string
          description: Mobile phone number
          x-mappedTo: CELLPHONE
          example: 4159879876
        pager:
          type: string
          description: Pager number
          x-mappedTo: PAGER
          example: 4151112222
        fax:
          type: string
          description: Fax number
          x-mappedTo: FAX
          example: 4152221111
        URL1:
          type: string
          description: Web page address for this contact.
          x-mappedTo: URL1
          example: https://mycompany.com
        URL2:
          type: string
          description: Secondary web page address.
          x-mappedTo: URL2
          example: https://whitehouse.gov
        companyName:
          type: string
          description: Name of the company associated with this contact.
          x-mappedTo: COMPANYNAME
          example: AlcoSoft Inc
        printAs:
          type: string
          description: >-
            The contact name as you want it to appear on bills, invoices, AR
            statements, advances, adjustments, checks, expense reports, expense
            reimbursements, and 1099s.
          x-mappedTo: PRINTAS
          example: Reuben Kincaid
        showInContactList:
          type: boolean
          description: Display the contact in the contact list.
          x-mappedTo: VISIBLE
          x-mappedToType: string
          default: true
          example: true
        discount:
          type: string
          description: >-
            Default discount percentage to be applied to order entry
            transactions involving this contact.
          x-mappedTo: DISCOUNT
          example: 33
        status:
          $ref: '#/components/schemas/status.s1.schema'
          example: active
        mailingAddress:
          type: object
          title: mailingAddress
          description: The mailing address of the contact.
          properties:
            addressLine1:
              type: string
              description: The first address line for shipping, billing, etc.
              x-mappedTo: MAILADDRESS.ADDRESS1
              example: 300 Park Avenue
            addressLine2:
              type: string
              description: The second address line for shipping, billing, etc.
              x-mappedTo: MAILADDRESS.ADDRESS2
              example: Suite 1400
            city:
              type: string
              description: City
              x-mappedTo: MAILADDRESS.CITY
              example: San Jose
            state:
              type: string
              description: State
              x-mappedTo: MAILADDRESS.STATE
              example: California
            postCode:
              type: string
              description: Zip or Postal Code
              x-mappedTo: MAILADDRESS.ZIP
              example: 95110
            country:
              type: string
              description: Country
              x-mappedTo: MAILADDRESS.COUNTRY
              example: United States of America
            isoCountryCode:
              type: string
              description: >-
                ISO country code. When ISO country codes are enabled in a
                company, both COUNTRY and ISOCOUNTRYCODE must be provided.
              x-mappedTo: MAILADDRESS.COUNTRYCODE
              example: US
        priceList:
          type: object
          title: price list
          description: >-
            Default price list used in order entry when this contact places
            orders. Read [the notes in the Help
            Center](https://www.intacct.com/ia/docs/en_US/help_action/Order_Entry/Setting_up_Order_Entry/Price_lists/assign-OE-price-list-to-objects.htm#Assignapricelisttoacontact)
            for requirements and additional information.
          properties:
            key:
              type: string
              description: Price list key
              x-mappedTo: PRICELISTKEY
              readOnly: true
              example: 7
            id:
              type: string
              description: Price list ID
              x-mappedTo: PRICELIST
              example: Custom-Pricelist
        priceSchedule:
          type: object
          title: price schedule
          description: Price schedule used in order entry when this contact places orders.
          properties:
            key:
              type: string
              description: Price schedule key
              x-mappedTo: PRICESCHEDULEKEY
              readOnly: true
              example: 7
            id:
              type: string
              description: Price schedule ID
              x-mappedTo: PRICESCHEDULE
              example: Discount-Premium
        tax:
          type: object
          title: tax
          description: >-
            Tax settings needed for Intacct to calculate taxes on transactions
            for this contact.
          properties:
            isTaxable:
              type: boolean
              description: Enable tax calculation
              x-mappedTo: TAXABLE
              x-mappedToType: string
              example: true
            taxId:
              type: string
              description: State tax ID or VAT registration number for this contact.
              x-mappedTo: TAXID
              example: US2333
            group:
              type: object
              x-object: contact-tax-group
              x-mappedTo: taxgroup
              description: The contact tax group to be used with this contact.
              properties:
                key:
                  type: string
                  description: Contact tax group key
                  x-mappedTo: TAXGROUPKEY
                  readOnly: true
                  example: 7
                id:
                  type: string
                  description: Contact tax group ID
                  x-mappedTo: TAXGROUP
                  example: Taxes-for-residents
                href:
                  type: string
                  description: URL of the contact tax group.
                  readOnly: true
                  example: /objects/contact-tax-group/7
    department-group:
      $ref: '#/components/schemas/department-group.s1.schema'
    department-groupRequiredProperties:
      type: object
      required:
        - id
    department-group.s1.schema:
      title: department-group
      x-mappedTo: departmentgroup
      type: object
      description: >-
        A specified set of departments, or a set of departments that meet
        certain criteria.
      properties:
        key:
          type: string
          description: System-assigned unique key for the department group.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '46'
        id:
          type: string
          description: >-
            Department group ID. Displayed together with the group name in Sage
            Intacct (_ID_--_Name_). Department group IDs cannot be changed.
          x-mappedTo: ID
          example: SA01
        href:
          type: string
          description: Endpoint for the department group.
          readOnly: true
          example: /objects/department-group/46
        name:
          type: string
          description: >-
            Department group name. Displayed together with the group ID in Sage
            Intacct (_ID_--_Name_).
          x-mappedTo: NAME
          example: Sales
        description:
          type: string
          description: Description of the department group.
          x-mappedTo: DESCRIPTION
          example: All sales groups
        groupType:
          type: string
          description: >
            Group membership type. The group type and options that you select
            determine which departments will be included in report data when you
            filter on this department group.


            If you are creating financial reports that show departments in rows
            or columns, your selection will also determine the column headings
            and row headings that will appear, and the order in which they will
            be listed.


            * `specific` - Specify the departments to include and their order in
            the `members` array.

            * `all` - All departments that match the `memberFilter` criteria.
          x-mappedTo: GROUPTYPE
          example: specific
          enum:
            - all
            - specific
          x-mappedToValues:
            - ALL
            - SPECIFIC
          default: all
        sortOrder:
          type: string
          description: >-
            Sort order for departments that match the `memberFilter`. Only
            applicable when `groupType` = `all`.
          x-mappedTo: SORTORDER
          example: ascending
          enum:
            - ascending
            - descending
          x-mappedToValues:
            - ASC
            - DESC
          default: ascending
        maxMatches:
          type: string
          description: >-
            The maximum number of departments that match the `memberFilter` to
            include in the department group. Only applicable when `groupType` =
            `all`.
          x-mappedTo: RESTRICTTO
          example: null
        memberFilter:
          type: array
          title: memberFilter
          description: >-
            One or more filters to select the departments to include in the
            department group.
          nullable: true
          x-mappedTo: MEMBERFILTERS
          items:
            title: children
            properties:
              field:
                type: string
                description: Department field to filter on, such as ID or manager.
                x-mappedTo: FIELD
                example: STATUS
              operator:
                type: string
                description: Comparison operator.
                x-mappedTo: OPERATOR
                example: '!='
              value:
                type: string
                description: Value to compare against.
                x-mappedTo: VALUE
                example: inactive
        glAccountGroup:
          type: object
          description: >-
            Department report structure that controls how this department group
            is used in reports. If not specified, the group can be used only for
            filtering reports.
          x-mappedTo: glacctgrp
          x-object: gl-account-group
          properties:
            key:
              type: string
              x-mappedTo: GLACCTGRP.RECORDNO
              example: '145'
            id:
              type: string
              x-mappedTo: DIMGRPCOMP
              readOnly: true
              example: Sales and Marketing
            href:
              type: string
              readOnly: true
              example: /objects/gl-account-group/145
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    department:
      $ref: '#/components/schemas/department.s1.schema'
    departmentRequiredProperties:
      type: object
      required:
        - id
        - name
    department.s1.schema:
      title: department
      x-mappedTo: department
      type: object
      description: Information about each department.
      properties:
        key:
          type: string
          description: Department key
          x-mappedTo: RECORDNO
          example: '28'
          readOnly: true
        id:
          type: string
          description: Department id
          x-mappedTo: DEPARTMENTID
          x-mutable: false
          nullable: false
          example: PS
        name:
          type: string
          description: Department name
          x-mappedTo: TITLE
          nullable: false
          example: Professional Services
        reportTitle:
          type: string
          description: Department title displayed in reports
          x-mappedTo: CUSTTITLE
          example: Professional Services Report Title
          nullable: true
          default: null
        parent:
          type: object
          x-object: department
          x-mappedTo: PARENT
          title: parent
          description: Reference to the parent department for this department
          properties:
            key:
              type: string
              description: Parent department key
              x-mappedTo: PARENTKEY
              example: '7'
              readOnly: false
              nullable: true
              default: null
            id:
              type: string
              x-mappedTo: PARENTID
              example: CS--Client Services
              description: Parent department id
              readOnly: true
            name:
              type: string
              description: Parent department Name
              x-mappedTo: PARENTNAME
              example: Client Services
              readOnly: true
            href:
              type: string
              example: /objects/department/7
              description: Parent department URL
              readOnly: true
        supervisor:
          type: object
          x-object: employee
          x-mapptedTo: manager
          title: supervisor
          description: Employee that is supervisor for this department
          properties:
            key:
              type: string
              x-mappedTo: SUPERVISORKEY
              example: '5'
              description: Supervisor key
              readOnly: false
              nullable: true
              default: null
            id:
              type: string
              x-mappedTo: SUPERVISORID
              example: MGR1--PS Dept - Manager
              description: Supervisor id
              readOnly: true
            name:
              type: string
              description: Supervisor Name
              x-mappedTo: SUPERVISORNAME
              example: PS Dept - Manager
              readOnly: true
            href:
              type: string
              example: /objects/employee/5
              description: Supervisor URL
              readOnly: true
        status:
          $ref: '#/components/schemas/dimension-status.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
        href:
          type: string
          example: /objects/department/28
          description: Department URL
          readOnly: true
    document-sequence-number:
      $ref: '#/components/schemas/document-sequence-number.s1.schema'
    document-sequence-numberRequiredProperties:
      type: object
      required:
        - id
    document-sequence-number.s1.schema:
      title: document-sequence-number
      x-mappedTo: seqnum
      type: object
      description: Document sequencing
      properties:
        key:
          type: string
          description: Document sequence Key
          readOnly: true
          x-mappedTo: RECORDNO
          example: '61'
        id:
          type: string
          description: Document sequence ID
          x-mappedTo: TITLE
          x-mutable: false
          example: Vendors
        printTitle:
          type: string
          description: Print title
          x-mappedTo: PRINTTITLE
          example: Vendors
        type:
          type: string
          description: Type
          x-mappedTo: TYPE
          enum:
            - numeric
            - alpha
          x-mappedToValues:
            - Numeric
            - Alpha
          example: Numeric
        fixedLength:
          type: string
          description: >-
            Fixed length, up to 16 characters (numbers sequence will be padded
            with zeros and alpha sequence will be padded with a's)
          x-mappedTo: NUMBERLENGTH
          example: '16'
        fixedPrefix:
          type: string
          description: Fixed prefix
          x-mappedTo: PREFIX
          example: INV
        prefixSeparator:
          type: string
          description: Prefix separator
          x-mappedTo: SEPARATOR1
          example: '-'
        fixedSuffix:
          type: string
          description: Fixed suffix
          x-mappedTo: SUFFIX
          example: COMPANY
        suffixSeparator:
          type: string
          description: Suffix separator
          x-mappedTo: SEPARATOR2
          example: '-'
        startingNumber:
          type: integer
          description: Starting number
          x-mappedTo: FROMNUMBER
          example: 1
        endingNumber:
          type: integer
          description: Ending number
          x-mappedTo: TONUMBER
          example: 100
        nextNumber:
          type: integer
          description: Next number
          x-mappedTo: NEXT
          example: 1
        startingSequence:
          type: string
          description: Starting sequence
          x-mappedTo: FROMSEQ
          example: A
        endingSequence:
          type: string
          description: Ending sequence
          x-mappedTo: TOSEQ
          example: ZZZ
        nextSequence:
          type: string
          description: Next sequence
          x-mappedTo: NEXTSEQ
          example: A
        whenModified:
          type: string
          description: When updated
          x-mappedTo: WHENUPDATED
          example: 02/13/2023 11:34:32
        status:
          $ref: '#/components/schemas/status.s1.schema'
        href:
          type: string
          readOnly: true
          description: URL of the document-sequence-number
          example: /objects/document-sequence-number/61
    earning-type:
      $ref: '#/components/schemas/earning-type.s1.schema'
    earning-type.s1.schema:
      title: earning-type
      x-mappedTo: earningtype
      type: object
      description: List of the Earning types
      properties:
        key:
          type: string
          description: Earning Type Key
          x-mappedTo: RECORDNO
        id:
          type: string
          description: Earning Type Name
          x-mappedTo: NAME
          x-mutable: false
        name:
          type: string
          description: Earning Type Name
          x-mappedTo: NAME
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    email-template:
      $ref: '#/components/schemas/email-template.s1.schema'
    email-templateRequiredProperties:
      type: object
      properties:
        email:
          required:
            - replyTo
      required:
        - name
        - subject
        - body
    email-template.s1.schema:
      title: email-template
      x-mappedTo: emailtemplate
      type: object
      description: >-
        Listing of the templates for sending out any electronic order entry
        transaction with the person who created it. (Legacy)
      properties:
        key:
          type: string
          description: Email Template Key
          readOnly: true
          x-mappedTo: RECORDNO
        id:
          type: string
          description: Email Template ID
          readOnly: true
          x-mappedTo: RECORDNO
        href:
          type: string
          description: URL of the email-template.
          readOnly: true
        status:
          $ref: '#/components/schemas/dimension-status.s1.schema'
        name:
          type: string
          description: name for the email template.
          x-mappedTo: EMAILTEMPLATENAME
        description:
          type: string
          description: Description
          x-mappedTo: DESCRIPTION
        email:
          type: object
          title: email
          properties:
            replyTo:
              type: string
              description: >-
                Enter an email address you want the recipient to reply to. This
                corresponds to the From email address the user sees in the
                Print/Email dialog box when they send an email from a
                transaction.
              x-mappedTo: FROMADDRESS
            to:
              type: string
              description: >-
                To The recipients of the email. You can enter one or more merge
                fields in each field.
              x-mappedTo: TOADDRESS
            cc:
              type: string
              description: >-
                Carbon Copy the recipients of the email. You can enter one or
                more merge fields in each field.
              x-mappedTo: CCADDRESS
            bcc:
              type: string
              description: >-
                Blind Carbon Copy the recipients of the email. You can enter one
                or more merge fields in each field.
              x-mappedTo: BCCADDRESS
        subject:
          type: string
          description: >-
            Subject  Enter a combination of text and merge fields as desired to
            create an informative subject line. This field is required
          x-mappedTo: SUBJECT
        body:
          type: string
          description: >-
            Message  Enter a combination of text, merge fields, and HTML markup
            as desired to create and customize your message. This field is
            required.
          x-mappedTo: BODY
        logo:
          type: object
          title: logo
          properties:
            isLogoIncluded:
              type: boolean
              x-mappedToType: string
              description: >-
                Include logo Select this checkbox to include the logo image file
                identified on the Company Information page in the email
                template.
              x-mappedTo: INCLUDE_LOGO
            verticalPosition:
              type: string
              enum:
                - top
                - bottom
              x-mappedToValues:
                - Top
                - Bottom
              description: >-
                Vertical logo position  Select whether the logo should appear at
                the top or bottom of the email.
              x-mappedTo: VERTICAL_LOGO_POSITION
              default: bottom
            horizontalPosition:
              type: string
              enum:
                - left
                - right
              x-mappedToValues:
                - Left
                - Right
              description: >-
                Horizontal logo position  Select whether the logo should appear
                on the left or right side of the email.
              x-mappedTo: HORIZONTAL_LOGO_POSITION
              default: left
        includeTxnAttachments:
          type: boolean
          x-mappedToType: string
          description: >-
            Select this checkbox to include documents attached to the
            transaction, such as receipts, in the email you send from a
            transaction. Attachments are emailed in the format in which they
            were attached to the transaction. For example, if you attached a TXT
            file, the file is sent as a TXT file.
          x-mappedTo: INCLUDE_ATTACHMENTS
        includeProjectInvoiceTxnAttachments:
          type: boolean
          x-mappedToType: string
          description: >-
            Select this checkbox to include all source document attachments
            linked to a project invoice when emailing the invoice. Attachments
            are emailed in the format in which they were attached to the
            transaction. For example, if you attached a TXT file, the file is
            sent as a TXT file.
          x-mappedTo: INCLUDE_SRC_ATTACHMENTS
        templateType:
          type: string
          enum:
            - arInvoice
            - arStatement
            - Contract
            - orderEntryTxn
            - purchasingTxn
          x-mappedToValues:
            - arinvoice
            - arstatement
            - contract
            - sodocument
            - podocument
          description: Application
          x-mappedTo: OBJNAME
          default: arInvoice
        useSendersPreferredDateFormat:
          type: boolean
          x-mappedToType: string
          description: Display dates in the user preference setting
          x-mappedTo: USERPREFDATEFORMAT
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    employee-group:
      $ref: '#/components/schemas/employee-group.s1.schema'
    employee-group.s1.schema:
      title: employee-group
      x-mappedTo: employeegroup
      type: object
      description: >-
        A specified set of employees, or a set of employees that meet certain
        criteria.
      properties:
        key:
          type: string
          description: System-assigned unique key for the employee group.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '23'
        id:
          type: string
          description: >-
            Employee group ID. Displayed together with the group name in Sage
            Intacct (_ID_--_Name_). Employee group IDs cannot be changed.
          x-mappedTo: ID
          example: MGR
        href:
          type: string
          description: Endpoint for the employee group.
          readOnly: true
          example: /objects/employee-group/23
        name:
          type: string
          description: >-
            Employee group name. Displayed together with the group ID in Sage
            Intacct (_ID_--_Name_).
          x-mappedTo: NAME
          example: Sr. Managers
        description:
          type: string
          description: Description of the employee group.
          x-mappedTo: DESCRIPTION
          example: Managers G10 and above
        groupType:
          type: string
          description: >
            Group membership type. The group type and options that you select
            determine which employees will be included in report data when you
            filter on this employee group.


            If you are creating financial reports that show employees in rows or
            columns, your selection will also determine the column headings and
            row headings that will appear, and the order in which they will be
            listed.


            * `specific` - Specify the employees to include and their order in
            the `members` array.

            * `all` - All employees that match the `memberFilter` criteria.
          x-mappedTo: GROUPTYPE
          example: specific
          enum:
            - all
            - specific
          x-mappedToValues:
            - ALL
            - SPECIFIC
          default: all
        sortOrder:
          type: string
          description: >-
            Sort order for employees that match the `memberFilter`. Only
            applicable when `groupType` = `all`.
          x-mappedTo: SORTORDER
          example:
            enum:
              - ascending
              - descending
            x-mappedToValues:
              - ASC
              - DESC
            default: ascending
        maxMatches:
          type: string
          description: >-
            The maximum number of employees that match the `memberFilter` to
            include in the employee group. Only applicable when `groupType` =
            `all`.
          x-mappedTo: RESTRICTTO
          example: null
        memberFilter:
          type: array
          title: memberFilter
          description: >-
            One or more filters to select the employees to include in the
            employee group.
          nullable: true
          x-mappedTo: MEMBERFILTERS
          items:
            title: children
            properties:
              field:
                type: string
                description: >-
                  Employee field to filter on, such as Employee ID or Country
                  Code.
                x-mappedTo: FIELD
                example: STATUS
              operator:
                type: string
                description: Comparison operator.
                x-mappedTo: OPERATOR
                example: '!='
              value:
                type: string
                description: Value to compare against.
                x-mappedTo: VALUE
                example: inactive
        glAccountGroup:
          type: object
          description: >-
            Employee report structure that controls how this employee group is
            used in reports. If not specified, the group can be used only for
            filtering reports.
          x-mappedTo: glacctgrp
          x-object: gl-account-group
          properties:
            key:
              type: string
              x-mappedTo: GLACCTGRP.RECORDNO
              example: '145'
            id:
              type: string
              x-mappedTo: DIMGRPCOMP
              readOnly: true
              example: Sales and Marketing
            href:
              type: string
              readOnly: true
              example: /objects/gl-account-group/145
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    employee-type:
      $ref: '#/components/schemas/employee-type.s1.schema'
    employee-type.s1.schema:
      title: employee-type
      x-mappedTo: employeetype
      type: object
      description: List of the Employee types
      properties:
        key:
          type: string
          description: Employee Type Key
          x-mappedTo: RECORDNO
        id:
          type: string
          description: Employee Type Name
          x-mappedTo: NAME
          x-mutable: false
        name:
          type: string
          description: Employee Type Name
          x-mappedTo: NAME
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    employee:
      $ref: '#/components/schemas/employee.s1.schema'
    employeeRequiredProperties:
      type: object
      required:
        - id
        - location
        - primaryContact
    employee.s1.schema:
      title: employee
      x-mappedTo: employee
      type: object
      description: Information about an employee.
      properties:
        key:
          type: string
          description: System-assigned unique key for the employee.
          x-mappedTo: RECORDNO
          readOnly: true
          example: '3086'
        id:
          type: string
          description: Unique ID of the employee.
          x-mappedTo: EMPLOYEEID
          x-mutable: false
          example: jsmith
        startDate:
          type: string
          format: date
          example: '2014-01-08'
          description: Employment start date.
          x-mappedTo: STARTDATE
        jobTitle:
          type: string
          description: Job title
          x-mappedTo: TITLE
          example: VP Sales
        status:
          type: string
          description: Status
          enum:
            - active
            - inactive
          x-mappedToValues:
            - active
            - inactive
          x-mappedTo: STATUS
        birthDate:
          type: string
          description: Employee date of birth.
          format: date
          example: '2014-01-08'
          x-mappedTo: BIRTHDATE
        endDate:
          type: string
          description: Employment end date.
          format: date
          example: '2014-01-08'
          x-mappedTo: ENDDATE
        manager:
          type: object
          description: Manager of the employee.
          x-object: employee
          x-mappedTo: employee
          properties:
            key:
              type: string
              x-mappedTo: PARENTKEY
            id:
              type: string
              x-mappedTo: SUPERVISORID
            href:
              type: string
        gender:
          type: string
          description: Gender
          x-mappedTo: GENDER
          enum:
            - female
            - male
          x-mappedToValues:
            - female
            - male
        location:
          type: object
          description: >-
            Employee location. Required only when an employee is created at the
            top level in a multi-entity, multi-base-currency company.
          x-object: location
          x-mappedTo: location
          properties:
            key:
              type: string
              x-mappedTo: LOCATIONKEY
            id:
              type: string
              x-mappedTo: LOCATIONID
            name:
              type: string
              x-mappedTo: LOCATIONNAME
            href:
              type: string
        department:
          type: object
          description: Department that the employee is associated with.
          x-object: department
          x-mappedTo: department
          properties:
            key:
              type: string
              x-mappedTo: DEPARTMENTKEY
            id:
              type: string
              x-mappedTo: DEPARTMENTID
            name:
              type: string
              x-mappedTo: DEPARTMENTTITLE
            href:
              type: string
        class:
          type: object
          description: Class that the employee is associated with.
          x-object: class
          x-mappedTo: class
          properties:
            key:
              type: string
              x-mappedTo: CLASSKEY
            id:
              type: string
              x-mappedTo: CLASSID
            name:
              type: string
              x-mappedTo: CLASSNAME
            href:
              type: string
        defaultCurrency:
          type: string
          description: Currency
          x-mappedTo: CURRENCY
        primaryContact:
          type: object
          description: The contact object that represents the employee.
          x-object: contact
          x-mappedTo: contact
          properties:
            key:
              type: string
              description: System-assigned unique key of the contact.
              x-mappedTo: CONTACTKEY
              example: '12345'
            id:
              type: string
              x-mappedTo: PERSONALINFO.CONTACTNAME
            name:
              type: string
              x-mappedTo: PERSONALINFO.CONTACTNAME
            firstName:
              type: string
              x-mappedTo: PERSONALINFO.FIRSTNAME
            lastName:
              type: string
              x-mappedTo: PERSONALINFO.LASTNAME
            href:
              type: string
              description: Endpoint for the contact.
              example: /objects/contact/12345
        employeeType:
          type: object
          description: employeeType
          x-object: employee-type
          x-mappedTo: employeetype
          properties:
            key:
              type: string
              x-mappedTo: EMPTYPEKEY
            id:
              type: string
              x-mappedTo: EMPLOYEETYPE
            name:
              type: string
              x-mappedTo: EMPLOYEETYPE
            href:
              type: string
        earningType:
          type: object
          description: earningType
          x-object: earning-type
          x-mappedTo: earningtype
          properties:
            key:
              type: string
              x-mappedTo: EARNINGTYPEKEY
            id:
              type: string
              x-mappedTo: EARNINGTYPENAME
            name:
              type: string
              x-mappedTo: EARNINGTYPENAME
            href:
              type: string
        SSN:
          type: string
          description: Employee social security number. Do not include dashes.
          example: '078051120'
          x-mappedTo: SSN
        terminationType:
          type: string
          enum:
            - ''
            - voluntary
            - involuntary
            - deceased
            - disability
            - retired
          x-mappedToValues:
            - ''
            - voluntary
            - involuntary
            - deceased
            - disability
            - retired
          description: Termination type
          x-mappedTo: TERMINATIONTYPE
    entity:
      $ref: '#/components/schemas/entity.s1.schema'
    entityRequiredProperties:
      type: object
      required:
        - id
        - name
    contactref.s1.schema:
      title: contact
      type: object
      x-object: contact
      x-mappedTo: contact
      properties:
        key:
          type: string
          description: Contact Key
          readOnly: true
          x-mappedTo: $$key
          example: '21'
        id:
          type: string
          description: Contact ID
          x-mappedTo: $$prefix.CONTACTNAME
          example: 3-Alice
        href:
          type: string
          readOnly: true
          example: /objects/contact/21
        lastName:
          type: string
          description: Last Name
          x-mappedTo: $$prefix.LASTNAME
          example: Cooper
        firstName:
          type: string
          description: First Name
          x-mappedTo: $$prefix.FIRSTNAME
          example: Alice
        middleName:
          type: string
          description: Middle Name
          x-mappedTo: $$prefix.INITIAL
          example: Mary
        prefix:
          type: string
          description: Prefix
          x-mappedTo: $$prefix.PREFIX
          example: Miss
        printAs:
          type: string
          description: Print As
          x-mappedTo: $$prefix.PRINTAS
          example: Alice.Cooper
        email1:
          type: string
          description: Primary Email
          x-mappedTo: $$prefix.EMAIL1
          example: alice@example.com
        email2:
          type: string
          description: Secondary Email
          x-mappedTo: $$prefix.EMAIL2
          example: cooper@example.com
        phone1:
          type: string
          description: Primary Phone
          x-mappedTo: $$prefix.PHONE1
          example: '14085551212'
        phone2:
          type: string
          description: Secondary Phone
          x-mappedTo: $$prefix.PHONE2
          example: '14085559876'
        mobile:
          type: string
          description: Mobile
          x-mappedTo: $$prefix.CELLPHONE
          example: '14085554420'
        pager:
          type: string
          description: Pager
          x-mappedTo: $$prefix.PAGER
          example: '14085559987'
        fax:
          type: string
          description: Fax
          x-mappedTo: $$prefix.FAX
          example: '14085555309'
        URL1:
          type: string
          description: Primary URL
          x-mappedTo: $$prefix.URL1
          example: https://alice.example.com
        URL2:
          type: string
          description: Secondary URL
          x-mappedTo: $$prefix.URL2
          example: https://cooper.example.com
        companyName:
          type: string
          description: Company Name
          x-mappedTo: $$prefix.COMPANYNAME
          example: AlcoSoft Inc
        mailingAddress:
          type: object
          description: Mailing Address
          properties:
            addressLine1:
              type: string
              description: Addess 1
              x-mappedTo: $$prefix.MAILADDRESS.ADDRESS1
              example: 300 Park Avenue
            addressLine2:
              type: string
              description: Addess 2
              x-mappedTo: $$prefix.MAILADDRESS.ADDRESS2
              example: Suite 1400
            city:
              type: string
              description: City
              x-mappedTo: $$prefix.MAILADDRESS.CITY
              example: San Jose
            state:
              type: string
              description: State
              x-mappedTo: $$prefix.MAILADDRESS.STATE
              example: California
            postCode:
              type: string
              description: Zip or Postal Code
              x-mappedTo: $$prefix.MAILADDRESS.ZIP
              example: '95110'
            country:
              type: string
              description: Country
              x-mappedTo: $$prefix.MAILADDRESS.COUNTRY
              example: United States of America
    entity.s1.schema:
      title: entity
      x-mappedTo: locationentity
      type: object
      description: Entity configuration
      properties:
        key:
          type: string
          description: >-
            System-assigned unique key for the entity. Used to identify the
            entity in URLs or JSON bodies for all operations involving the
            entity.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '3345'
        id:
          type: string
          description: >-
            Unique identifier of the entity. 20 characters max. The ID cannot be
            changed after the entity has been created.
          x-mappedTo: LOCATIONID
          x-mutable: false
          example: Lyon
        href:
          type: string
          readOnly: true
          description: Endpoint for the entity.
          example: /objects/entity/21
        name:
          type: string
          description: Name of the entity.
          x-mappedTo: NAME
          example: Lyon-France
        startDate:
          type: string
          description: The date when the entity became operational.
          x-mappedTo: STARTDATE
          example: '2002-02-02'
        endDate:
          type: string
          description: The date when the entity was taken out of operation.
          x-mappedTo: ENDDATE
          example: '2003-03-03'
        federalId:
          type: string
          description: >-
            The federal tax ID for the entity. This value is only used if the
            company is configured to issue a separate 1099 per entity.
          x-mappedTo: FEDERALID
          example: null
        firstFiscalMonth:
          type: string
          description: First fiscal month.
          x-mappedTo: FIRSTMONTH
          example: '4'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
            - '10'
            - '11'
            - '12'
            - ''
        firstTaxMonth:
          type: string
          description: First tax month.
          x-mappedTo: FIRSTMONTHTAX
          example: '5'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
            - '10'
            - '11'
            - '12'
            - ''
        weekStart:
          type: string
          description: >-
            The first day of each week. This enables the system to provide
            accurate data for reports that begin on the first day of a week.
          x-mappedTo: WEEKSTART
          example: null
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '9'
            - ''
        interEntityPayable:
          type: object
          x-mappedTo: glaccount
          x-object: gl-account
          properties:
            key:
              type: string
              description: >-
                System-assigned unique key of the GL account for payable
                inter-entity transactions.
              x-mappedTo: IEPAYABLEACCTKEY
              example: null
            id:
              type: string
              description: Inter-entity payable account
              x-mappedTo: IEPAYABLE.ACCOUNT
              example: null
            number:
              type: string
              x-mappedTo: IEPAYABLE.NUMBER
              example: null
            href:
              type: string
              readOnly: true
        interEntityReceivable:
          type: object
          x-mappedTo: glaccount
          x-object: gl-account
          properties:
            key:
              type: string
              description: >-
                System-assigned unique key of the GL account for receivable
                inter-entity transactions.
              x-mappedTo: IERECEIVABLEACCTKEY
              example: null
            id:
              type: string
              description: Inter-entity receivable account
              x-mappedTo: IERECEIVABLE.ACCOUNT
              example: null
            number:
              type: string
              x-mappedTo: IERECEIVABLE.NUMBER
              example: null
            href:
              type: string
              readOnly: true
        enableInterEntityRelation:
          type: boolean
          description: Enable different accounts based on the target entity
          x-mappedTo: HAS_IE_RELATION
          example: null
          x-mappedToType: string
        contacts:
          type: object
          description: Contact information for the entity.
          properties:
            primary:
              type: object
              description: >-
                Primary contact information. This could be for the entity itself
                and not for an individual.
              allOf:
                - $ref: '#/components/schemas/contactref.s1.schema'
                - type: object
                  x-object: contact
                  x-mappedTo: contactinfo
                  x-mappedToKey: CONTACTKEY
                  x-mappedToPrefix: CONTACTINFO
            shipTo:
              type: object
              description: >-
                Contact information to use for shipping, if the entity uses a
                different address for receiving goods and services.
              allOf:
                - $ref: '#/components/schemas/contactref.s1.schema'
                - type: object
                  x-object: contact
                  x-mappedTo: shipto
                  x-mappedToKey: SHIPTOKEY
                  x-mappedToPrefix: SHIPTO
        messageText:
          type: string
          description: Message text
          x-mappedTo: MESSAGE_TEXT
          example: null
        marketingText:
          type: string
          description: Marketing text
          x-mappedTo: MARKETING_TEXT
          example: null
        footnoteText:
          type: string
          description: Footnote text
          x-mappedTo: FOOTNOTETEXT
          example: null
        reportPrintAs:
          type: string
          description: >-
            The name of the entity as it will appear on reports and invoices
            that are printed for the entity.
          x-mappedTo: REPORTPRINTAS
          example: null
        isRoot:
          type: string
          x-mappedTo: ISROOT
          example: null
        reserveAmount:
          type: string
          description: Reserve amount
          x-mappedTo: RESERVEAMT
          example: null
        title:
          type: string
          description: Entity title
          x-mappedTo: CUSTTITLE
          example: null
        businessDays:
          type: string
          description: >-
            Comma-separated list of work days in each week. Leave this field
            blank to use Monday-Friday.
          x-mappedTo: BUSINESSDAYS
          example: SUNDAY,MONDAY,TUESDAY,WEDNESDAY,THURSDAY
        weekends:
          type: string
          description: >-
            Comma-separated list of weekend days. Leave this field blank to use
            Saturday and Sunday.
          x-mappedTo: WEEKENDS
          example: FRIDAY,SATURDAY
        vendorEntity:
          type: string
          description: Vendor entity
          x-mappedTo: VENDENTITY
          example: null
        customerEntity:
          type: string
          description: Customer entity
          x-mappedTo: CUSTENTITY
          example: null
        taxId:
          type: string
          description: The state or territory tax ID, or VAT ID.
          x-mappedTo: TAXID
          example: null
        defaultCountry:
          type: string
          description: Default country for addresses
          x-mappedTo: ADDRESSCOUNTRYDEFAULT
          example: null
          enum:
            - unitedStates
            - afghanistan
            - alandIslands
            - albania
            - algeria
            - americanSamoa
            - andorra
            - angola
            - anguilla
            - antarctica
            - antiguaAndBarbuda
            - argentina
            - armenia
            - aruba
            - australia
            - austria
            - azerbaijan
            - bahamas
            - bahrain
            - bangladesh
            - barbados
            - belarus
            - belgium
            - belize
            - benin
            - bermuda
            - bhutan
            - bolivia
            - bonaire,SintEustatiusAndSaba
            - bosniaAndHerzegovina
            - botswana
            - bouvetIsland
            - brazil
            - britishIndianOceanTerritory
            - bruneiDarussalam
            - bulgaria
            - burkinaFaso
            - burundi
            - cambodia
            - cameroon
            - canada
            - capeVerde
            - caymanIslands
            - centralAfricanRepublic
            - chad
            - chile
            - china
            - christmasIsland
            - cocos(Keeling)Islands
            - colombia
            - comoros
            - congo
            - congo,DemocraticRepublic
            - cookIslands
            - costaRica
            - côteD'Ivoire
            - croatia
            - cuba
            - curaçao
            - cyprus
            - czechRepublic
            - denmark
            - djibouti
            - dominica
            - dominicanRepublic
            - ecuador
            - egypt
            - elSalvador
            - equatorialGuinea
            - eritrea
            - estonia
            - eswatini
            - ethiopia
            - falklandIslands(Malvinas)
            - faroeIslands
            - fiji
            - finland
            - france
            - frenchGuiana
            - frenchPolynesia
            - frenchSouthernTerritories
            - gabon
            - gambia
            - georgia
            - germany
            - ghana
            - gibraltar
            - greece
            - greenland
            - grenada
            - guadeloupe
            - guam
            - guatemala
            - guernsey
            - guinea
            - guineaBissau
            - guyana
            - haiti
            - heardIs.&McdonaldIslands
            - honduras
            - hongKong
            - hungary
            - iceland
            - india
            - indonesia
            - iran,IslamicRepublicOf
            - iraq
            - ireland
            - isleOfMan
            - israel
            - italy
            - jamaica
            - japan
            - jersey
            - jordan
            - kazakhstan
            - kenya
            - kiribati
            - korea,RepublicOf
            - korea,Demo.People'sRep.
            - kosovo
            - kuwait
            - kyrgyzstan
            - lao
            - latvia
            - lebanon
            - lesotho
            - liberia
            - libyanArabJamahiriya
            - liechtenstein
            - lithuania
            - luxembourg
            - macao
            - macedonia
            - madagascar
            - malawi
            - malaysia
            - maldives
            - mali
            - malta
            - marshallIslands
            - martinique
            - mauritania
            - mauritius
            - mayotte
            - mexico
            - micronesia
            - moldova,RepublicOf
            - monaco
            - mongolia
            - montenegro
            - montserrat
            - morocco
            - mozambique
            - myanmar
            - namibia
            - nauru
            - nepal
            - netherlands
            - netherlandsAntilles
            - newCaledonia
            - newZealand
            - nicaragua
            - niger
            - nigeria
            - niue
            - norfolkIsland
            - northernMarianaIslands
            - norway
            - oman
            - pakistan
            - palau
            - palestinianTerritory,Occupied
            - panama
            - papuaNewGuinea
            - paraguay
            - peru
            - philippines
            - pitcairn
            - poland
            - portugal
            - puertoRico
            - qatar
            - reunion
            - romania
            - russianFederation
            - rwanda
            - saintBarthelemy
            - saintHelena
            - saintKittsAndNevis
            - saintLucia
            - saintMartin
            - saintPierreAndMiquelon
            - saintVincentAndTheGrenadines
            - samoa
            - sanMarino
            - saoTomeAndPrincipe
            - saudiArabia
            - senegal
            - serbia
            - seychelles
            - sierraLeone
            - singapore
            - sintMaarten
            - slovakia
            - slovenia
            - solomonIslands
            - somalia
            - southAfrica
            - s.Georgia&S.SandwichIs.
            - spain
            - sriLanka
            - sudan
            - southSudan
            - suriname
            - svalbardAndJanMayen
            - sweden
            - switzerland
            - syrianArabRepublic
            - taiwan
            - tajikistan
            - tanzania,UnitedRepublicOf
            - thailand
            - timorLeste
            - togo
            - tokelau
            - tonga
            - trinidadAndTobago
            - tunisia
            - turkey
            - turkmenistan
            - turksAndCaicosIslands
            - tuvalu
            - uganda
            - ukraine
            - unitedArabEmirates
            - unitedKingdom
            - uSMinorOutlyingIslands
            - uruguay
            - uzbekistan
            - vanuatu
            - vaticanCityState
            - venezuela
            - vietnam
            - virginIslands,British
            - virginIslands,U.S.
            - wallisAndFutuna
            - westernSahara
            - yemen
            - zambia
            - zimbabwe
          x-mappedToValues:
            - United States
            - Afghanistan
            - Aland Islands
            - Albania
            - Algeria
            - American Samoa
            - Andorra
            - Angola
            - Anguilla
            - Antarctica
            - Antigua and Barbuda
            - Argentina
            - Armenia
            - Aruba
            - Australia
            - Austria
            - Azerbaijan
            - Bahamas
            - Bahrain
            - Bangladesh
            - Barbados
            - Belarus
            - Belgium
            - Belize
            - Benin
            - Bermuda
            - Bhutan
            - Bolivia
            - Bonaire, Sint Eustatius and Saba
            - Bosnia and Herzegovina
            - Botswana
            - Bouvet Island
            - Brazil
            - British Indian Ocean Territory
            - Brunei Darussalam
            - Bulgaria
            - Burkina Faso
            - Burundi
            - Cambodia
            - Cameroon
            - Canada
            - Cape Verde
            - Cayman Islands
            - Central African Republic
            - Chad
            - Chile
            - China
            - Christmas Island
            - Cocos (Keeling) Islands
            - Colombia
            - Comoros
            - Congo
            - Congo, Democratic Republic
            - Cook Islands
            - Costa Rica
            - Côte d'Ivoire
            - Croatia
            - Cuba
            - Curaçao
            - Cyprus
            - Czech Republic
            - Denmark
            - Djibouti
            - Dominica
            - Dominican Republic
            - Ecuador
            - Egypt
            - El Salvador
            - Equatorial Guinea
            - Eritrea
            - Estonia
            - Eswatini
            - Ethiopia
            - Falkland Islands (Malvinas)
            - Faroe Islands
            - Fiji
            - Finland
            - France
            - French Guiana
            - French Polynesia
            - French Southern Territories
            - Gabon
            - Gambia
            - Georgia
            - Germany
            - Ghana
            - Gibraltar
            - Greece
            - Greenland
            - Grenada
            - Guadeloupe
            - Guam
            - Guatemala
            - Guernsey
            - Guinea
            - Guinea-Bissau
            - Guyana
            - Haiti
            - Heard Is. & Mcdonald Islands
            - Honduras
            - Hong Kong
            - Hungary
            - Iceland
            - India
            - Indonesia
            - Iran, Islamic Republic of
            - Iraq
            - Ireland
            - Isle of Man
            - Israel
            - Italy
            - Jamaica
            - Japan
            - Jersey
            - Jordan
            - Kazakhstan
            - Kenya
            - Kiribati
            - Korea, Republic of
            - Korea, Demo. People's Rep.
            - Kosovo
            - Kuwait
            - Kyrgyzstan
            - Lao
            - Latvia
            - Lebanon
            - Lesotho
            - Liberia
            - Libyan Arab Jamahiriya
            - Liechtenstein
            - Lithuania
            - Luxembourg
            - Macao
            - Macedonia
            - Madagascar
            - Malawi
            - Malaysia
            - Maldives
            - Mali
            - Malta
            - Marshall Islands
            - Martinique
            - Mauritania
            - Mauritius
            - Mayotte
            - Mexico
            - Micronesia
            - Moldova, Republic of
            - Monaco
            - Mongolia
            - Montenegro
            - Montserrat
            - Morocco
            - Mozambique
            - Myanmar
            - Namibia
            - Nauru
            - Nepal
            - Netherlands
            - Netherlands Antilles
            - New Caledonia
            - New Zealand
            - Nicaragua
            - Niger
            - Nigeria
            - Niue
            - Norfolk Island
            - Northern Mariana Islands
            - Norway
            - Oman
            - Pakistan
            - Palau
            - Palestinian Territory, Occupied
            - Panama
            - Papua New Guinea
            - Paraguay
            - Peru
            - Philippines
            - Pitcairn
            - Poland
            - Portugal
            - Puerto Rico
            - Qatar
            - Reunion
            - Romania
            - Russian Federation
            - Rwanda
            - Saint Barthelemy
            - Saint Helena
            - Saint Kitts and Nevis
            - Saint Lucia
            - Saint Martin
            - Saint Pierre and Miquelon
            - Saint Vincent and the Grenadines
            - Samoa
            - San Marino
            - Sao Tome and Principe
            - Saudi Arabia
            - Senegal
            - Serbia
            - Seychelles
            - Sierra Leone
            - Singapore
            - Sint Maarten
            - Slovakia
            - Slovenia
            - Solomon Islands
            - Somalia
            - South Africa
            - S. Georgia & S. Sandwich Is.
            - Spain
            - Sri Lanka
            - Sudan
            - South Sudan
            - Suriname
            - Svalbard and Jan Mayen
            - Sweden
            - Switzerland
            - Syrian Arab Republic
            - Taiwan
            - Tajikistan
            - Tanzania, United Republic of
            - Thailand
            - Timor-Leste
            - Togo
            - Tokelau
            - Tonga
            - Trinidad and Tobago
            - Tunisia
            - Turkey
            - Turkmenistan
            - Turks and Caicos Islands
            - Tuvalu
            - Uganda
            - Ukraine
            - United Arab Emirates
            - United Kingdom
            - US Minor Outlying Islands
            - Uruguay
            - Uzbekistan
            - Vanuatu
            - Vatican City State
            - Venezuela
            - Vietnam
            - Virgin Islands, British
            - Virgin Islands, U.S.
            - Wallis and Futuna
            - Western Sahara
            - Yemen
            - Zambia
            - Zimbabwe
        openBooksStartDate:
          type: string
          description: Open books from
          x-mappedTo: STARTOPEN
          example: null
        operatingCountry:
          type: string
          description: The country in which the entity operates.
          x-mappedTo: OPCOUNTRY
          example: null
          enum:
            - ''
            - unitedStates
            - afghanistan
            - alandIslands
            - albania
            - algeria
            - americanSamoa
            - andorra
            - angola
            - anguilla
            - antarctica
            - antiguaAndBarbuda
            - argentina
            - armenia
            - aruba
            - australia
            - austria
            - azerbaijan
            - bahamas
            - bahrain
            - bangladesh
            - barbados
            - belarus
            - belgium
            - belize
            - benin
            - bermuda
            - bhutan
            - bolivia
            - bonaire,SintEustatiusAndSaba
            - bosniaAndHerzegovina
            - botswana
            - bouvetIsland
            - brazil
            - britishIndianOceanTerritory
            - bruneiDarussalam
            - bulgaria
            - burkinaFaso
            - burundi
            - cambodia
            - cameroon
            - canada
            - capeVerde
            - caymanIslands
            - centralAfricanRepublic
            - chad
            - chile
            - china
            - christmasIsland
            - cocos(Keeling)Islands
            - colombia
            - comoros
            - congo
            - congo,DemocraticRepublic
            - cookIslands
            - costaRica
            - côteD'Ivoire
            - croatia
            - cuba
            - curaçao
            - cyprus
            - czechRepublic
            - denmark
            - djibouti
            - dominica
            - dominicanRepublic
            - ecuador
            - egypt
            - elSalvador
            - equatorialGuinea
            - eritrea
            - estonia
            - eswatini
            - ethiopia
            - falklandIslands(Malvinas)
            - faroeIslands
            - fiji
            - finland
            - france
            - frenchGuiana
            - frenchPolynesia
            - frenchSouthernTerritories
            - gabon
            - gambia
            - georgia
            - germany
            - ghana
            - gibraltar
            - greece
            - greenland
            - grenada
            - guadeloupe
            - guam
            - guatemala
            - guernsey
            - guinea
            - guineaBissau
            - guyana
            - haiti
            - heardIs.&McdonaldIslands
            - honduras
            - hongKong
            - hungary
            - iceland
            - india
            - indonesia
            - iran,IslamicRepublicOf
            - iraq
            - ireland
            - isleOfMan
            - israel
            - italy
            - jamaica
            - japan
            - jersey
            - jordan
            - kazakhstan
            - kenya
            - kiribati
            - korea,RepublicOf
            - korea,Demo.People'sRep.
            - kosovo
            - kuwait
            - kyrgyzstan
            - lao
            - latvia
            - lebanon
            - lesotho
            - liberia
            - libyanArabJamahiriya
            - liechtenstein
            - lithuania
            - luxembourg
            - macao
            - macedonia
            - madagascar
            - malawi
            - malaysia
            - maldives
            - mali
            - malta
            - marshallIslands
            - martinique
            - mauritania
            - mauritius
            - mayotte
            - mexico
            - micronesia
            - moldova,RepublicOf
            - monaco
            - mongolia
            - montenegro
            - montserrat
            - morocco
            - mozambique
            - myanmar
            - namibia
            - nauru
            - nepal
            - netherlands
            - netherlandsAntilles
            - newCaledonia
            - newZealand
            - nicaragua
            - niger
            - nigeria
            - niue
            - norfolkIsland
            - northernMarianaIslands
            - norway
            - oman
            - pakistan
            - palau
            - palestinianTerritory,Occupied
            - panama
            - papuaNewGuinea
            - paraguay
            - peru
            - philippines
            - pitcairn
            - poland
            - portugal
            - puertoRico
            - qatar
            - reunion
            - romania
            - russianFederation
            - rwanda
            - saintBarthelemy
            - saintHelena
            - saintKittsAndNevis
            - saintLucia
            - saintMartin
            - saintPierreAndMiquelon
            - saintVincentAndTheGrenadines
            - samoa
            - sanMarino
            - saoTomeAndPrincipe
            - saudiArabia
            - senegal
            - serbia
            - seychelles
            - sierraLeone
            - singapore
            - sintMaarten
            - slovakia
            - slovenia
            - solomonIslands
            - somalia
            - southAfrica
            - s.Georgia&S.SandwichIs.
            - spain
            - sriLanka
            - sudan
            - southSudan
            - suriname
            - svalbardAndJanMayen
            - sweden
            - switzerland
            - syrianArabRepublic
            - taiwan
            - tajikistan
            - tanzania,UnitedRepublicOf
            - thailand
            - timorLeste
            - togo
            - tokelau
            - tonga
            - trinidadAndTobago
            - tunisia
            - turkey
            - turkmenistan
            - turksAndCaicosIslands
            - tuvalu
            - uganda
            - ukraine
            - unitedArabEmirates
            - unitedKingdom
            - uSMinorOutlyingIslands
            - uruguay
            - uzbekistan
            - vanuatu
            - vaticanCityState
            - venezuela
            - vietnam
            - virginIslands,British
            - virginIslands,U.S.
            - wallisAndFutuna
            - westernSahara
            - yemen
            - zambia
            - zimbabwe
          x-mappedToValues:
            - ''
            - United States
            - Afghanistan
            - Aland Islands
            - Albania
            - Algeria
            - American Samoa
            - Andorra
            - Angola
            - Anguilla
            - Antarctica
            - Antigua and Barbuda
            - Argentina
            - Armenia
            - Aruba
            - Australia
            - Austria
            - Azerbaijan
            - Bahamas
            - Bahrain
            - Bangladesh
            - Barbados
            - Belarus
            - Belgium
            - Belize
            - Benin
            - Bermuda
            - Bhutan
            - Bolivia
            - Bonaire, Sint Eustatius and Saba
            - Bosnia and Herzegovina
            - Botswana
            - Bouvet Island
            - Brazil
            - British Indian Ocean Territory
            - Brunei Darussalam
            - Bulgaria
            - Burkina Faso
            - Burundi
            - Cambodia
            - Cameroon
            - Canada
            - Cape Verde
            - Cayman Islands
            - Central African Republic
            - Chad
            - Chile
            - China
            - Christmas Island
            - Cocos (Keeling) Islands
            - Colombia
            - Comoros
            - Congo
            - Congo, Democratic Republic
            - Cook Islands
            - Costa Rica
            - Côte d'Ivoire
            - Croatia
            - Cuba
            - Curaçao
            - Cyprus
            - Czech Republic
            - Denmark
            - Djibouti
            - Dominica
            - Dominican Republic
            - Ecuador
            - Egypt
            - El Salvador
            - Equatorial Guinea
            - Eritrea
            - Estonia
            - Eswatini
            - Ethiopia
            - Falkland Islands (Malvinas)
            - Faroe Islands
            - Fiji
            - Finland
            - France
            - French Guiana
            - French Polynesia
            - French Southern Territories
            - Gabon
            - Gambia
            - Georgia
            - Germany
            - Ghana
            - Gibraltar
            - Greece
            - Greenland
            - Grenada
            - Guadeloupe
            - Guam
            - Guatemala
            - Guernsey
            - Guinea
            - Guinea-Bissau
            - Guyana
            - Haiti
            - Heard Is. & Mcdonald Islands
            - Honduras
            - Hong Kong
            - Hungary
            - Iceland
            - India
            - Indonesia
            - Iran, Islamic Republic of
            - Iraq
            - Ireland
            - Isle of Man
            - Israel
            - Italy
            - Jamaica
            - Japan
            - Jersey
            - Jordan
            - Kazakhstan
            - Kenya
            - Kiribati
            - Korea, Republic of
            - Korea, Demo. People's Rep.
            - Kosovo
            - Kuwait
            - Kyrgyzstan
            - Lao
            - Latvia
            - Lebanon
            - Lesotho
            - Liberia
            - Libyan Arab Jamahiriya
            - Liechtenstein
            - Lithuania
            - Luxembourg
            - Macao
            - Macedonia
            - Madagascar
            - Malawi
            - Malaysia
            - Maldives
            - Mali
            - Malta
            - Marshall Islands
            - Martinique
            - Mauritania
            - Mauritius
            - Mayotte
            - Mexico
            - Micronesia
            - Moldova, Republic of
            - Monaco
            - Mongolia
            - Montenegro
            - Montserrat
            - Morocco
            - Mozambique
            - Myanmar
            - Namibia
            - Nauru
            - Nepal
            - Netherlands
            - Netherlands Antilles
            - New Caledonia
            - New Zealand
            - Nicaragua
            - Niger
            - Nigeria
            - Niue
            - Norfolk Island
            - Northern Mariana Islands
            - Norway
            - Oman
            - Pakistan
            - Palau
            - Palestinian Territory, Occupied
            - Panama
            - Papua New Guinea
            - Paraguay
            - Peru
            - Philippines
            - Pitcairn
            - Poland
            - Portugal
            - Puerto Rico
            - Qatar
            - Reunion
            - Romania
            - Russian Federation
            - Rwanda
            - Saint Barthelemy
            - Saint Helena
            - Saint Kitts and Nevis
            - Saint Lucia
            - Saint Martin
            - Saint Pierre and Miquelon
            - Saint Vincent and the Grenadines
            - Samoa
            - San Marino
            - Sao Tome and Principe
            - Saudi Arabia
            - Senegal
            - Serbia
            - Seychelles
            - Sierra Leone
            - Singapore
            - Sint Maarten
            - Slovakia
            - Slovenia
            - Solomon Islands
            - Somalia
            - South Africa
            - S. Georgia & S. Sandwich Is.
            - Spain
            - Sri Lanka
            - Sudan
            - South Sudan
            - Suriname
            - Svalbard and Jan Mayen
            - Sweden
            - Switzerland
            - Syrian Arab Republic
            - Taiwan
            - Tajikistan
            - Tanzania, United Republic of
            - Thailand
            - Timor-Leste
            - Togo
            - Tokelau
            - Tonga
            - Trinidad and Tobago
            - Tunisia
            - Turkey
            - Turkmenistan
            - Turks and Caicos Islands
            - Tuvalu
            - Uganda
            - Ukraine
            - United Arab Emirates
            - United Kingdom
            - US Minor Outlying Islands
            - Uruguay
            - Uzbekistan
            - Vanuatu
            - Vatican City State
            - Venezuela
            - Vietnam
            - Virgin Islands, British
            - Virgin Islands, U.S.
            - Wallis and Futuna
            - Western Sahara
            - Yemen
            - Zambia
            - Zimbabwe
        enableLegalContact:
          type: boolean
          description: Enable legal name and address on forms 1099 and 1096
          x-mappedTo: ENABLELEGALCONTACT
          example: null
          x-mappedToType: string
          default: false
        legalName:
          type: string
          description: Legal name, to be printed on 1099 and 1096 forms.
          x-mappedTo: LEGALNAME
          example: null
        legalAddress:
          type: object
          description: Legal address to be used on 1099 and 1096 forms.
          properties:
            address1:
              type: string
              description: Legal address line 1
              x-mappedTo: LEGALADDRESS1
              example: null
            address2:
              type: string
              description: Legal address line 2
              x-mappedTo: LEGALADDRESS2
              example: null
            city:
              type: string
              description: Legal city
              x-mappedTo: LEGALCITY
              example: null
            state:
              type: string
              description: Legal state or territory
              x-mappedTo: LEGALSTATE
              example: null
            zipCode:
              type: string
              description: Legal ZIP or postal code
              x-mappedTo: LEGALZIPCODE
              example: null
            country:
              type: string
              description: Legal country
              x-mappedTo: LEGALCOUNTRY
              example: null
            countryCode:
              type: string
              description: Legal country
              x-mappedTo: LEGALCOUNTRYCODE
              example: null
              enum:
                - us
                - af
                - ax
                - al
                - dz
                - as
                - ad
                - ao
                - ai
                - aq
                - ag
                - ar
                - am
                - aw
                - au
                - at
                - az
                - bs
                - bh
                - bd
                - bb
                - by
                - be
                - bz
                - bj
                - bm
                - bt
                - bo
                - bq
                - ba
                - bw
                - bv
                - br
                - io
                - bn
                - bg
                - bf
                - bi
                - kh
                - cm
                - ca
                - cv
                - ky
                - cf
                - td
                - cl
                - cn
                - cx
                - cc
                - co
                - km
                - cg
                - cd
                - ck
                - cr
                - ci
                - hr
                - cu
                - cw
                - cy
                - cz
                - dk
                - dj
                - dm
                - do
                - ec
                - eg
                - sv
                - gq
                - er
                - ee
                - sz
                - et
                - fk
                - fo
                - fj
                - fi
                - fr
                - gf
                - pf
                - tf
                - ga
                - gm
                - ge
                - de
                - gh
                - gi
                - gr
                - gl
                - gd
                - gp
                - gu
                - gt
                - gg
                - gn
                - gw
                - gy
                - ht
                - hm
                - hn
                - hk
                - hu
                - is
                - in
                - id
                - ir
                - iq
                - ie
                - im
                - il
                - it
                - jm
                - jp
                - je
                - jo
                - kz
                - ke
                - ki
                - kr
                - kp
                - xk
                - kw
                - kg
                - la
                - lv
                - lb
                - ls
                - lr
                - ly
                - li
                - lt
                - lu
                - mo
                - mk
                - mg
                - mw
                - my
                - mv
                - ml
                - mt
                - mh
                - mq
                - mr
                - mu
                - yt
                - mx
                - fm
                - md
                - mc
                - mn
                - me
                - ms
                - ma
                - mz
                - mm
                - na
                - nr
                - np
                - nl
                - an
                - nc
                - nz
                - ni
                - ne
                - ng
                - nu
                - nf
                - mp
                - 'no'
                - om
                - pk
                - pw
                - ps
                - pa
                - pg
                - py
                - pe
                - ph
                - pn
                - pl
                - pt
                - pr
                - qa
                - re
                - ro
                - ru
                - rw
                - bl
                - sh
                - kn
                - lc
                - mf
                - pm
                - vc
                - ws
                - sm
                - st
                - sa
                - sn
                - rs
                - sc
                - sl
                - sg
                - sx
                - sk
                - si
                - sb
                - so
                - za
                - gs
                - es
                - lk
                - sd
                - ss
                - sr
                - sj
                - se
                - ch
                - sy
                - tw
                - tj
                - tz
                - th
                - tl
                - tg
                - tk
                - to
                - tt
                - tn
                - tr
                - tm
                - tc
                - tv
                - ug
                - ua
                - ae
                - gb
                - um
                - uy
                - uz
                - vu
                - va
                - ve
                - vn
                - vg
                - vi
                - wf
                - eh
                - ye
                - zm
                - zw
              x-mappedToValues:
                - US
                - AF
                - AX
                - AL
                - DZ
                - AS
                - AD
                - AO
                - AI
                - AQ
                - AG
                - AR
                - AM
                - AW
                - AU
                - AT
                - AZ
                - BS
                - BH
                - BD
                - BB
                - BY
                - BE
                - BZ
                - BJ
                - BM
                - BT
                - BO
                - BQ
                - BA
                - BW
                - BV
                - BR
                - IO
                - BN
                - BG
                - BF
                - BI
                - KH
                - CM
                - CA
                - CV
                - KY
                - CF
                - TD
                - CL
                - CN
                - CX
                - CC
                - CO
                - KM
                - CG
                - CD
                - CK
                - CR
                - CI
                - HR
                - CU
                - CW
                - CY
                - CZ
                - DK
                - DJ
                - DM
                - DO
                - EC
                - EG
                - SV
                - GQ
                - ER
                - EE
                - SZ
                - ET
                - FK
                - FO
                - FJ
                - FI
                - FR
                - GF
                - PF
                - TF
                - GA
                - GM
                - GE
                - DE
                - GH
                - GI
                - GR
                - GL
                - GD
                - GP
                - GU
                - GT
                - GG
                - GN
                - GW
                - GY
                - HT
                - HM
                - HN
                - HK
                - HU
                - IS
                - IN
                - ID
                - IR
                - IQ
                - IE
                - IM
                - IL
                - IT
                - JM
                - JP
                - JE
                - JO
                - KZ
                - KE
                - KI
                - KR
                - KP
                - XK
                - KW
                - KG
                - LA
                - LV
                - LB
                - LS
                - LR
                - LY
                - LI
                - LT
                - LU
                - MO
                - MK
                - MG
                - MW
                - MY
                - MV
                - ML
                - MT
                - MH
                - MQ
                - MR
                - MU
                - YT
                - MX
                - FM
                - MD
                - MC
                - MN
                - ME
                - MS
                - MA
                - MZ
                - MM
                - NA
                - NR
                - NP
                - NL
                - AN
                - NC
                - NZ
                - NI
                - NE
                - NG
                - NU
                - NF
                - MP
                - 'NO'
                - OM
                - PK
                - PW
                - PS
                - PA
                - PG
                - PY
                - PE
                - PH
                - PN
                - PL
                - PT
                - PR
                - QA
                - RE
                - RO
                - RU
                - RW
                - BL
                - SH
                - KN
                - LC
                - MF
                - PM
                - VC
                - WS
                - SM
                - ST
                - SA
                - SN
                - RS
                - SC
                - SL
                - SG
                - SX
                - SK
                - SI
                - SB
                - SO
                - ZA
                - GS
                - ES
                - LK
                - SD
                - SS
                - SR
                - SJ
                - SE
                - CH
                - SY
                - TW
                - TJ
                - TZ
                - TH
                - TL
                - TG
                - TK
                - TO
                - TT
                - TN
                - TR
                - TM
                - TC
                - TV
                - UG
                - UA
                - AE
                - GB
                - UM
                - UY
                - UZ
                - VU
                - VA
                - VE
                - VN
                - VG
                - VI
                - WF
                - EH
                - YE
                - ZM
                - ZW
        isPartialExempt:
          type: boolean
          description: >-
            Enable partial VAT exemption. When set to `true`, users can enter
            bills with items that are eligible for partial exemption in
            agreement with the HMRC. Requires that tax solution is United
            Kingdom - VAT.
          x-mappedTo: PARTIALEXEMPT
          example: null
          x-mappedToType: string
          default: false
        isDefaultPartialExempt:
          type: boolean
          description: Default input tax credit on
          x-mappedTo: DEFAULTPARTIALEXEMPT
          example: null
          x-mappedToType: string
          default: false
        accountingType:
          type: string
          description: Type
          x-mappedTo: ACCOUNTINGTYPE
          example: null
          enum:
            - entity
            - fund
          x-mappedToValues:
            - Entity
            - Fund
          default: entity
        customer:
          type: object
          x-mappedTo: customer
          x-object: customer
          properties:
            key:
              type: string
              description: Customer tied with
              x-mappedTo: CUSTOMERKEY
              example: null
            id:
              type: string
              description: Customer tied with
              x-mappedTo: CUSTOMERID
              example: null
            name:
              type: string
              description: Customer name
              x-mappedTo: CUSTOMERNAME
              example: null
            href:
              type: string
              readOnly: true
        unrecoverableTaxAccount:
          type: object
          x-mappedTo: glaccount
          x-object: gl-account
          properties:
            key:
              type: string
              description: Unrecoverable tax account key
              x-mappedTo: UNRECOVERABLETAXACCTKEY
              example: null
            id:
              type: string
              description: Unrecoverable tax account
              x-mappedTo: UNRECOVERABLETAXACCTNO
              example: null
            href:
              type: string
              readOnly: true
        manager:
          type: object
          description: The employee who manages the entity.
          x-mappedTo: employee
          x-object: employee
          properties:
            id:
              type: string
              description: Manager ID
              x-mappedTo: SUPERVISORID
              example: null
            key:
              type: string
              description: System-assigned unique key of the manager employee.
              x-mappedTo: SUPERVISORKEY
              example: '1442'
            name:
              type: string
              description: Name of the manager
              x-mappedTo: SUPERVISORNAME
              example: null
            email1:
              type: string
              description: Manager's primary email address.
              x-mappedTo: SUPERVISOREMAIL1
              example: null
            email2:
              type: string
              description: Manager's secondary email address.
              x-mappedTo: SUPERVISOREMAIL2
              example: null
        parent:
          type: object
          x-mappedTo: locationentity
          x-object: entity
          properties:
            key:
              type: string
              description: Parent entity key
              x-mappedTo: PARENTKEY
              example: null
            id:
              type: string
              description: Parent entity id
              x-mappedTo: PARENTID
              example: null
            name:
              type: string
              description: Parent entity name
              x-mappedTo: PARENTNAME
              example: null
            href:
              type: string
              readOnly: true
        taxSolution:
          type: object
          description: >-
            The tax solution to be used by this entity. Only for companies
            subscribed to the Taxes application.
          x-mappedTo: taxsolution
          x-object: tax-solution
          properties:
            key:
              type: string
              description: Tax solution
              x-mappedTo: TAXSOLUTIONKEY
            id:
              type: string
              description: Tax solution
              x-mappedTo: TAXSOLUTIONID
              example: null
            taxMethod:
              type: string
              x-mappedTo: TAXSOLUTIONTAXMETHOD
              example: null
            href:
              type: string
              readOnly: true
        vendor:
          type: object
          x-mappedTo: vendor
          x-object: vendor
          properties:
            key:
              type: string
              description: Vendor tied with
              x-mappedTo: VENDORKEY
              example: null
            id:
              type: string
              description: Vendor tied with
              x-mappedTo: VENDORID
              example: null
            name:
              type: string
              description: Vendor name
              x-mappedTo: VENDORNAME
              example: null
            href:
              type: string
              readOnly: true
        status:
          $ref: '#/components/schemas/dimension-status.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    file:
      $ref: '#/components/schemas/file.s1.schema'
    fileRequiredProperties:
      type: object
      required:
        - id
    folder:
      $ref: '#/components/schemas/folder.s1.schema'
    folderRequiredProperties:
      type: object
      required:
        - id
    folder.s1.schema:
      title: folder
      x-mappedTo: supportingdocumentgrps
      type: object
      description: folder for attachments
      properties:
        key:
          type: string
          description: Attachment Folders Key
          readOnly: true
          x-mappedTo: RECORDNO
          example: '1'
        id:
          type: string
          description: Attachment Folders ID
          x-mappedTo: NAME
          x-mutable: false
          example: fld1
        description:
          type: string
          description: Description
          x-mappedTo: DESCRIPTION
          example: Text files
        parent:
          type: object
          description: Parent folder
          x-object: folder
          properties:
            key:
              type: string
              x-mappedTo: GROUPRECORDKEY
              example: '3'
            id:
              type: string
              x-mappedTo: GROUPKEY
              readOnly: true
              example: fld3
            href:
              type: string
              readOnly: true
              example: /objects/folder/3
        href:
          type: string
          readOnly: true
          example: /objects/folder/1
        status:
          $ref: '#/components/schemas/status.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    location-group:
      $ref: '#/components/schemas/location-group.s1.schema'
    location-groupRequiredProperties:
      type: object
      required:
        - id
    location-group.s1.schema:
      title: location-group
      x-mappedTo: locationgroup
      type: object
      description: >-
        A specified set of locations, or a set of locations that meet certain
        criteria.
      properties:
        key:
          type: string
          description: System-assigned unique key for the location group.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '33'
        id:
          type: string
          description: >-
            Location group ID. Displayed together with the group name in Sage
            Intacct (_ID_--_Name_). Location group IDs cannot be changed.
          x-mappedTo: ID
          example: WH1
        href:
          type: string
          description: Endpoint for the location group.
          readOnly: true
          example: /objects/location-group/33
        name:
          type: string
          description: >-
            Location group name. Displayed together with the group ID in Sage
            Intacct (_ID_--_Name_).
          x-mappedTo: NAME
          example: Western Region Warehouses
        description:
          type: string
          description: Description of the location group.
          x-mappedTo: DESCRIPTION
          example: Western Region Warehouses
        primaryContact:
          type: object
          description: Default contact for this group
          x-object: contact
          x-mappedTo: groupcontact
          properties:
            key:
              type: string
              x-mappedTo: PRIMARYCONTACTKEY
              example: '7'
            id:
              type: string
              x-mappedTo: CONTACTINFO.CONTACTNAME
              readOnly: true
              example: Jeff Pinkerton
            href:
              type: string
              readOnly: true
              example: /objects/contact/7
        groupType:
          type: string
          description: >
            Group membership type. The group type and options that you select
            determine which locations will be included in report data when you
            filter on this location group.


            If you are creating financial reports that show locations in rows or
            columns, your selection will also determine the column headings and
            row headings that will appear, and the order in which they will be
            listed.


            * `specific` - Specify the locations to include and their order in
            the `members` array.

            * `all` - All locations that match the `memberFilter` criteria.
          x-mappedTo: GROUPTYPE
          example: specific
          enum:
            - all
            - specific
          x-mappedToValues:
            - ALL
            - SPECIFIC
          default: all
        sortOrder:
          type: string
          description: >-
            Sort order for locations that match the `memberFilter`. Only
            applicable when `groupType` = `all`.
          x-mappedTo: SORTORDER
          example: null
          enum:
            - ascending
            - descending
          x-mappedToValues:
            - ASC
            - DESC
          default: ascending
        maxMatches:
          type: string
          description: >-
            The maximum number of locations that match the `memberFilter` to
            include in the location group. Only applicable when `groupType` =
            `all`.
          x-mappedTo: RESTRICTTO
          example: null
        memberFilter:
          type: array
          title: memberFilter
          description: >-
            One or more filters to select the locations to include in the
            location group.
          nullable: true
          x-mappedTo: MEMBERFILTERS
          items:
            title: children
            properties:
              field:
                type: string
                description: Location field to filter on, such as ID or Country Code.
                x-mappedTo: FIELD
                example: STATUS
              operator:
                type: string
                description: Comparison operator.
                x-mappedTo: OPERATOR
                example: '!='
              value:
                type: string
                description: Value to compare against.
                x-mappedTo: VALUE
                example: inactive
        glAccountGroup:
          type: object
          description: >-
            Location report structure that controls how this location group is
            used in reports. If not specified, the group can be used only for
            filtering reports.
          x-mappedTo: glacctgrp
          x-object: gl-account-group
          properties:
            key:
              type: string
              x-mappedTo: GLACCTGRP.RECORDNO
              example: '145'
            id:
              type: string
              x-mappedTo: DIMGRPCOMP
              readOnly: true
              example: Los Angeles
            href:
              type: string
              readOnly: true
              example: /objects/gl-account-group/145
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    location:
      $ref: '#/components/schemas/location.s1.schema'
    locationRequiredProperties:
      type: object
      required:
        - id
        - name
    location.s1.schema:
      title: location
      x-mappedTo: location
      type: object
      description: >
        Location is a dimension that is used to represent the geographic
        locations of offices or facilities. It can also be used for divisions in
        a company, if that is more significant than geographic locations. Once
        defined, locations can be set on transactions, and that information can
        be used to provide new insights in reports. 
      properties:
        key:
          type: string
          description: >-
            System-assigned unique key for the location. Used to identify the
            location in URLs or JSON bodies for all operations on the location.
          readOnly: true
          x-mappedTo: RECORDNO
          example: 3345
        id:
          type: string
          description: Unique identifier for the location.
          x-mappedTo: LOCATIONID
          x-mutable: false
          example: 1-Lyon
        href:
          type: string
          readOnly: true
          description: URL for this location.
          example: /objects/location/21
        name:
          type: string
          description: Name of the location.
          x-mappedTo: NAME
          example: Lyon-France
        status:
          $ref: '#/components/schemas/dimension-status.s1.schema'
        taxId:
          type: string
          description: State tax ID or VAT registration number.
          x-mappedTo: TAXID
          example: US4321112
        startDate:
          type: string
          description: Start date of operation at this location.
          x-mappedTo: STARTDATE
          format: date
          example: '2021-01-01'
        endDate:
          type: string
          description: End date of operation at this location.
          x-mappedTo: ENDDATE
          format: date
          example: '2022-04-01'
        contacts:
          type: object
          title: contacts
          description: The list of contacts for the location
          properties:
            primary:
              type: object
              description: >-
                The main Location contact specifies the company name, address,
                and other details as they should appear on invoices, bills, and
                other forms.
              allOf:
                - $ref: '#/components/schemas/contactref.s1.schema'
                - type: object
                  x-object: contact
                  x-mappedTo: contactinfo
                  x-mappedToKey: CONTACTKEY
                  x-mappedToPrefix: CONTACTINFO
            shipTo:
              type: object
              description: >-
                The address for receiving goods and services, if different from
                the primary contact address.
              allOf:
                - $ref: '#/components/schemas/contactref.s1.schema'
                - type: object
                  x-object: contact
                  x-mappedTo: shipto
                  x-mappedToKey: SHIPTOKEY
                  x-mappedToPrefix: SHIPTO
        locationReportingTitle:
          type: string
          description: >-
            Location information displayed in reports, in addition to the
            location name. For example, a location title might might include the
            address and manager name.
          x-mappedTo: CUSTTITLE
        parent:
          type: object
          x-object: location
          x-mappedTo: PARENT
          title: parent
          description: Parent location, for location hierarchies.
          properties:
            key:
              description: Parent location key.
              type: string
              x-mappedTo: PARENTKEY
              readOnly: true
              example: 65
            id:
              description: Parent location ID.
              type: string
              x-mappedTo: PARENTID
              example: 1-France
            href:
              description: URL of parent location.
              type: string
              readOnly: true
              example: /objects/location/65
        manager:
          type: object
          x-object: employee
          x-mappedTo: MANAGER
          title: manager
          description: The employee that manages the location.
          properties:
            key:
              description: Manager's employee key.
              type: string
              x-mappedTo: SUPERVISORKEY
              readOnly: true
              example: 81
            id:
              description: ID of the manager employee.
              type: string
              x-mappedTo: SUPERVISORID
              example: anne.jason
            href:
              description: URL of the manager employee.
              type: string
              readOnly: true
              example: /objects/employee/81
            name:
              description: Name of the manager.
              type: string
              x-mappedTo: SUPERVISORNAME
              readOnly: true
              example: Donations
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    preferences.advanced-consolidation:
      $ref: '#/components/schemas/preferences.advanced-consolidation.s1.schema'
    preferences.advanced-consolidationRequiredProperties:
      type: object
      required:
        - notificationEmail
        - consolidatingLocation
        - >-
          minorityInterestGLAccounts - interestLiabilityGLAccount -
          incomeOrExpenseGLAccount
    preferences.advanced-consolidation.s1.schema:
      title: preferences.advanced-consolidation
      x-mappedTo: cssetup
      type: object
      description: Service to get and update Advanced consolidation preferences
      properties:
        notificationEmail:
          type: string
          description: >-
            Email address for the consolidation notifications. 

            An email will be sent to this address upon completion of a
            successful or failed consolidation.
          x-mappedTo: CONTACTEMAIL
          nullable: false
          example: arpit.jain@company.com
        minorityInterestGLAccounts:
          type: object
          description: >-
            Minority interest GL accounts. Accounts to which you want minority
            interest amounts to be assigned.
          properties:
            incomeOrExpenseGLAccount:
              type: object
              description: The income or expense account for the minority interest GL.
              x-object: gl-account
              properties:
                key:
                  type: string
                  description: System-assigned unique key for the Income or expense account
                  nullable: false
                  x-mappedTo: EQUITYACCTKEY
                  example: '123'
                id:
                  type: string
                  description: Unique ID for Income or expense account
                  x-mappedTo: EQUITYACCTNO
                  readOnly: true
                  nullable: false
                  example: '1000'
                name:
                  type: string
                  description: Name or title of Income or expense account title
                  x-mappedTo: EQUITYACCTTITLE
                  readOnly: true
                  nullable: false
                  example: Bank of India
                href:
                  type: string
                  description: URL of Income or expense account
                  readOnly: true
                  example: /objects/gl-account/9
            interestLiabilityGLAccount:
              type: object
              description: The Interest liability account for the minority interest GL.
              x-object: gl-account
              properties:
                key:
                  type: string
                  description: System-assigned unique key for the Liability account
                  nullable: false
                  x-mappedTo: LIABACCTKEY
                  example: '123'
                id:
                  type: string
                  description: Unique ID for Interest liability account
                  x-mappedTo: LIABACCTNO
                  readOnly: true
                  nullable: false
                  example: '1100'
                name:
                  type: string
                  description: Name or title of Interest liability account
                  x-mappedTo: LIABACCTTITLE
                  readOnly: true
                  nullable: false
                  example: State Bank Of India
                href:
                  type: string
                  description: URL of Interest liability account
                  readOnly: true
                  example: /objects/gl-account/12
        consolidatingLocation:
          type: object
          description: The location to which the consolidated financial data is assigned.
          x-object: location
          properties:
            key:
              type: string
              description: System-assigned unique key for the location
              nullable: false
              x-mappedTo: LOCATIONKEY
              example: '123'
            id:
              type: string
              description: Unique identifier for the location
              x-mappedTo: LOCATIONID
              readOnly: true
              nullable: false
              example: '999'
            name:
              type: string
              description: Name of the location
              x-mappedTo: LOCATIONNAME
              readOnly: true
              nullable: false
              example: India
            href:
              description: URL of consolidating location
              type: string
              readOnly: true
              example: /objects/location/65
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    preferences.company:
      $ref: '#/components/schemas/preferences.company.s1.schema'
    preferences.company.s1.schema:
      title: company
      x-mappedTo: company_info
      type: object
      description: Company setup information
      properties:
        id:
          type: string
          description: Company information ID
          readOnly: true
          x-mappedTo: TITLE
          example: null
        name:
          type: string
          description: Name
          x-mappedTo: NAME
          example: null
        legalName:
          type: string
          description: Legal Name of company
          x-mappedTo: LEGALNAME
          example: null
        legalAddress:
          type: object
          description: The legal address of the company.
          properties:
            addressLine1:
              type: string
              description: The first address line for shipping, billing, etc.
              x-mappedTo: LEGALADDRESS1
              example: 300 Park Avenue
            addressLine2:
              type: string
              description: The second address line for shipping, billing, etc.
              x-mappedTo: LEGALADDRESS2
              example: Suite 1400
            city:
              type: string
              description: City
              x-mappedTo: LEGALCITY
              example: San Jose
            state:
              type: string
              description: State
              x-mappedTo: LEGALSTATE
              example: California
            postCode:
              type: string
              description: Zip or Postal Code
              x-mappedTo: LEGALZIPCODE
              example: '95110'
            country:
              type: string
              description: Country
              x-mappedTo: LEGALCOUNTRY
              example: United States of America
        companyAddress:
          type: object
          description: The legal address of the company.
          properties:
            addressLine1:
              type: string
              description: Address line 1
              x-mappedTo: ADDRESS1
              example: null
            addressLine2:
              type: string
              description: Address line 2
              x-mappedTo: ADDRESS2
              example: null
            city:
              type: string
              description: City
              x-mappedTo: CITY
              example: null
            useISOCountryCodes:
              type: boolean
              description: Use ISO country codes
              x-mappedTo: USEISOCOUNTRY
              example: null
              x-mappedToType: string
              default: 'false'
            country:
              type: string
              description: Country
              x-mappedTo: COUNTRY
              example: null
              default: United States
            state:
              type: string
              description: State or territory (US)
              x-mappedTo: STATEFORUS
              example: null
            stateForNonUS:
              type: string
              description: State or territory (international)
              x-mappedTo: STATEFORNONUS
              example: null
            postCode:
              type: string
              description: ZIP or postal code
              x-mappedTo: ZIPCODE
              example: null
        adminUser:
          type: object
          x-mappedTo: userinfo
          x-object: user
          description: admin user info for company
          properties:
            key:
              type: string
              description: User
              x-mappedTo: ADMIN_USER_KEY
              example: null
            id:
              type: string
              description: User
              x-mappedTo: ADMIN_USER_ID
              example: null
            href:
              type: string
              readOnly: true
              example: /objects/user/21
        companyContact:
          type: object
          description: Company contact
          properties:
            name:
              type: string
              description: Name
              x-mappedTo: CONTACTNAME
              example: null
            phone:
              type: string
              description: Phone
              x-mappedTo: CONTACTPHONE
              example: null
            email:
              type: string
              description: Email address
              x-mappedTo: CONTACTEMAIL
              example: null
            fax:
              type: string
              description: Fax
              x-mappedTo: FAX
              example: null
        companyStructure:
          type: string
          description: Show company structure
          x-mappedTo: COMPANYSTRUCTURE
          example: null
          default: Flat
        slideInPermissions:
          type: string
          description: Slide-in permissions
          x-mappedTo: SLIDEPERMS
          example: null
          default: Subordinate company (anonymous slide-in users)
        permissionType:
          type: string
          description: Permission type
          x-mappedTo: PERMTYPE
          example: null
          default: U
        sessionTimeouts:
          type: object
          description: session timout specifications
          properties:
            hours:
              type: integer
              description: Hours
              x-mappedTo: SESSIONTIMEOUTHR
              example: null
            minutes:
              type: integer
              description: Minutes
              x-mappedTo: SESSIONTIMEOUTMIN
              example: null
            maxHours:
              type: integer
              description: Hours
              x-mappedTo: MAXSESSIONTIMEOUT
              example: null
        scheduledJobs:
          type: string
          description: Scheduled jobs
          x-mappedTo: SCHEDULEDJOBS
          example: null
        scheduledJobsExecutionOffset:
          type: string
          description: Scheduled jobs execution offset
          x-mappedTo: SCHEDULEDJOBSEXECUTIONOFFSET
          example: null
          default: None
        maxLoginAttempt:
          type: integer
          description: Maximum sign-in attempts
          x-mappedTo: MAXLOGINATTEMPT
          example: null
        loginTimeouts:
          type: object
          description: Login time out specifications
          properties:
            hours:
              type: integer
              description: Hours
              x-mappedTo: LOGINTIMEOUTHR
              example: null
            minutes:
              type: integer
              description: Minutes
              x-mappedTo: LOGINTIMEOUTMIN
              example: null
            maxHours:
              type: integer
              description: Hours
              x-mappedTo: MAXLOGINTIMEOUT
              example: null
        passwordSettings:
          type: object
          description: password specifications
          properties:
            requiredPasswordChangeFrequency:
              type: string
              description: Change duration
              x-mappedTo: PWDCHANGEDURATION
              example: null
            enforceQuality:
              type: string
              description: Require users to follow password creation rules.
              x-mappedTo: ENFORCEPWDQUALITY
              example: null
            enforceHistory:
              type: string
              description: Prevent reuse of previous passwords
              x-mappedTo: ENFORCEPWDHISTORY
              example: null
            minLength:
              type: integer
              description: Characters
              x-mappedTo: MINPASSWORDLENGTH
              example: null
              default: '5'
            maxChangeAttempts:
              type: integer
              description: Maximum reset attempts
              x-mappedTo: MAXCHANGEPASSATTEMPT
              example: null
              default: '5'
        ipAddressFilter:
          type: string
          description: IP filter
          x-mappedTo: IPADDRESSFILTER
          example: null
          default: None
        timeZone:
          type: string
          description: Time zone
          x-mappedTo: TIMEZONE
          example: null
          default: 0.00#GMT (Greenwich Mean Time Dublin, Edinburgh, London
        dateFormat:
          type: string
          description: Date format
          x-mappedTo: DATEFORMAT
          example: null
          default: MM/DD/YYYY
        timeFormat:
          type: string
          description: Time format
          x-mappedTo: TIMEFORMAT
          example: null
        decimalsSeparator:
          type: string
          description: Decimals separator.
          enum:
            - ','
            - .
            - _
            - ' '
            - companyDefault
          x-mappedToValues:
            - ','
            - .
            - _
            - _SPACE_
            - _CNY_
          x-mappedTo: CURRENCYDECIMAL_SEP
          default: .
          example: .
        thousandsSeparator:
          type: string
          description: Thousands separator.
          enum:
            - ','
            - .
            - _
            - ' '
            - companyDefault
          x-mappedToValues:
            - ','
            - .
            - _
            - _SPACE_
            - _CNY_
          x-mappedTo: CURRENCYTHOUSAND_SEP
          default: ','
          example: ','
        logoAndColors:
          type: object
          description: Logo and Color plus theme items
          properties:
            theme:
              type: string
              description: Theme
              x-mappedTo: THEME
              example: custom;007C99;
            backgroundColor:
              type: string
              description: Background color
              x-mappedTo: NAVBGCOLOR
              example: null
            textColor:
              type: string
              description: Text color
              x-mappedTo: NAVFONTCOLOR
              example: null
            pushBrandingColorsToAllInstances:
              type: boolean
              description: Apply colors to all instances
              x-mappedTo: PUSHBRANDINGCOLORS
              example: null
              x-mappedToType: string
            brandingHeaderColor:
              type: string
              description: Header background color
              x-mappedTo: BRANDING_HEADER_COLOR
              example: null
            applyLogoToAllInstances:
              type: boolean
              description: Apply logo to all instances
              x-mappedTo: APPLYLOGOTOCHILDREN
              example: null
              x-mappedToType: string
            brandingLogo:
              type: string
              description: Upload logo
              x-mappedTo: BRANDING_LOGO
              example: null
        accounting:
          type: object
          description: Accounting fields from accounting tab in UI go here.
          properties:
            accountingPeriods:
              type: string
              description: Accounting periods
              x-mappedTo: NONSTANDARDPERIODS
              example: null
            firstFiscalMonth:
              type: string
              description: First fiscal month
              x-mappedTo: FIRSTMONTH
              example: null
            weekBeginsOn:
              type: string
              description: Week begins on
              x-mappedTo: WEEKSTART
              example: null
            reportingMethod:
              type: string
              description: Reporting method
              x-mappedTo: ACCRUAL
              example: null
            firstMonthTax:
              type: string
              description: first month tax
              x-mappedTo: FIRSTMONTHTAX
              example: null
            baseCurrency:
              type: string
              description: Base currency
              x-mappedTo: CURRENCY
              example: null
            primaryAccountNumberLength:
              type: integer
              description: Primary account no. length
              x-mappedTo: PRIMACCTNOLEN
              example: null
            accountFieldSeparator:
              type: string
              description: Account field separator
              x-mappedTo: ACCTNOSEPERATOR
              example: null
            subAccountNumberLength:
              type: integer
              description: Subaccount no. length
              x-mappedTo: SUBACCTNOLEN
              example: null
            quickStartTemplate:
              type: string
              description: QuickStart template
              x-mappedTo: INDUSTRYCODE
              example: null
            enableCustomCurrency:
              type: boolean
              description: Enable custom currency
              x-mappedTo: ENABLECUSTOMCURRENCY
              example: null
              x-mappedToType: string
        federalId:
          type: string
          description: Federal ID
          x-mappedTo: FEDERALID
          example: null
        marketingText:
          type: string
          description: Marketing
          x-mappedTo: MARKETING_TEXT
          example: null
        messageText:
          type: string
          description: Message
          x-mappedTo: MESSAGE_TEXT
          example: null
        messageInfo:
          type: string
          description: >-
            Text entered here will print on the lower portion of the customer
            invoice
          x-mappedTo: MESSAGEINFO
          example: null
        currencyCountryFormat:
          type: string
          description: Currency country format
          x-mappedTo: OBJCURRENCYREC
          example: null
        ownerInfo:
          type: string
          description: Ownership info
          x-mappedTo: OWNERINFO
          example: null
        reserveAmount:
          type: number
          description: Reserve amount
          x-mappedTo: RESERVEAMT
          example: null
        layoutType:
          type: string
          description: Layout type
          x-mappedTo: LAYOUTTYPE
          example: null
        useUTF8ForPDF:
          type: string
          description: PDF format
          x-mappedTo: PDF_UTF8
          example: null
          default: F
        attachmentSequenceFormat:
          type: string
          description: Attachment sequence type
          x-mappedTo: SUPDOCSEQUENCE
          example: null
        isPlatformEnabled:
          type: boolean
          description: Is platform enabled
          x-mappedTo: PLATFORMENABLED
          example: null
          x-mappedToType: string
        menuName:
          type: string
          description: Menus
          x-mappedTo: MENUNAME
          example: null
        isGlobalSearchEnabled:
          type: boolean
          description: Is global search enabled
          x-mappedTo: GLOBALSEARCHENABLED
          example: null
          x-mappedToType: string
        verbosityLevel:
          type: string
          description: Verbosity level
          x-mappedTo: VERBOSITYLEVEL
          example: null
        disableNewFinancialWizard:
          type: boolean
          description: Disable new financial wizard
          x-mappedTo: DISABLENEWFINWIN
          example: null
          x-mappedToType: string
        singleSignOn:
          type: object
          description: single sign on fields
          properties:
            enableSingleSignOn:
              type: boolean
              description: Enable single sign-on
              x-mappedTo: SSO_STATUS
              example: null
              x-mappedToType: string
            issuerURL:
              type: string
              description: Issuer URL
              x-mappedTo: SSO_ISSUER_URL
              example: null
            loginURL:
              type: string
              description: Login URL
              x-mappedTo: SSO_LOGIN_URL
              example: null
            certificate:
              type: string
              description: Certificate
              x-mappedTo: SSO_CERTIFICATE
              example: null
            identityProviderType:
              type: string
              description: Identity provider type
              x-mappedTo: SSO_IMPL_TYPE
              example: null
            requestAuthenticationContentType:
              type: string
              description: Requested authentication content type
              x-mappedTo: SSO_REQ_AUTH_CONTENT_TYPE
              example: null
              default: minimum
        multiFactorAuthorization:
          type: object
          description: Fields for MFA
          properties:
            enableMFA:
              type: boolean
              description: Enable 2-step verification
              x-mappedTo: MFA_IS_ENABLED
              example: null
              x-mappedToType: string
            enableMFATrustedDevices:
              type: boolean
              description: Do not allow trusted devices
              x-mappedTo: MFA_DISABLE_TRUSTED
              example: null
              x-mappedToType: string
              default: 'false'
            mfaUserMode:
              type: string
              description: null
              x-mappedTo: MFA_USER_MODE
              example: null
            mfaTrustedLabel:
              type: string
              description: >-
                Disabling trusted devices will require all users to verify each
                login using an authenticator application.
              x-mappedTo: MFA_TRUSTED_LABEL
              example: null
        taxId:
          type: string
          description: Tax ID
          x-mappedTo: TAXID
          example: null
        levelOfServiceAlertThreshold:
          type: number
          description: API usage alert threshold
          x-mappedTo: LOS_ALERT_THRESHOLD
          example: null
        externalAuthorizationMaxExpirationDays:
          type: integer
          description: external authorization maximum expiration days
          x-mappedTo: ESP_MAX_EXP_DAY
          example: null
          default: '90'
        disableEmailPoweredBy:
          type: boolean
          description: Is email powered by disabled
          x-mappedTo: EMAILPOWEREDBYDISABLED
          example: null
          x-mappedToType: string
        emailSenderDomainSettings:
          type: object
          description: domain settings for sending emails
          properties:
            GUID:
              type: string
              description: Email sender key
              x-mappedTo: GUID
              example: null
            enforceDNSValidation:
              type: boolean
              description: Enforce DNS validation
              x-mappedTo: EMAILSENDERVALIDATION
              example: null
              x-mappedToType: string
              default: 'false'
            emailSenderDomain:
              type: string
              description: Email sender domain
              x-mappedTo: EMAILSENDERDOMAIN
              example: null
        multisharedViewsVersion:
          type: string
          description: Multishared views version
          x-mappedTo: MVIEWS
          example: null
        logQueryData:
          type: string
          description: Log query data
          x-mappedTo: LOGQUERYDATA
          example: null
        locale:
          type: string
          description: Language
          x-mappedTo: LOCALE
          example: null
          default: en_US.UTF-8
        operatingCountry:
          type: string
          description: Operating country
          x-mappedTo: OPCOUNTRY
          example: null
          default: United States
        addressCountryDefault:
          type: string
          description: Default country for addresses
          x-mappedTo: ADDRESSCOUNTRYDEFAULT
          example: null
          default: United States
        maskVendorBankDetails:
          type: boolean
          description: Vendor bank details in audit trail
          x-mappedTo: VENDORBANKDETAILSMASKING
          example: null
          x-mappedToType: string
          default: 'false'
        singleEntityMigrationSettings:
          type: object
          description: single entity migration settings
          properties:
            entityId:
              type: string
              description: Entity ID
              x-mappedTo: MEENTITYID
              example: null
            entityName:
              type: string
              description: Entity name
              x-mappedTo: MEENTITYNAME
              example: null
        issueRecorder:
          type: boolean
          description: Issue recorder
          x-mappedTo: ISSUE_RECORDER
          example: null
          x-mappedToType: string
          default: 'false'
        accountingPractice:
          type: string
          description: Accounting practice for funds
          x-mappedTo: ACCOUNTINGPRACTICE
          example: null
          default: Net Asset Fund Accounting
        blankSpace:
          type: string
          description: null
          x-mappedTo: BLANKSPACE
          example: null
    preferences.multi-entity:
      $ref: '#/components/schemas/preferences.multi-entity.s1.schema'
    preferences.multi-entity.s1.schema:
      title: preferences.multi-entity
      x-mappedTo: mesetup
      type: object
      description: Multi Entity Console Setup object
      properties:
        enableMultipleBaseCurrency:
          type: boolean
          description: >-
            Set to `true` to enable each entity to use its own base currency.
            Multi-currency management must be enabled in the General Ledger.
          x-mappedTo: ENTITYBASECURRENCY
          x-mappedToType: string
          nullable: false
          default: false
        approvalCurrency:
          type: string
          description: >-
            Value approval currency for purchase transactions and expense
            reports. A value approval currency enables Sage Intacct to translate
            the transaction currency into a common currency, which is used to
            evaluate transaction approval thresholds and determine whether a
            transaction requires approval.
          x-mappedTo: APPROVALCURRENCY
        isForm1099:
          type: boolean
          description: >-
            Set to `true` to print 1099s with entity-level information, rather
            than top-level company information. Set to `false` to have the top
            level company to print a single set of 1099s across all entities and
            all vendors.
          x-mappedTo: FORM1099
          x-mappedToType: string
          nullable: false
          default: false
        restrictions:
          type: object
          properties:
            disableEntitySlideIn:
              type: boolean
              description: >-
                Set to `true` to restrict users to accessing the top level only.
                Only applies to multi-entity companies with a single base
                currency
              x-mappedTo: DISABLEENTITYSLIDEIN
              x-mappedToType: string
              nullable: false
              default: false
            restrictSubledgerTxnToEntity:
              type: boolean
              description: >-
                Set to `true` to restrict users to entering subledger
                transactions at the entity level only.
              x-mappedTo: ENTITYONLYTRANS
              x-mappedToType: string
              nullable: false
              default: false
            enableCustomerRestrictions:
              type: boolean
              description: >-
                Set to `true` to enable the option to restrict which locations
                and departments can work with each top-level customer.
              x-mappedTo: ENABLEMULTIOWNCUSTOMER
              x-mappedToType: string
              nullable: false
              default: false
            enableVendorRestrictions:
              type: boolean
              description: >-
                Set to `true` to enable the option to restrict which locations
                and departments can work with each top-level vendor.
              x-mappedTo: ENABLEMULTIOWN
              x-mappedToType: string
              nullable: false
              default: false
            enableCheckingAccountRestrictions:
              type: boolean
              description: >-
                Set to `true` to enable the option to restrict which locations
                and departments can work with each checking account.
              x-mappedTo: ENABLEMULTIOWNCHECKINGAC
              x-mappedToType: string
              nullable: false
              default: false
            enableSavingsAccountRestrictions:
              type: boolean
              description: >-
                Set to `true` to enable the option to restrict which locations
                and departments can work with each savings account.
              x-mappedTo: ENABLEMULTIOWNSAVINGAC
              x-mappedToType: string
              nullable: false
              default: false
        interEntityAccountMappingPlan:
          type: string
          description: >
            Type of inter-entity account mapping:


            * `basic`: Use only one set of inter-entity accounts per entity.

            * `advanced`: Define separate sets of inter-entity accounts for each
            entity relationship, or entity pair. 
          enum:
            - basic
            - advanced
          x-mappedToValues:
            - Basic
            - Advanced
          x-mappedTo: IEACCTMAPPLAN
          nullable: false
          default: basic
        limitAPCredit:
          type: boolean
          description: >
            Whether AP credits are limited to the owning entity.


            * `false` - Credits are applied to the owning entity first, and then
            applied from the oldest to the newest invoices.

            * `true` - Limit credits to just the owning entity. Credits are
            applied to the bills of the owning entity and no others; any
            remaining credit is reserved for more bills owned by that entity. 
          x-mappedTo: AP_LIMITCREDIT
          x-mappedToType: string
          nullable: false
          default: false
        limitARCredit:
          type: boolean
          description: >
            Whether AR credits are limited to the owning entity.


            * `false` - Credits are applied to the owning entity first, and then
            applied from the oldest to the newest invoices.

            * `true` - Limit credits to just the owning entity. Credits are
            applied to the bills of the owning entity and no others; any
            remaining credit is reserved for more bills owned by that entity. 
          x-mappedTo: AR_LIMITCREDIT
          x-mappedToType: string
          nullable: false
          default: false
        isModuleConfigured:
          type: boolean
          description: Is module configured?
          enum:
            - true
            - false
          x-mappedToValues:
            - T
            - F
          x-mappedTo: MODULE_CONFIGURED
          default: true
          readOnly: true
          x-mappedToType: string
        interEntityTxns:
          type: object
          description: >-
            Use these settings to control how Sage Intacct records transactions
            that involve two or more entities.
          properties:
            enableForJournalEntry:
              type: boolean
              description: >
                Set to `true` to have Intacct automatically create offsetting
                entries for journal entries that involve two or more entities.
                Set to `false` to require all balancing line items to be entered
                manually.


                Note: This option is incompatible with the __Enable journal
                entry auto-balancing__ option on the Configuration page for
                General Ledger, which automatically balances GL journal entries
                using the specified GL auto-balancing account.
              x-mappedTo: ENABLEAUTOIETJE
              x-mappedToType: string
              nullable: false
              default: false
            manuallyBalanceSubledgerTxns:
              type: boolean
              description: >
                Set to `true` to disable automatic tracking of inter-entity
                payables and receivables for  transactions. For example,
                although one entity can still pay a bill on behalf of another
                entity, Intacct will not track the inter-entity payables and
                receivables by creating offsetting journal entries in the
                affected entities.


                Setting this to `true` disables inter-entity transactions, and
                you do not need to specify a `creditsJournal`.
              x-mappedTo: DISABLEIETFINACCT
              x-mappedToType: string
              nullable: false
              default: false
            manuallyBalanceSubledgerCredits:
              type: boolean
              description: >
                Set to `true` to turn off the automatic recording of
                inter-entity payables and receivables for credits, adjustments,
                and advances. Intacct won't automatically track the inter-entity
                payables and receivables by creating offsetting journal entries
                in the affected entities. 


                You do not need to specify a `creditsJournal` when this field is
                enabled.
              x-mappedTo: DISABLEIETCRAPP
              x-mappedToType: string
              nullable: false
              default: false
            creditsJournal:
              type: object
              description: >-
                The journal to use when posting inter-entity credit bills or
                invoices to AP or AR, respectively. This journal is used when
                credits are applied to AR invoices or AP bills that generate an
                inter-entity transaction (IET) with no source payment record.
              x-object: gl-journal
              x-mappedTo: pe_journal
              properties:
                key:
                  type: string
                  description: System-assigned unique identifier for the credits journal.
                  x-mappedTo: PE_JOURNALKEY
                  readOnly: true
                id:
                  type: string
                  description: ID of the credits journal.
                  x-mappedTo: PE_JOURNAL
                name:
                  type: string
                  description: Name of the credits journal
                  x-mappedTo: PE_JOURNALNAME
                href:
                  type: string
                  description: Endpoint of the credits journal.
                  readOnly: true
        balanceJournalEntryBy:
          type: string
          description: >-
            Enforce journal entry balancing by location or entity. If you choose
            not to enable inter-entity transactions, you can enforce journal
            entry balancing by location instead of entity.
          enum:
            - location
            - entity
          x-mappedToValues:
            - Location
            - Entity
          x-mappedTo: BALANCE_ENTRY_LOC
          nullable: false
          default: entity
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    preferences.user:
      $ref: '#/components/schemas/preferences.user.s1.schema'
    preferences.user.s1.schema:
      title: preferences.user
      x-mappedTo: userpref
      type: object
      description: Service to get and update user preferences.
      properties:
        key:
          description: Key to identify user.
          type: string
          readOnly: true
          x-mappedTo: RECORDNO
          example: '1'
        contact:
          description: Contact for the user.
          type: object
          title: contact
          properties:
            href:
              type: string
              readOnly: true
              description: URL for the contact.
            lastName:
              type: string
              readOnly: true
              description: Last name
              x-mappedTo: USERINFO.CONTACT.LASTNAME
              example: Kincaid
            firstName:
              type: string
              readOnly: true
              description: First name
              x-mappedTo: USERINFO.CONTACT.FIRSTNAME
              example: Reuben
            email1:
              type: string
              readOnly: true
              description: Primary email
              x-mappedTo: USERINFO.CONTACT.EMAIL1
              example: reuben@mycompany.com
            phone1:
              type: string
              readOnly: true
              description: Primary phone
              x-mappedTo: USERINFO.CONTACT.PHONE1
              example: 4151231234
            signature:
              type: string
              description: Signature to be added to emails sent by this user.
              x-mappedTo: USERINFO.EMAILSIGNATURE
              example: Thank you, Reuben Kincaid
            mailingAddress:
              type: object
              description: The mailing address of the contact.
              readOnly: true
              properties:
                addressLine1:
                  type: string
                  description: The first address line for shipping, billing, etc.
                  readOnly: true
                  x-mappedTo: USERINFO.CONTACT.MAILADDRESS.ADDRESS1
                  example: 300 Park Avenue
                addressLine2:
                  type: string
                  description: The second address line for shipping, billing, etc.
                  readOnly: true
                  x-mappedTo: USERINFO.CONTACT.MAILADDRESS.ADDRESS2
                  example: Suite 1400
                city:
                  type: string
                  description: City
                  readOnly: true
                  x-mappedTo: USERINFO.CONTACT.MAILADDRESS.CITY
                  example: San Jose
                state:
                  type: string
                  description: State
                  readOnly: true
                  x-mappedTo: USERINFO.CONTACT.MAILADDRESS.STATE
                  example: California
                postCode:
                  type: string
                  description: Zip or Postal Code
                  readOnly: true
                  x-mappedTo: USERINFO.CONTACT.MAILADDRESS.ZIP
                  example: 95110
                country:
                  type: string
                  description: Country
                  readOnly: true
                  x-mappedTo: USERINFO.CONTACT.MAILADDRESS.COUNTRY
                  example: United States of America
        securityPreferences:
          title: securityPreferences
          type: object
          properties:
            sessionTimeoutInSeconds:
              type: integer
              description: >-
                The amount of time that the user can be in Intacct while
                actively using it. The maximum amount of time is limited by the
                maximum number of hours set for the entire organization, which
                is 12 hours or less.
              x-mappedTo: SESSIONTIMEOUT
              example: 3600
            inactivityTimeoutInSeconds:
              type: integer
              description: >-
                The amount of time a user session can remain inactive (when it
                is not being used) before the user is signed out. The maximum
                amount of time is limited by the maximum number of inactivity
                hours set for the entire organization, which is 6 hours or less.
              x-mappedTo: LOGINTIMEOUT
              example: 3600
        emailNotifications:
          type: object
          title: emailNotifications
          properties:
            paymentRequestsForApproval:
              type: object
              title: paymentRequestsForApproval
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Enable payment request approval notifications.


                    * `true` - The user is notified when there are payment
                    requests for approval.

                    * `false` - The user is not notified about payment request
                    approvals.
                  x-mappedTo: ENABLEEMAIL_ACTIVATED
                  default: false
                  example: false
                frequency:
                  type: string
                  description: >-
                    Individual or grouped payment request notifications:


                    * `individual` - One email for each payment request for
                    approval. 

                    * `consolidated` - Group related request notifications into
                    one email.
                  enum:
                    - individual
                    - consolidated
                  x-mappedToValues:
                    - Individual
                    - Consolidated
                  x-mappedTo: ENABLEEMAIL
                  example: individual
                minimumAmount:
                  type: integer
                  description: >-
                    Minimum amount for payment request notifications, so that
                    the user isn't notified for low-value requests.
                  x-mappedTo: AMOUNTFOREMAIL
                  example: 1000
            approvedPayments:
              type: object
              title: approvedPayments
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Enable approved payment notifications.


                    * `true` - The user is notified when payments are approved.

                    * `false` - The user is not notified about approved
                    payments.
                  x-mappedTo: NOTIFYSUBMITTER_ACTIVATED
                  default: false
                  example: false
                frequency:
                  type: string
                  description: >-
                    Individual or grouped notifications:


                    * `individual` - One email each time a payment is approved. 

                    * `consolidated` - Group related payment notifications into
                    one email.
                  enum:
                    - individual
                    - consolidated
                  x-mappedToValues:
                    - Individual
                    - Consolidated
                  x-mappedTo: NOTIFYSUBMITTER
                  default: individual
                  example: individual
            purchasingRequestsForApproval:
              type: object
              title: purchasingRequestsForApproval
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Enable purchasing request approval notifications.


                    * `true` - The user is notified when there are purchasing
                    requests for approval.

                    * `false` - The user is not notified about purchasing
                    request approvals.
                  x-mappedTo: PURENABLEEMAIL
                  default: false
                  example: false
                minimumAmount:
                  type: integer
                  description: Minimum amount for purchase request notifications.
                  x-mappedTo: PURAMOUNTFOREMAIL
                  example: 1000
            journalEntryRequestsForApproval:
              type: object
              title: journalEntryRequestsForApproval
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Enable journal entry approval notifications.


                    * `true` - The user is notified when there are requests to
                    approve journal entries.

                    * `false` - The user is not notified about journal entry
                    approval requests.
                  x-mappedTo: GLBATCHENABLEEMAIL
                  default: true
                  example: true
            billRequestsForApproval:
              type: object
              title: billRequestsForApproval
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Send the user an email when a bill is created in Accounts
                    Payable that requires their approval. Enable bill approval
                    notifications.

                    * `true` - The user is notified when bills are created in
                    Accounts Payable that requires their approval. * `false` -
                    The user is not notified about payment request approvals.
                  x-mappedTo: BILLENABLEEMAIL
                  default: false
                  example: false
                minimumAmount:
                  type: integer
                  description: Minimum amount for bill request notifications.
                  x-mappedTo: BILLAMOUNTFOREMAIL
                  example: 100
            offlineReports:
              type: object
              title: offlineReports
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Send the user an email when a stored report has been
                    processed and is ready.
                  x-mappedTo: OFFLINEEMAIL
                  default: false
                  example: false
            checklists:
              type: object
              title: checklists
              properties:
                enableNotification:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Send the user an email:


                    * When an assignment is assigned to you.

                    * As a reminder for pending assignments.

                    * If you are the checklist owner and the status of an
                    assignment has changed.
                  x-mappedTo: CHECKLISTNOTIF
                  default: true
                  example: true
            recurringTxnFailures:
              type: object
              title: recurringTxnFailures
              properties:
                enableNotifications:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Send the user an email when something goes wrong with a
                    regularly scheduled transaction. This includes all recurring
                    transactions.
                  x-mappedTo: RECURTXNFAILEMAIL
                  default: false
                  example: false
        onScreenAlerts:
          type: object
          title: onScreenAlerts
          properties:
            enableWarnOnUnsavedChanges:
              type: boolean
              x-mappedToType: string
              description: >-
                Display a message when the user makes changes and then attempts
                to navigate away from the window without saving the changes.
              x-mappedTo: WARNONCHANGES
              default: true
              example: true
            enableWarnOnDelete:
              type: boolean
              x-mappedToType: string
              description: >-
                Display a precautionary alert when the user attempt to delete a
                record.
              x-mappedTo: WARNONDELETE
              default: true
              example: true
            enableFormValidationMessagesOnSeparatePage:
              type: boolean
              x-mappedToType: string
              description: >-
                Display alerts in a separate page, rather than at the top of the
                current page.
              x-mappedTo: DISABLEFORMVALIDATION
              default: false
              example: false
        personalizeAppearance:
          type: object
          title: personalizeAppearance
          properties:
            startPage:
              type: string
              description: >-
                The application to be displayed when the user signs in to the
                system. Valid values are any of these Intacct applications or
                the ID of an add-on or custom page.


                * `home` - Use the default dashboard defined by the
                administrator.

                * `dash` - Display a dashboard. When this option is used, you
                must also provide a `startDashboard` value.

                * `reportcenter` - Display the Report 

                * `ap` - Accounts Payable

                * `ar` - Accounts Receivable

                * `budg` - Budgets

                * `cm` - Cash Management

                * `cn` - Contracts

                * `co` - Company

                * `cs` - Consolidations

                * `ee` - Time and Expenses

                * `gl` - General Ledger

                * `inv` - Inventory Control

                * `pa` - Projects

                * `po` - Purchasing

                * `so` - Order Entry
              x-mappedTo: STARTPAGE
              example: dash
            startDashboard:
              type: string
              description: >-
                The ID of the dashboard to be displayed when `startPage` is set
                to `Dashboard`.
              x-mappedTo: STARTDASHBOARD
              example: '8'
            entityColorLevel:
              type: string
              description: >-
                Color scheme: 


                * `company` - Use the company colors defined by the
                administrator.

                * `user` - The user can select colors to override those set by
                the administrator.
              enum:
                - company
                - user
              x-mappedToValues:
                - company
                - user
              x-mappedTo: ENTITY_COLOR_LEVEL
              example: company
        personalizeMenu:
          type: object
          title: personalizeMenu
          properties:
            menuNavigation:
              type: string
              description: Whether the user must click or hover to expand navigation menus.
              enum:
                - click
                - hover
              x-mappedToValues:
                - click
                - hover
              x-mappedTo: MENU_NAVIGATION
              example: click
            menuOrder:
              type: string
              description: >-
                Allow user to change menu order:


                * `company` - Use the menu order defined by the administrator.

                * `user` - The user can select a menu order to override the
                order set by the administrator.
              enum:
                - company
                - user
              x-mappedToValues:
                - company
                - user
              x-mappedTo: MENUORDER
              example: company
        pagePreferences:
          type: object
          title: pagePreferences
          properties:
            recordsPerPage:
              type: integer
              description: >-
                The number of lines to display in pages that provide lists of
                records.
              x-mappedTo: LISTCOUNT
              default: 20
              example: 20
            itemsPerPopUpPage:
              type: integer
              description: >-
                The number of lines to display in pop-up selection pages when
                there are more items than the drop-down list displays.
              x-mappedTo: PICKCOUNT
              default: 15
              example: 15
            itemsPerDropDownList:
              type: string
              description: >-
                The number of list items to display in drop-down menu lists.
                More items can increase page load times.
              enum:
                - '250'
                - '500'
                - '1000'
                - '2500'
                - '5000'
              x-mappedToValues:
                - '250'
                - '500'
                - '1000'
                - '2500'
                - '5000'
              x-mappedTo: SHOWPICKCOUNT
              default: '1000'
              example: '5000'
            recordsPerTransactionPage:
              type: string
              description: >-
                The number of transaction rows visible per page. The user must
                click to view succeeding set of rows.
              enum:
                - '10'
                - '20'
                - '30'
                - '40'
                - '50'
                - '60'
                - '70'
                - '80'
                - '90'
                - '100'
                - max
              x-mappedToValues:
                - '10'
                - '20'
                - '30'
                - '40'
                - '50'
                - '60'
                - '70'
                - '80'
                - '90'
                - '100'
                - Max
              x-mappedTo: GRID_PAGE_SIZE
              default: '30'
              example: '30'
            enableTypeAheadSuggestions:
              type: boolean
              x-mappedToType: string
              description: Display type-ahead suggestions as the user types.
              x-mappedTo: TYPEAHEAD
              default: false
              example: false
            newTransactionRowCount:
              type: integer
              description: >-
                The number of rows displayed when adding a new transaction on
                multi-line edit pages.
              x-mappedTo: ROWCOUNT
              default: 2
              example: 3
        personalizePlatform:
          type: object
          title: personalizePlatform
          properties:
            actionUILayout:
              type: object
              title: actionUILayout
              properties:
                useForCustomPages:
                  type: boolean
                  x-mappedToType: string
                  description: >-
                    Update pages that have been created or customized using
                    Platform or Customization Services to Action UI.
                  x-mappedTo: PT_LAYOUTTYPE
                  default: false
                  example: false
                useForDeveloperPages:
                  type: boolean
                  x-mappedToType: string
                  description: Use Platform and Customization Services in Action UI.
                  x-mappedTo: PT_OWNEDLAYOUTTYPE
                  default: false
                  example: false
            scriptComponent:
              type: object
              title: scriptComponent
              properties:
                theme:
                  type: string
                  description: >-
                    Script component theme. This setting enables all script
                    component text editing areas to utilize the CodeMirror(r)
                    library for an enhanced script editing experience when
                    adding a custom script to a page.
                  enum:
                    - lightMode
                    - darkMode
                  x-mappedToValues:
                    - Light mode
                    - Dark mode
                  x-mappedTo: SCRIPT_COMPONENT_THEME
                  example: lightMode
                debug:
                  type: string
                  description: >-
                    Enable the autogeneration of debug file names for page
                    scripts.

                    * `on` - Debug file names are automatically generated for
                    page scripts. * `off` - Debug file names are not generated.
                  enum:
                    - 'off'
                    - 'on'
                  x-mappedToValues:
                    - 'Off'
                    - 'On'
                  x-mappedTo: SCRIPT_COMPONENT_DEBUG
                  example: 'off'
        generalPreferences:
          type: object
          title: generalPreferences
          properties:
            language:
              type: string
              description: Language and locale for the user.
              enum:
                - none
                - en_AU.UTF-8
                - en_GB.UTF-8
                - en_ZA.UTF-8
                - en_US.UTF-8
              x-mappedTo: LOCALE
              default: ''
              example: en_US.UTF-8
            timeZone:
              type: string
              description: Time zone in which the company or user resides.
              enum:
                - GMT (Greenwich Mean Time) Dublin, Edinburgh, London
                - GMT+00:00 Western Europe Time
                - GMT+01:00 Western Europe Summer Time
                - GMT+01:00 British Summer Time
                - GMT+01:00 Irish Summer Time
                - GMT+01:00 Central Europe Time
                - GMT+01:00 Berlin, Stockholm, Rome, Bern, Brussels
                - GMT+01:00 Lisbon, Warsaw
                - GMT+01:00 Paris, Madrid
                - GMT+01:00 Prague
                - GMT+02:00 Central Europe Summer Time
                - GMT+02:00 Eastern Europe Time
                - GMT+02:00 Athens, Helsinki, Istanbul
                - GMT+02:00 Cairo
                - GMT+02:00 Harare, Pretoria
                - GMT+02:00 Israel
                - GMT+03:00 Eastern Europe Summer Time
                - GMT+03:00 Baghdad, Kuwait, Nairobi, Riyadh
                - GMT+03:00 Moscow, St. Petersburg, Volgograd
                - GMT+03:30 Tehran
                - GMT+04:00 Moscow Summer Time
                - GMT+04:00 Abu Dhabi, Muscat, Tbilisi, Kazan
                - GMT+04:30 Kabul
                - GMT+05:00 Islamabad, Karachi, Sverdlovsk, Tashkent
                - GMT+05:30 Bombay, Calcutta, Madras, New Delhi
                - GMT+06:00 Almaty, Dhaka
                - GMT+07:00 Bangkok, Jakarta, Hanoi
                - GMT+08:00 Beijing, Chongqing, Urumqi
                - GMT+08:00 Hong Kong SAR, Perth, Singapore, Taipei
                - GMT+08:00 (Australian) Western Standard Time
                - GMT+09:00 Tokyo, Osaka, Sapporo, Seoul, Yakutsk
                - GMT+09:30 (Australian) Central Standard Time
                - GMT+10:30 (Australian) Central Daylight Time
                - GMT+09:30 Adelaide
                - GMT+09:30 Darwin
                - GMT+10:00 Brisbane, Melbourne, Sydney
                - GMT+10:00 Guam, Port Moresby
                - GMT+10:00 Vladivostok
                - GMT+10:00 (Australian) Eastern Standard Time
                - GMT+11:00  (Australian) Eastern Daylight Time
                - GMT+12:00 Fiji Islands, Marshall Islands
                - GMT+12:00 Kamchatka
                - GMT+12:00 Magadan, Solomon Islands, New Caledonia
                - GMT+12:00 Wellington, Auckland
                - GMT-01:00 Azores, Cape Verde Island
                - GMT-03:00 Brasilia
                - GMT-03:00 Buenos Aires, Georgetown
                - GMT-03:30 Newfoundland Standard Time
                - GMT-02:30 Newfoundland Daylight Time
                - GMT-04:00 Atlantic Standard Time
                - GMT-03:00 Atlantic Daylight Time
                - GMT-04:00 Caracas, La Paz
                - GMT-05:00 Bogota, Lima
                - GMT-05:00 Eastern Standard Time
                - GMT-04:00 Eastern Daylight Saving Time
                - GMT-05:00 Indiana (East)
                - GMT-06:00 Central Standard Time
                - GMT-05:00 Central Daylight Saving Time
                - GMT-06:00 Mexico City, Tegucigalpa
                - GMT-06:00 Saskatchewan
                - GMT-07:00 Arizona
                - GMT-07:00 Mountain Standard Time
                - GMT-06:00 Mountain Daylight Saving Time
                - GMT-08:00 Pacific Standard Time
                - GMT-07:00 Pacific Daylight Saving Time
                - GMT-09:00 Alaska Standard Time
                - GMT-08:00 Alaska Standard Daylight Saving Time
                - GMT-10:00 Hawaii
                - GMT-11:00 Midway Island, Samoa
                - GMT-12:00 Eniwetok, Kwajalein
              x-mappedToValues:
                - GMT (Greenwich Mean Time) Dublin, Edinburgh, London
                - GMT+00:00 Western Europe Time
                - GMT+01:00 Western Europe Summer Time
                - GMT+01:00 British Summer Time
                - GMT+01:00 Irish Summer Time
                - GMT+01:00 Central Europe Time
                - GMT+01:00 Berlin, Stockholm, Rome, Bern, Brussels
                - GMT+01:00 Lisbon, Warsaw
                - GMT+01:00 Paris, Madrid
                - GMT+01:00 Prague
                - GMT+02:00 Central Europe Summer Time
                - GMT+02:00 Eastern Europe Time
                - GMT+02:00 Athens, Helsinki, Istanbul
                - GMT+02:00 Cairo
                - GMT+02:00 Harare, Pretoria
                - GMT+02:00 Israel
                - GMT+03:00 Eastern Europe Summer Time
                - GMT+03:00 Baghdad, Kuwait, Nairobi, Riyadh
                - GMT+03:00 Moscow, St. Petersburg, Volgograd
                - GMT+03:30 Tehran
                - GMT+04:00 Moscow Summer Time
                - GMT+04:00 Abu Dhabi, Muscat, Tbilisi, Kazan
                - GMT+04:30 Kabul
                - GMT+05:00 Islamabad, Karachi, Sverdlovsk, Tashkent
                - GMT+05:30 Bombay, Calcutta, Madras, New Delhi
                - GMT+06:00 Almaty, Dhaka
                - GMT+07:00 Bangkok, Jakarta, Hanoi
                - GMT+08:00 Beijing, Chongqing, Urumqi
                - GMT+08:00 Hong Kong SAR, Perth, Singapore, Taipei
                - GMT+08:00 (Australian) Western Standard Time
                - GMT+09:00 Tokyo, Osaka, Sapporo, Seoul, Yakutsk
                - GMT+09:30 (Australian) Central Standard Time
                - GMT+10:30 (Australian) Central Daylight Time
                - GMT+09:30 Adelaide
                - GMT+09:30 Darwin
                - GMT+10:00 Brisbane, Melbourne, Sydney
                - GMT+10:00 Guam, Port Moresby
                - GMT+10:00 Vladivostok
                - GMT+10:00 (Australian) Eastern Standard Time
                - GMT+11:00  (Australian) Eastern Daylight Time
                - GMT+12:00 Fiji Islands, Marshall Islands
                - GMT+12:00 Kamchatka
                - GMT+12:00 Magadan, Solomon Islands, New Caledonia
                - GMT+12:00 Wellington, Auckland
                - GMT-01:00 Azores, Cape Verde Island
                - GMT-03:00 Brasilia
                - GMT-03:00 Buenos Aires, Georgetown
                - GMT-03:30 Newfoundland Standard Time
                - GMT-02:30 Newfoundland Daylight Time
                - GMT-04:00 Atlantic Standard Time
                - GMT-03:00 Atlantic Daylight Time
                - GMT-04:00 Caracas, La Paz
                - GMT-05:00 Bogota, Lima
                - GMT-05:00 Eastern Standard Time
                - GMT-04:00 Eastern Daylight Saving Time
                - GMT-05:00 Indiana (East)
                - GMT-06:00 Central Standard Time
                - GMT-05:00 Central Daylight Saving Time
                - GMT-06:00 Mexico City, Tegucigalpa
                - GMT-06:00 Saskatchewan
                - GMT-07:00 Arizona
                - GMT-07:00 Mountain Standard Time
                - GMT-06:00 Mountain Daylight Saving Time
                - GMT-08:00 Pacific Standard Time
                - GMT-07:00 Pacific Daylight Saving Time
                - GMT-09:00 Alaska Standard Time
                - GMT-08:00 Alaska Standard Daylight Saving Time
                - GMT-10:00 Hawaii
                - GMT-11:00 Midway Island, Samoa
                - GMT-12:00 Eniwetok, Kwajalein
              x-mappedTo: TIMEZONE
              default: ''
              example: GMT+02:00 Eastern Europe Time
            timeFormat:
              type: string
              description: Time format, 12 or 24 hours.
              enum:
                - HH24:MI:SS
                - HH12:MI:SSAM
              x-mappedToValues:
                - HH24:MI:SS
                - HH12:MI:SS AM/PM
              x-mappedTo: TIMEFORMAT
              default: ''
              example: HH12:MI:SSAM
            dateFormat:
              type: string
              description: >-
                Date format used throughout Intacct to _display_ dates. Dates
                can be entered in other formats.
              enum:
                - MM/DD/YYYY
                - MM/DD/YY
                - MM.DD.YY
                - MM.DD.YYYY
                - MM-DD-YY
                - MM-DD-YYYY
                - MM DD YY
                - MM DD YYYY
                - DD/MM/YY
                - DD/MM/YYYY
                - DD.MM.YY
                - DD.MM.YYYY
                - DD-MM-YY
                - DD-MM-YYYY
                - DD MM YY
                - DD MM YYYY
                - YY/MM/DD
                - YYYY/MM/DD
                - YY.MM.DD
                - YYYY.MM.DD
                - YY-MM-DD
                - YYYY-MM-DD
                - YY MM DD
                - YYYY MM DD
              x-mappedToValues:
                - MM/DD/YYYY
                - MM/DD/YY
                - MM.DD.YY
                - MM.DD.YYYY
                - MM-DD-YY
                - MM-DD-YYYY
                - MM DD YY
                - MM DD YYYY
                - DD/MM/YY
                - DD/MM/YYYY
                - DD.MM.YY
                - DD.MM.YYYY
                - DD-MM-YY
                - DD-MM-YYYY
                - DD MM YY
                - DD MM YYYY
                - YY/MM/DD
                - YYYY/MM/DD
                - YY.MM.DD
                - YYYY.MM.DD
                - YY-MM-DD
                - YYYY-MM-DD
                - YY MM DD
                - YYYY MM DD
              x-mappedTo: DATEFORMAT
              example: MM/DD/YYYY
            decimalsSeparator:
              type: string
              description: Decimals separator.
              enum:
                - ','
                - .
                - _
                - ' '
                - companyDefault
              x-mappedToValues:
                - ','
                - .
                - _
                - _SPACE_
                - _CNY_
              x-mappedTo: CURRENCYDECIMAL_SEP
              default: .
              example: .
            thousandsSeparator:
              type: string
              description: Thousands separator.
              enum:
                - ','
                - .
                - _
                - ' '
                - companyDefault
              x-mappedToValues:
                - ','
                - .
                - _
                - _SPACE_
                - _CNY_
              x-mappedTo: CURRENCYTHOUSAND_SEP
              default: ','
              example: ','
            autoInsertDecimalPoint:
              type: boolean
              x-mappedToType: string
              description: Automatically insert a decimal point in numbers.
              x-mappedTo: AUTOINSERTDECIMAL
              default: false
              example: false
            defaultAttachmentFolder:
              type: string
              description: Default attachment folder
              x-mappedTo: USERSUPDOCGRP
              example: Saved documents
        approvalDelegation:
          type: object
          title: approvalDelegation
          description: >-
            Delegate approval responsibilities when the user is unavailable to
            approve transactions. This does not apply to users who are part of a
            user group that is designated as the approver, because all other
            members of the group receive notifications and can approve
            submissions.
          properties:
            enableForPurchasing:
              type: boolean
              x-mappedToType: string
              description: Send approvals to `purchasingDelegate`.
              x-mappedTo: DELEGATE_APPROVAL
              default: false
              example: false
            purchasingDelegate:
              type: string
              description: User ID for delegated purchasing approvals.
              x-mappedTo: DELEGATE
              example: intacct
            enableForJournalEntryTransactions:
              type: boolean
              x-mappedToType: string
              description: Send approvals to `journalEntryDelegate`.
              x-mappedTo: GLDELEGATEAPPROVAL
              default: false
              example: false
            journalEntryDelegate:
              type: string
              description: User ID for delegated journal entry transaction approvals.
              x-mappedTo: GLDELEGATE
              example: intacct
            delegateApprovals:
              type: string
              description: Delegate approvals
              x-mappedTo: DELEGATE_APPROVALS
              example: Delegate Purchasing approvals
            delegateName:
              type: string
              description: >-
                User ID of the approver who assumes responsibility for approving
                transactions while the user is out-of-office.
              x-mappedTo: DELEGATE_NAME
              example: intacct
            enableDelegateForUnknown:
              type: boolean
              x-mappedToType: string
              description: Send approvals to `delegateName` when the user is out-of-office.
              x-mappedTo: ENABLE_DELEGATE
              default: false
              example: false
        moduleName:
          type: string
          description: Module name in menu grid
          x-mappedTo: MODULENAME
          example: Company
        moduleId:
          type: string
          description: Module id for module name in menu grid
          x-mappedTo: MODULEID
          example: 1.CO
        inheritDateFromSourceTxn:
          type: object
          title: inheritDateFromSourceTxn
          properties:
            inheritForOrderEntryTxns:
              type: boolean
              x-mappedToType: string
              description: >-
                Use the date from source transaction for Order Entry
                transactions.
              x-mappedTo: SODATE_CONVERSION_OPTION
              default: false
              example: false
            inheritForPurchaseOrderTxns:
              type: boolean
              x-mappedToType: string
              description: >-
                Use the date from source transaction for Purchasing
                transactions.
              x-mappedTo: PODATE_CONVERSION_OPTION
              default: false
              example: false
    reporting-period:
      $ref: '#/components/schemas/reporting-period.s1.schema'
    reporting-periodRequiredProperties:
      type: object
      required:
        - id
    reporting-period.s1.schema:
      title: reporting-period
      x-mappedTo: reportingperiod
      type: object
      description: Reporting period definition
      properties:
        key:
          type: string
          description: System-assigned unique key for the reporting period.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '421'
        id:
          type: string
          description: This value is the same as the `key` value for this object.
          x-mappedTo: RECORDNO
          readOnly: true
          example: '421'
        name:
          type: string
          description: Name for the reporting period.
          x-mappedTo: NAME
          example: Month ended January 2023
        header1:
          type: string
          description: The first line to be shown on the report, such as "Quarter Ended".
          x-mappedTo: HEADER1
          example: Quarter Ended
        header2:
          type: string
          description: The second line to be shown on the report, such as "April 2023".
          x-mappedTo: HEADER2
          example: April 2023
        startDate:
          type: string
          format: date
          description: The starting date of the reporting period.
          x-mappedTo: START_DATE
          example: '2023-04-01'
        endDate:
          type: string
          format: date
          description: The ending date of the reporting period.
          x-mappedTo: END_DATE
          example: '2023-06-30'
        isBudgetable:
          type: boolean
          description: >-
            Set to `true` to make this reporting period available for inclusion
            in budgets.
          x-mappedTo: BUDGETING
          x-mappedToType: string
          example: true
        href:
          type: string
          description: Endpoint for the reporting period.
          readOnly: true
          example: /objects/reporting-period/1
        status:
          $ref: '#/components/schemas/status.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    role-assignment:
      $ref: '#/components/schemas/role-assignment.s1.schema'
    role-assignment.s1.schema:
      title: role-assignment
      x-mappedTo: roleassignment
      type: object
      description: List of users and groups assigned to roles.
      properties:
        key:
          type: string
          description: System-assigned key for the role-assignment.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '23'
        id:
          type: string
          description: Role assignments ID.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '23'
        href:
          type: string
          description: URL for the role-assignment.
          readOnly: true
          example: /objects/role-assignment/23
        user:
          type: object
          x-mappedTo: userinfo
          x-object: user
          properties:
            key:
              type: string
              description: User key.
              x-mappedTo: USER_GROUP_KEY
              example: '10'
            id:
              type: string
              description: User id. Same as key.
              x-mappedTo: USER_GROUP_KEY
              example: '10'
            href:
              type: string
              description: URL for the user.
              readOnly: true
              example: /objects/user/10
        userGroup:
          type: object
          x-mappedTo: usergroup
          x-object: user-group
          properties:
            key:
              type: string
              description: User group key.
              x-mappedTo: USER_GROUP_KEY
              example: '21'
            id:
              type: string
              description: User group id. Same as key.
              x-mappedTo: USER_GROUP_KEY
              example: '21'
            href:
              type: string
              description: URL for the user group.
              readOnly: true
              example: /objects/user-group/21
        relationshipType:
          type: string
          description: Relationship type for the assigned role.
          x-mappedTo: TYPE
          example: user
          enum:
            - user
            - group
          x-mappedToValues:
            - U
            - G
        role:
          type: object
          x-mappedTo: roles
          x-object: role
          properties:
            key:
              type: string
              description: Role key.
              x-mappedTo: ROLEKEY
              example: '23'
            roleName:
              type: string
              description: Role name.
              x-mappedTo: ROLENAME
              example: Employee - Partial Access
            href:
              type: string
              description: Endpoint for the roles.
              readOnly: true
              example: /objects/roles/23
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    role-policy-assignment:
      $ref: '#/components/schemas/role-policy-assignment.s1.schema'
    role-policy-assignment.s1.schema:
      title: role-policy-assignment
      x-mappedTo: rolepolicyassignment
      type: object
      description: List of permissions assigned to the roles for standard objects.
      properties:
        key:
          type: string
          description: System-assigned key for the role-policy-assignment.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '23'
        id:
          type: string
          description: Role policy assignment ID.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '23'
        href:
          type: string
          description: URL for the role-policy-assignment.
          readOnly: true
          example: /objects/role-policy-assignment/23
        role:
          type: object
          x-mappedTo: roles
          x-object: role
          properties:
            key:
              type: string
              description: Role key.
              x-mappedTo: ROLEKEY
              example: '10'
            id:
              type: string
              description: Role id.
              x-mappedTo: ROLEID
              example: '10'
            href:
              type: string
              description: URL for the roles.
              readOnly: true
              example: /objects/roles/10
        module:
          type: string
          description: Module.
          x-mappedTo: MODULE
          example: ap
        accessRights:
          type: string
          description: Policy value.
          x-mappedTo: RIGHTS
          example: readonly|edit
        policy:
          type: object
          properties:
            key:
              type: string
              description: Policy key.
              x-mappedTo: POLICYKEY
              example: '24'
            id:
              type: string
              description: Policy id.
              x-mappedTo: POLICYID
              example: '24'
            name:
              type: string
              description: Policy name.
              x-mappedTo: POLICYNAME
              example: Account Groups
            href:
              type: string
              description: URL for the policy.
              readOnly: true
              example: /objects/policy/24
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    role:
      $ref: '#/components/schemas/role.s1.schema'
    roleRequiredProperties:
      type: object
      required:
        - id
    role.s1.schema:
      title: role
      x-mappedTo: roles
      type: object
      description: List of roles.
      properties:
        key:
          type: string
          description: Roles Key
          readOnly: true
          x-mappedTo: RECORDNO
          example: null
        id:
          type: string
          description: Roles ID
          x-mappedTo: NAME
          x-mutable: false
          example: null
        href:
          type: string
          readOnly: true
        description:
          type: string
          description: Description
          x-mappedTo: DESCRIPTION
          example: null
        roleType:
          type: string
          description: Role for user on
          x-mappedTo: TYPE
          example: null
          enum:
            - enterprise
            - eConsole
            - multiEntityDistributed
            - multiEntityShared
          x-mappedToValues:
            - Enterprise
            - E-Console
            - Multi Entity Distributed
            - Multi Entity Shared
        applyTo:
          type: string
          description: Use for
          x-mappedTo: APPLYTO
          example: null
          enum:
            - loginAndSlideIn
            - loginOnly
            - slideInOnly
          x-mappedToValues:
            - Login and Slide-In
            - Login Only
            - Slide-In Only
        subscriptions:
          type: object
          properties:
            module:
              type: string
              x-mappedTo: MODULE
              example: null
            key:
              type: string
              x-mappedTo: POLICYKEY
              example: null
            name:
              type: string
              x-mappedTo: POLICYVALUE
              example: null
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    sandbox:
      $ref: '#/components/schemas/sandbox.s1.schema'
    sandboxRequiredProperties:
      type: object
      required:
        - id
    sandbox.s1.schema:
      title: sandbox
      x-mappedTo: sandbox
      type: object
      description: List of the Sandboxes
      properties:
        key:
          type: string
          description: Sandbox Key
          readOnly: true
          x-mappedTo: RECORDNO
          example: '10'
        id:
          type: string
          description: Sandbox ID
          readOnly: true
          x-mappedTo: RECORDNO
          example: '10'
        name:
          type: string
          description: Sandbox Name
          x-mappedTo: NAME
          example: Company_title-sandbox
        description:
          type: string
          description: Sandbox Description
          x-mappedTo: DESCRIPTION
          example: Sandbox description
        state:
          type: string
          description: Sandbox State
          x-mappedTo: STATE
          example: Pending
          enum:
            - ready
            - inProgress
            - pending
            - failed
          x-mappedToValues:
            - Ready
            - In Progress
            - Pending
            - Failed
          default: pending
        expirationDate:
          type: string
          description: Expiring
          format: date
          x-mappedTo: WHENEXPIRES
          example: '2014-01-08'
        lastRefreshedDate:
          type: string
          description: Last refresh
          format: date
          x-mappedTo: WHENREFRESHED
          example: '2014-01-08'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    sender-id-whitelist:
      $ref: '#/components/schemas/sender-id-whitelist.s1.schema'
    sender-id-whitelistRequiredProperties:
      type: object
      required:
        - id
    sender-id-whitelist.s1.schema:
      title: sender-id-whitelist
      x-mappedTo: senderidwhitelist
      type: object
      description: null
      properties:
        key:
          type: string
          description: System-assigned key for the sender-id-whitelist.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '23'
        id:
          type: string
          description: Sender ID information ID.
          x-mappedTo: SENDERID
          example: null
        href:
          type: string
          description: URL for the sender-id-whitelist.
          readOnly: true
          example: /objects/sender-id-whitelist/23
        description:
          type: string
          description: Description.
          x-mappedTo: DESCRIPTION
          example: null
        status:
          $ref: '#/components/schemas/status.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    tax-solution:
      $ref: '#/components/schemas/tax-solution.s1.schema'
    tax-solutionRequiredProperties:
      type: object
      required:
        - id
        - status
        - taxSolutionType
        - taxCalculationMethod
        - taxSubmissionStartDate
      properties:
        purchaseGLAccount:
          required:
            - id
        salesGLAccount:
          required:
            - id
    tax-solution.s1.schema:
      title: tax-solution
      type: object
      x-mappedTo: taxsolution
      description: Definition for how taxes should be captured and reported.
      properties:
        key:
          type: string
          description: System-assigned unique key for the tax solution.
          x-mappedTo: RECORDNO
          readOnly: true
          example: '200'
        id:
          type: string
          description: Name for the tax solution.
          x-mappedTo: SOLUTIONID
          x-mutable: false
        href:
          type: string
          description: Endpoint for the tax solution.
          readOnly: true
          example: /objects/tax-solution/200
        description:
          type: string
          description: Description of the tax solution.
          x-mappedTo: DESCRIPTION
          example: Oregon sales tax
        status:
          type: string
          description: Tax solution status.
          x-mappedTo: STATUS
          enum:
            - active
            - inactive
            - notConfigured
          x-mappedToValues:
            - Active
            - Inactive
            - Not configured
          default: active
          example: active
        taxSolutionType:
          type: string
          description: Tax solution type
          x-mappedTo: TYPE
          example: standard
          enum:
            - standard
            - custom
          x-mappedToValues:
            - Standard
            - Custom
        taxCalculationMethod:
          type: string
          description: Tax calculation method
          x-mappedTo: TAXMETHOD
          enum:
            - noTax
            - simpleTax
            - advancedTax
            - avaTax
            - VAT
          x-mappedToValues:
            - None
            - Simple tax
            - Advanced tax
            - Avalara
            - VAT or GST
          example: simpleTax
        taxSubmissionStartDate:
          type: string
          format: date
          description: Start date of first tax submission period
          x-mappedTo: STARTDATE
          example: '2023-01-01'
        lastUpdatedTaxDate:
          type: string
          format: date
          description: Last updated date for all the tax objects for this tax solution
          x-mappedTo: LASTUPDATE
          example: '2023-01-31'
        purchaseGLAccount:
          type: object
          description: General ledger account for input taxes.
          x-object: gl-account
          x-mappedTo: GLACCOUNTPURCHASE
          properties:
            id:
              type: string
              description: Account Number
              x-mappedTo: GLACCOUNTPURCHASE
            href:
              type: string
              description: Endpoint of the GL account.
              readOnly: true
              example: /objects/gl-account/12
        salesGLAccount:
          type: object
          description: GL account for output taxes
          x-object: gl-account
          x-mappedTo: GLACCOUNTSALE
          properties:
            id:
              type: string
              description: Account Number
              x-mappedTo: GLACCOUNTSALE
            href:
              type: string
              readOnly: true
    txn-currency:
      $ref: '#/components/schemas/txn-currency.s1.schema'
    txn-currency.s1.schema:
      title: txn-currency
      x-mappedTo: trxcurrencies
      type: object
      description: Transaction currency definition.
      properties:
        key:
          type: string
          description: >-
            System-assigned key for the transaction currency. Used to identify
            the currency in URLs or JSON bodies for all operations involving
            this currency.
          readOnly: true
          x-mappedTo: RECORDNO
        id:
          type: string
          description: Unique currency code.
          x-mutable: false
          x-mappedTo: CODE
        name:
          type: string
          description: The common name of the currency.
          x-mappedTo: FULLNAME
        ISOCode:
          type: string
          description: ISO-4127 numeric code
          x-mappedTo: ISO_CODE
          example: '826'
        format:
          type: object
          description: >-
            Properties of the currency, including the currency symbol, the
            decimal separator, and whether the currency symbol displays to the
            left or the right of the number.
          properties:
            currencyFormat:
              type: string
              description: Currency format
              enum:
                - australian
                - brazilian
                - british
                - canadian
                - danish
                - dutch
                - european
                - finnish
                - flemish
                - french
                - frenchCanadian
                - german
                - greek
                - indian
                - italian
                - mexican
                - norwegian
                - southAfrica
                - spanish
                - swedish
                - swissFrench
                - swissGerman
                - swissItalian
                - swissFranc
                - unitedStates
                - unitedArabEmirates
                - custom
              x-mappedToValues:
                - Australian
                - Brazilian
                - British
                - Canadian
                - Danish
                - Dutch
                - European
                - Finnish
                - Flemish
                - French
                - French Canadian
                - German
                - Greek
                - Indian
                - Italian
                - Mexican
                - Norwegian
                - South Africa
                - Spanish
                - Swedish
                - Swiss French
                - Swiss German
                - Swiss Italian
                - Swiss Franc
                - United States
                - United Arab Emirates
                - Custom
              x-mappedTo: FORMAT
              example: british
            currencyUnit:
              type: string
              description: The major unit of currency, such as dollars, pounds, or yen.
              x-mappedTo: NAME
              example: pounds
            currencySubUnit:
              type: string
              description: The sub-unit of currency, such as cents, pence, or centavos.
              x-mappedTo: SUBNAME
              example: pence
            currencySymbol:
              type: string
              description: The standard currency symbol, such as $, £,€, or ¥.
              x-mappedTo: SYMBOL
              example: £
            thousandSeparator:
              type: string
              description: >-
                The symbol that separates numbers into thousands - usually the
                comma.
              x-mappedTo: THOUSAND_SEP
              example: ','
            decimalSeparator:
              type: string
              description: The symbol that separates decimals - usually the "."
              x-mappedTo: DECIMAL_SEP
              example: .
            alignment:
              type: string
              description: >-
                Controls whether the currency symbol displays to the left or the
                right of the number.
              enum:
                - left
                - right
              x-mappedToValues:
                - '1'
                - '2'
              x-mappedTo: ALIGNMENT
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    user-group:
      $ref: '#/components/schemas/user-group.s1.schema'
    user-groupRequiredProperties:
      type: object
      required:
        - id
    user-group.s1.schema:
      title: user-group
      x-mappedTo: usergroup
      type: object
      description: List of users assigned to user groups.
      properties:
        key:
          type: string
          description: >-
            System-assigned unique key for the user group. Used to identify the
            group in URLs or JSON bodies for all operations on the user group.
          readOnly: true
          x-mappedTo: RECORDNO
          example: '21'
        id:
          type: string
          description: Name of the user group.
          x-mappedTo: NAME
          x-mutable: false
          example: AP
        href:
          type: string
          description: Endpoint for this user group.
          readOnly: true
          example: /objects/user-group/21
        description:
          type: string
          description: Description of the user group.
          x-mappedTo: DESCR
          example: Accounts Payable
        roles:
          type: array
          description: >-
            List of roles assigned to the user group. All users in the group
            inherit the permissions defined by the roles. Only applies to
            companies that use role-based permissions instead of user-based
            permissions.
          x-mappedTo: USERGROUPROLES
          x-schemaOverride: true
          x-object: role
          items:
            type: object
            properties:
              key:
                type: string
                description: Unique key of the role.
                x-mappedTo: ROLEKEY
                example: '7'
              id:
                type: string
                description: Name of the role.
                x-mappedTo: ROLENAME
                readOnly: true
                example: Warehouse users
              href:
                type: string
                description: Endpoint of the role.
                readOnly: true
                example: /objects/role/7
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
    user:
      $ref: '#/components/schemas/user.s1.schema'
    userRequiredProperties:
      type: object
      properties:
        contact:
          required:
            - lastName
            - firstName
            - email1
      required:
        - id
        - userName
        - userType
    user.s1.schema:
      title: user
      description: User information
      x-mappedTo: userinfo
      type: object
      properties:
        key:
          description: User key
          type: string
          x-mappedTo: RECORDNO
          example: '29'
          readOnly: true
        id:
          description: User Login Id
          type: string
          x-mappedTo: LOGINID
          x-mutable: false
          example: john.doe
        userName:
          description: Username
          type: string
          x-mappedTo: DESCRIPTION
          example: John Doe
        adminPrivileges:
          description: User admin privileges
          type: string
          x-mappedTo: ADMIN
          enum:
            - 'off'
            - limited
            - full
          x-mappedToValues:
            - 'false'
            - 'true'
            - Full
          example: 'off'
        userType:
          description: User type
          type: string
          x-mappedTo: USERTYPE
          enum:
            - business
            - employee
            - viewOnly
            - dashboard
            - projectManager
            - paymentApprover
            - platform
            - CRM
            - warehouse
          x-mappedToValues:
            - business user
            - employee user
            - view only user
            - dashboard user
            - project manager user
            - payment approver
            - platform user
            - CRM user
            - warehouse user
          example: employee
        status:
          type: string
          enum:
            - active
            - inactive
            - lockedOut
          x-mappedToValues:
            - active
            - inactive
            - lockedout
          description: Record status. (Default= active)
          x-mappedTo: STATUS
          example: active
        webServices:
          type: object
          description: Web Services / API properties
          properties:
            isEnabled:
              description: Whether the user can be used for web services (API)
              type: boolean
              x-mappedTo: VISIBLE
              x-mappedToType: string
              default: true
              example: true
            isRestricted:
              description: Restrict user access to Web Services only
              type: boolean
              x-mappedTo: LOGINDISABLED
              x-mappedToType: string
              default: false
              example: true
        password:
          type: object
          description: Password properties
          properties:
            neverExpires:
              type: boolean
              description: Password will not expire if set to true
              x-mappedTo: PWDNEVEREXPIRES
              example: true
            requiresReset:
              type: boolean
              description: Reset password required
              x-mappedTo: RESETPASSWORD
              example: false
        sso:
          type: object
          description: SSO settings
          properties:
            isSSOEnabled:
              type: boolean
              description: Whether SSO is enabled for the user
              x-mappedTo: SSO_ENABLED
              example: true
              default: false
            federatedSSOId:
              type: string
              description: Federated SSO user id
              x-mappedTo: SSO_FEDERATED_ID
              example: john.doe
        entityAccess:
          type: object
          description: Entity level restrictions
          properties:
            allowUnrestrictedAccess:
              description: >-
                Restricted users means the user is restricted to 1 or more
                entities
              type: boolean
              x-mappedTo: UNRESTRICTED
              default: true
              example: true
            allowToplevelAccess:
              description: Enable access to top-level. Makes sense for restricted users
              type: boolean
              x-mappedTo: TOPLEVELACCESS
              default: false
              example: false
        contact:
          description: User contact information
          allOf:
            - $ref: '#/components/schemas/contactref.s1.schema'
            - type: object
              x-mappedToPrefix: CONTACTINFO
              x-object: contact
              x-mappedTo: contact
              x-mappedToKey: CONTACTKEY
          type: object
        trustedDevices:
          type: string
          x-mappedTo: MFA_NOTRUST
          description: >-
            Allow trusted devices. The user can specify whether to use the
            company setting or have it enforced
          enum:
            - companyDefault
            - always
            - never
          x-mappedToValues:
            - none
            - always
            - never
          default: companyDefault
          example: always
        isChatterDisabled:
          type: boolean
          x-mappedTo: CHATTER_DISABLED
          description: Prevent this user from accessing the Intacct Collaborate feature
          x-mappedToType: string
          default: false
          example: false
        hideOtherDepartmentTransactions:
          type: boolean
          x-mappedTo: HIDENODEPT
          description: Hide transactions that do not belong to the user's departments
          default: false
          example: false
        locations:
          type: array
          x-mappedTo: USERLOCATIONS
          x-schemaOverride: true
          x-object: location
          items:
            type: object
            properties:
              key:
                type: string
                x-mappedTo: LOCATIONKEY
              id:
                type: string
                x-mappedTo: LOCATIONID
              href:
                type: string
                readOnly: true
                example: /objects/location/21
        departments:
          type: array
          x-mappedTo: USERDEPARTMENTS
          x-schemaOverride: true
          x-object: department
          items:
            type: object
            properties:
              key:
                type: string
                x-mappedTo: DEPTKEY
              id:
                type: string
                x-mappedTo: DEPARTMENTID
              href:
                type: string
                readOnly: true
                example: /objects/department/7
        territories:
          type: array
          x-mappedTo: USERTERRITORIES
          x-schemaOverride: true
          x-object: territory
          items:
            type: object
            properties:
              key:
                type: string
                x-mappedTo: TERRITORYKEY
              id:
                type: string
                x-mappedTo: TERRITORYID
              href:
                type: string
                readOnly: true
                example: /objects/territory/7
        roles:
          type: array
          description: List of roles assigned to the user.
          x-mappedTo: USERROLES
          x-schemaOverride: true
          x-object: role
          items:
            type: object
            properties:
              key:
                type: string
                x-mappedTo: ROLEKEY
              id:
                type: string
                x-mappedTo: ROLENAME
              href:
                type: string
                readOnly: true
                example: /objects/role/7
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
        href:
          type: string
          readOnly: true
          description: URL for user
          example: /objects/user/21
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
  parameters:
    key:
      name: key
      in: path
      required: true
      description: User key
      schema:
        type: string
        pattern: (\/-?\d+)?
