openapi: 3.0.0
info:
  title: attachment
  description: attachment API
  version: '1.0'
  contact:
    email: tim.miller@sage.com
    name: Tim Miller
servers:
  - url: http://localhost:3000
tags:
  - name: Attachments
    description: Attachment description -- explain what it's for and how it's used.
paths:
  /objects/attachment/{key}:
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: System-assigned key for the attachment.
    get:
      summary: Get an attachment
      description: Returns detailed information for a particular attachment.
      tags:
        - Attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Details of the attachment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/attachment.s1.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-attachment-key
    patch:
      summary: Update a/an attachment
      description: Updates an existing attachment by setting field values. Any fields not provided remain unchanged.
      tags:
        - Attachments
      operationId: patch-objects-attachment-key
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/attachment.s1.schema'
                - type: object
                  properties:
                    id:
                      readOnly: true
            examples:
              Updates a/an attachment: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Updated attachment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples:
                Updated attachment: {}
        '400':
          $ref: '#/components/responses/400error'
    delete:
      summary: Delete an attachment
      description: Deletes a attachment.
      tags:
        - Attachments
      operationId: delete-objects-attachment-key
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400error'
  /objects/attachment:
    get:
      summary: List attachments
      description: Returns a collection with a key, ID, and link for each attachment.
      tags:
        - Attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: List of attachment objects
                properties:
                  ia::result:
                    type: array
                    items:
                      $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata-pages.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      operationId: get-objects-attachment
    post:
      summary: Create an attachment
      description: Creates a new attachment.
      tags:
        - Attachments
      operationId: post-objects-attachment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: New attachment
                properties:
                  ia::result:
                    $ref: '#/components/schemas/object-reference.schema'
                  ia::meta:
                    $ref: '#/components/schemas/metadata.schema'
              examples: {}
        '400':
          $ref: '#/components/responses/400error'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/attachment.s1.schema'
                - $ref: '#/components/schemas/attachmentRequiredProperties'
            examples: {}
components:
  schemas:
    attachment:
      $ref: '#/components/schemas/attachment.s1.schema'
    attachmentRequiredProperties:
      type: object
      required:
        - id
    file.s1.schema:
      title: file
      x-mappedTo: supportingdocumentdata
      x-ownedBy: attachment
      type: object
      description: a single file in Intacct, aka supporting document
      properties:
        key:
          type: string
          description: File Key
          x-mappedTo: RECORDNO
          example: '1'
          readOnly: true
        id:
          type: string
          description: File ID
          x-mappedTo: RECORDNO
          x-mutable: false
          example: '1'
          readOnly: true
        href:
          type: string
          example: /objects/file/1
          readOnly: true
        data:
          type: string
          description: Data
          x-mappedTo: DATA
          format: base64zip
          x-mutable: false
          example: Y2V2YSwgYWx0Y2V2YQ0Kc2kgaW5jYSBjZXZh
        size:
          type: integer
          description: Size in bytes
          x-mappedTo: SIZE
          example: 27
        name:
          type: string
          description: File name with extension
          x-mappedTo: NAME
          example: test.txt
        attachment:
          title: attachment
          type: object
          x-mappedTo: supportingdocuments
          x-object: attachment
          properties:
            id:
              type: string
              readOnly: true
              x-mappedTo: SUPDOCID
            key:
              type: string
              x-mappedTo: DOCUMENTKEY
            href:
              type: string
              example: /objects/attachment/1
              readOnly: true
    audit.s1.schema:
      type: object
      title: audit
      properties:
        createdDateTime:
          description: Time of the submission
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENCREATED
          readOnly: true
        modifiedDateTime:
          description: Time of the modification
          type: string
          format: date-time
          example: '2022-04-20T16:20:00Z'
          x-mappedTo: WHENMODIFIED
          readOnly: true
        createdBy:
          description: User who created this
          type: string
          example: '1'
          x-mappedTo: CREATEDBY
          readOnly: true
        modifiedBy:
          description: User who modified this
          type: string
          example: '95'
          x-mappedTo: MODIFIEDBY
          readOnly: true
      readOnly: true
    attachment.s1.schema:
      title: attachment
      x-mappedTo: supportingdocuments
      type: object
      description: Container to hold multiple files
      properties:
        key:
          type: string
          description: Attachment Key test
          readOnly: true
          x-mappedTo: RECORDNO
          example: '1'
        id:
          type: string
          description: Attachment ID
          x-mappedTo: DOCUMENTID
          x-mutable: false
          example: SupDoc1
        name:
          type: string
          description: Name
          x-mappedTo: DOCUMENTNAME
          example: Attach-01
        href:
          type: string
          readOnly: true
          example: /objects/attachment/1
        folder:
          type: object
          description: Folder
          x-object: folder
          properties:
            key:
              type: string
              x-mappedTo: GROUPRECORDKEY
              example: '4'
            id:
              type: string
              x-mappedTo: GROUPKEY
              readOnly: true
              example: SupDocFolder1
            href:
              type: string
              readOnly: true
              example: /objects/folder/4
        description:
          type: string
          description: Description
          x-mappedTo: DESCRIPTION
          example: Attachment Attach-01
        files:
          type: array
          description: Attached files
          x-mappedTo: ATTACHMENTS
          x-object: file
          items:
            $ref: '#/components/schemas/file.s1.schema'
        audit:
          $ref: '#/components/schemas/audit.s1.schema'
      examples: []
    metadata.schema:
      title: metadata
      description: Meta data for response
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Count
          readOnly: true
          example: 3
    error-response.schema:
      title: error-response
      type: object
      description: Error response
      properties:
        ia::error:
          type: object
          properties:
            code:
              type: string
              example: invalidRequest
            message:
              type: string
              example: Malformed URL
            supportId:
              type: string
              example: sQrM9%7EYdh5oDEWVb80mrn9xuHjoAAAABBQ
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: TODO
                  message:
                    type: string
                    example: TODO
                  correction:
                    type: string
                    example: TODO
    object-reference.schema:
      title: object-reference
      type: object
      description: Reference Object definition
      properties:
        key:
          type: string
        id:
          type: string
        href:
          type: string
          readOnly: true
    metadata-pages.schema:
      title: metadata-pages
      description: Meta data for collection response
      type: object
      allOf:
        - $ref: '#/components/schemas/metadata.schema'
        - type: object
          properties:
            start:
              type: integer
              description: Start Element Number
              x-mappedTo: null
              readOnly: true
              example: 1
            pageSize:
              type: integer
              description: Page Size
              x-mappedTo: null
              readOnly: true
              example: 100
            next:
              type: integer
              description: Next Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: 101
            previous:
              type: integer
              description: Previous Element Number
              x-mappedTo: null
              readOnly: true
              nullable: true
              example: null
  responses:
    400error:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error-response.schema'
